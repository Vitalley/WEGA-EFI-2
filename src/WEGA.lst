

Microchip Technology PIC18 PRO Macro Assembler V1.33 build 59893 
                                                                                               Sun Aug 14 12:29:26 2022

Microchip Technology Omniscient Code Generator (PRO mode) build 59893
     1                           	processor	18F46K22
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    78                           	psect	param0,global,class=BANK0,space=1,delta=1
    79  0000                     
    80                           	psect	idataBANK1
    81  001D28                     __pidataBANK1:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _VE_table
    85  001D28  B3                 	db	179
    86  001D29  B3                 	db	179
    87  001D2A  B3                 	db	179
    88  001D2B  B3                 	db	179
    89  001D2C  B3                 	db	179
    90  001D2D  B3                 	db	179
    91  001D2E  B3                 	db	179
    92  001D2F  B3                 	db	179
    93  001D30  B3                 	db	179
    94  001D31  B3                 	db	179
    95  001D32  B3                 	db	179
    96  001D33  B3                 	db	179
    97  001D34  B3                 	db	179
    98  001D35  B3                 	db	179
    99  001D36  B3                 	db	179
   100  001D37  B3                 	db	179
   101                           
   102                           	psect	mediumconst
   103  00FBC2                     __pmediumconst:
   104                           	opt stack 0
   105  00FBC2  00                 	db	0
   106  00FBC3                     _Ign0:
   107                           	opt stack 0
   108  00FBC3  09                 	db	9
   109  00FBC4  09                 	db	9
   110  00FBC5  09                 	db	9
   111  00FBC6  0A                 	db	10
   112  00FBC7  10                 	db	16
   113  00FBC8  11                 	db	17
   114  00FBC9  12                 	db	18
   115  00FBCA  14                 	db	20
   116  00FBCB  14                 	db	20
   117  00FBCC  15                 	db	21
   118  00FBCD  18                 	db	24
   119  00FBCE  1C                 	db	28
   120  00FBCF  20                 	db	32
   121  00FBD0  23                 	db	35
   122  00FBD1  26                 	db	38
   123  00FBD2  2C                 	db	44
   124  00FBD3  33                 	db	51
   125  00FBD4  3A                 	db	58
   126  00FBD5  41                 	db	65
   127  00FBD6  43                 	db	67
   128  00FBD7  46                 	db	70
   129  00FBD8  4A                 	db	74
   130  00FBD9  4E                 	db	78
   131  00FBDA  52                 	db	82
   132  00FBDB  54                 	db	84
   133  00FBDC  56                 	db	86
   134  00FBDD  59                 	db	89
   135  00FBDE  59                 	db	89
   136  00FBDF  59                 	db	89
   137  00FBE0  5D                 	db	93
   138  00FBE1  5F                 	db	95
   139  00FBE2  F9                 	db	249
   140  00FBE3  0C                 	db	12
   141  00FBE4  0C                 	db	12
   142  00FBE5  0C                 	db	12
   143  00FBE6  0D                 	db	13
   144  00FBE7  11                 	db	17
   145  00FBE8  17                 	db	23
   146  00FBE9  18                 	db	24
   147  00FBEA  19                 	db	25
   148  00FBEB  24                 	db	36
   149  00FBEC  30                 	db	48
   150  00FBED  34                 	db	52
   151  00FBEE  38                 	db	56
   152  00FBEF  3C                 	db	60
   153  00FBF0  42                 	db	66
   154  00FBF1  49                 	db	73
   155  00FBF2  4C                 	db	76
   156  00FBF3  4F                 	db	79
   157  00FBF4  50                 	db	80
   158  00FBF5  52                 	db	82
   159  00FBF6  54                 	db	84
   160  00FBF7  57                 	db	87
   161  00FBF8  5B                 	db	91
   162  00FBF9  5F                 	db	95
   163  00FBFA  63                 	db	99
   164  00FBFB  65                 	db	101
   165  00FBFC  67                 	db	103
   166  00FBFD  6A                 	db	106
   167  00FBFE  6B                 	db	107
   168  00FBFF  6D                 	db	109
   169  00FC00  70                 	db	112
   170  00FC01  70                 	db	112
   171  00FC02  FF                 	db	255
   172  00FC03  16                 	db	22
   173  00FC04  1A                 	db	26
   174  00FC05  1E                 	db	30
   175  00FC06  22                 	db	34
   176  00FC07  21                 	db	33
   177  00FC08  2A                 	db	42
   178  00FC09  2F                 	db	47
   179  00FC0A  35                 	db	53
   180  00FC0B  39                 	db	57
   181  00FC0C  3D                 	db	61
   182  00FC0D  41                 	db	65
   183  00FC0E  45                 	db	69
   184  00FC0F  4A                 	db	74
   185  00FC10  50                 	db	80
   186  00FC11  56                 	db	86
   187  00FC12  59                 	db	89
   188  00FC13  5D                 	db	93
   189  00FC14  5F                 	db	95
   190  00FC15  61                 	db	97
   191  00FC16  63                 	db	99
   192  00FC17  66                 	db	102
   193  00FC18  69                 	db	105
   194  00FC19  6D                 	db	109
   195  00FC1A  71                 	db	113
   196  00FC1B  74                 	db	116
   197  00FC1C  78                 	db	120
   198  00FC1D  7C                 	db	124
   199  00FC1E  7D                 	db	125
   200  00FC1F  7F                 	db	127
   201  00FC20  81                 	db	129
   202  00FC21  81                 	db	129
   203  00FC22  6E                 	db	110
   204  00FC23  19                 	db	25
   205  00FC24  1E                 	db	30
   206  00FC25  23                 	db	35
   207  00FC26  28                 	db	40
   208  00FC27  30                 	db	48
   209  00FC28  33                 	db	51
   210  00FC29  37                 	db	55
   211  00FC2A  3C                 	db	60
   212  00FC2B  40                 	db	64
   213  00FC2C  45                 	db	69
   214  00FC2D  49                 	db	73
   215  00FC2E  4D                 	db	77
   216  00FC2F  52                 	db	82
   217  00FC30  5A                 	db	90
   218  00FC31  63                 	db	99
   219  00FC32  66                 	db	102
   220  00FC33  6A                 	db	106
   221  00FC34  6C                 	db	108
   222  00FC35  6F                 	db	111
   223  00FC36  71                 	db	113
   224  00FC37  73                 	db	115
   225  00FC38  76                 	db	118
   226  00FC39  7A                 	db	122
   227  00FC3A  7E                 	db	126
   228  00FC3B  81                 	db	129
   229  00FC3C  84                 	db	132
   230  00FC3D  87                 	db	135
   231  00FC3E  88                 	db	136
   232  00FC3F  89                 	db	137
   233  00FC40  8B                 	db	139
   234  00FC41  8C                 	db	140
   235  00FC42  7F                 	db	127
   236  00FC43  20                 	db	32
   237  00FC44  25                 	db	37
   238  00FC45  2A                 	db	42
   239  00FC46  2F                 	db	47
   240  00FC47  34                 	db	52
   241  00FC48  39                 	db	57
   242  00FC49  3D                 	db	61
   243  00FC4A  42                 	db	66
   244  00FC4B  46                 	db	70
   245  00FC4C  4B                 	db	75
   246  00FC4D  50                 	db	80
   247  00FC4E  55                 	db	85
   248  00FC4F  5A                 	db	90
   249  00FC50  62                 	db	98
   250  00FC51  6A                 	db	106
   251  00FC52  6C                 	db	108
   252  00FC53  6F                 	db	111
   253  00FC54  75                 	db	117
   254  00FC55  7B                 	db	123
   255  00FC56  7D                 	db	125
   256  00FC57  7F                 	db	127
   257  00FC58  82                 	db	130
   258  00FC59  86                 	db	134
   259  00FC5A  8A                 	db	138
   260  00FC5B  8D                 	db	141
   261  00FC5C  90                 	db	144
   262  00FC5D  93                 	db	147
   263  00FC5E  94                 	db	148
   264  00FC5F  95                 	db	149
   265  00FC60  97                 	db	151
   266  00FC61  97                 	db	151
   267  00FC62  00                 	db	0
   268  00FC63  23                 	db	35
   269  00FC64  29                 	db	41
   270  00FC65  2F                 	db	47
   271  00FC66  35                 	db	53
   272  00FC67  39                 	db	57
   273  00FC68  44                 	db	68
   274  00FC69  48                 	db	72
   275  00FC6A  4C                 	db	76
   276  00FC6B  50                 	db	80
   277  00FC6C  54                 	db	84
   278  00FC6D  59                 	db	89
   279  00FC6E  5E                 	db	94
   280  00FC6F  64                 	db	100
   281  00FC70  6C                 	db	108
   282  00FC71  74                 	db	116
   283  00FC72  77                 	db	119
   284  00FC73  7A                 	db	122
   285  00FC74  80                 	db	128
   286  00FC75  87                 	db	135
   287  00FC76  89                 	db	137
   288  00FC77  8B                 	db	139
   289  00FC78  8E                 	db	142
   290  00FC79  92                 	db	146
   291  00FC7A  96                 	db	150
   292  00FC7B  99                 	db	153
   293  00FC7C  9C                 	db	156
   294  00FC7D  9F                 	db	159
   295  00FC7E  A0                 	db	160
   296  00FC7F  A1                 	db	161
   297  00FC80  A2                 	db	162
   298  00FC81  A2                 	db	162
   299  00FC82  00                 	db	0
   300  00FC83  27                 	db	39
   301  00FC84  2C                 	db	44
   302  00FC85  32                 	db	50
   303  00FC86  38                 	db	56
   304  00FC87  40                 	db	64
   305  00FC88  46                 	db	70
   306  00FC89  4C                 	db	76
   307  00FC8A  52                 	db	82
   308  00FC8B  56                 	db	86
   309  00FC8C  5B                 	db	91
   310  00FC8D  60                 	db	96
   311  00FC8E  66                 	db	102
   312  00FC8F  6C                 	db	108
   313  00FC90  73                 	db	115
   314  00FC91  7A                 	db	122
   315  00FC92  7E                 	db	126
   316  00FC93  82                 	db	130
   317  00FC94  89                 	db	137
   318  00FC95  90                 	db	144
   319  00FC96  92                 	db	146
   320  00FC97  94                 	db	148
   321  00FC98  97                 	db	151
   322  00FC99  9A                 	db	154
   323  00FC9A  9E                 	db	158
   324  00FC9B  A1                 	db	161
   325  00FC9C  A4                 	db	164
   326  00FC9D  A8                 	db	168
   327  00FC9E  A8                 	db	168
   328  00FC9F  A9                 	db	169
   329  00FCA0  AA                 	db	170
   330  00FCA1  AB                 	db	171
   331  00FCA2  00                 	db	0
   332  00FCA3  29                 	db	41
   333  00FCA4  2D                 	db	45
   334  00FCA5  31                 	db	49
   335  00FCA6  36                 	db	54
   336  00FCA7  42                 	db	66
   337  00FCA8  47                 	db	71
   338  00FCA9  4F                 	db	79
   339  00FCAA  57                 	db	87
   340  00FCAB  5C                 	db	92
   341  00FCAC  61                 	db	97
   342  00FCAD  66                 	db	102
   343  00FCAE  6C                 	db	108
   344  00FCAF  72                 	db	114
   345  00FCB0  79                 	db	121
   346  00FCB1  80                 	db	128
   347  00FCB2  83                 	db	131
   348  00FCB3  87                 	db	135
   349  00FCB4  8E                 	db	142
   350  00FCB5  96                 	db	150
   351  00FCB6  97                 	db	151
   352  00FCB7  99                 	db	153
   353  00FCB8  9C                 	db	156
   354  00FCB9  9F                 	db	159
   355  00FCBA  A3                 	db	163
   356  00FCBB  A6                 	db	166
   357  00FCBC  AA                 	db	170
   358  00FCBD  AE                 	db	174
   359  00FCBE  AE                 	db	174
   360  00FCBF  AF                 	db	175
   361  00FCC0  AF                 	db	175
   362  00FCC1  AD                 	db	173
   363  00FCC2  00                 	db	0
   364  00FCC3  2B                 	db	43
   365  00FCC4  2F                 	db	47
   366  00FCC5  34                 	db	52
   367  00FCC6  39                 	db	57
   368  00FCC7  42                 	db	66
   369  00FCC8  47                 	db	71
   370  00FCC9  50                 	db	80
   371  00FCCA  5A                 	db	90
   372  00FCCB  60                 	db	96
   373  00FCCC  67                 	db	103
   374  00FCCD  6C                 	db	108
   375  00FCCE  71                 	db	113
   376  00FCCF  77                 	db	119
   377  00FCD0  7C                 	db	124
   378  00FCD1  81                 	db	129
   379  00FCD2  85                 	db	133
   380  00FCD3  8A                 	db	138
   381  00FCD4  90                 	db	144
   382  00FCD5  96                 	db	150
   383  00FCD6  99                 	db	153
   384  00FCD7  9D                 	db	157
   385  00FCD8  A0                 	db	160
   386  00FCD9  A3                 	db	163
   387  00FCDA  A7                 	db	167
   388  00FCDB  AA                 	db	170
   389  00FCDC  AE                 	db	174
   390  00FCDD  B2                 	db	178
   391  00FCDE  B2                 	db	178
   392  00FCDF  B3                 	db	179
   393  00FCE0  B3                 	db	179
   394  00FCE1  B4                 	db	180
   395  00FCE2  00                 	db	0
   396  00FCE3  27                 	db	39
   397  00FCE4  2C                 	db	44
   398  00FCE5  32                 	db	50
   399  00FCE6  38                 	db	56
   400  00FCE7  42                 	db	66
   401  00FCE8  45                 	db	69
   402  00FCE9  4F                 	db	79
   403  00FCEA  5A                 	db	90
   404  00FCEB  60                 	db	96
   405  00FCEC  67                 	db	103
   406  00FCED  6C                 	db	108
   407  00FCEE  72                 	db	114
   408  00FCEF  78                 	db	120
   409  00FCF0  7C                 	db	124
   410  00FCF1  81                 	db	129
   411  00FCF2  85                 	db	133
   412  00FCF3  8A                 	db	138
   413  00FCF4  90                 	db	144
   414  00FCF5  96                 	db	150
   415  00FCF6  99                 	db	153
   416  00FCF7  9D                 	db	157
   417  00FCF8  A0                 	db	160
   418  00FCF9  A3                 	db	163
   419  00FCFA  A7                 	db	167
   420  00FCFB  AA                 	db	170
   421  00FCFC  AE                 	db	174
   422  00FCFD  B2                 	db	178
   423  00FCFE  B2                 	db	178
   424  00FCFF  B3                 	db	179
   425  00FD00  B3                 	db	179
   426  00FD01  B4                 	db	180
   427  00FD02  00                 	db	0
   428  00FD03  2A                 	db	42
   429  00FD04  2E                 	db	46
   430  00FD05  33                 	db	51
   431  00FD06  38                 	db	56
   432  00FD07  42                 	db	66
   433  00FD08  46                 	db	70
   434  00FD09  50                 	db	80
   435  00FD0A  5A                 	db	90
   436  00FD0B  60                 	db	96
   437  00FD0C  67                 	db	103
   438  00FD0D  6C                 	db	108
   439  00FD0E  72                 	db	114
   440  00FD0F  78                 	db	120
   441  00FD10  7C                 	db	124
   442  00FD11  81                 	db	129
   443  00FD12  85                 	db	133
   444  00FD13  8A                 	db	138
   445  00FD14  90                 	db	144
   446  00FD15  96                 	db	150
   447  00FD16  99                 	db	153
   448  00FD17  9D                 	db	157
   449  00FD18  A0                 	db	160
   450  00FD19  A3                 	db	163
   451  00FD1A  A7                 	db	167
   452  00FD1B  AA                 	db	170
   453  00FD1C  AD                 	db	173
   454  00FD1D  B1                 	db	177
   455  00FD1E  B2                 	db	178
   456  00FD1F  B3                 	db	179
   457  00FD20  B3                 	db	179
   458  00FD21  B4                 	db	180
   459  00FD22  00                 	db	0
   460  00FD23  28                 	db	40
   461  00FD24  2D                 	db	45
   462  00FD25  32                 	db	50
   463  00FD26  38                 	db	56
   464  00FD27  42                 	db	66
   465  00FD28  47                 	db	71
   466  00FD29  50                 	db	80
   467  00FD2A  5A                 	db	90
   468  00FD2B  60                 	db	96
   469  00FD2C  67                 	db	103
   470  00FD2D  6C                 	db	108
   471  00FD2E  72                 	db	114
   472  00FD2F  78                 	db	120
   473  00FD30  7C                 	db	124
   474  00FD31  81                 	db	129
   475  00FD32  85                 	db	133
   476  00FD33  8A                 	db	138
   477  00FD34  90                 	db	144
   478  00FD35  96                 	db	150
   479  00FD36  99                 	db	153
   480  00FD37  9D                 	db	157
   481  00FD38  A0                 	db	160
   482  00FD39  A3                 	db	163
   483  00FD3A  A7                 	db	167
   484  00FD3B  AA                 	db	170
   485  00FD3C  AD                 	db	173
   486  00FD3D  B1                 	db	177
   487  00FD3E  B2                 	db	178
   488  00FD3F  B3                 	db	179
   489  00FD40  B3                 	db	179
   490  00FD41  B4                 	db	180
   491  00FD42  00                 	db	0
   492  00FD43  27                 	db	39
   493  00FD44  2C                 	db	44
   494  00FD45  32                 	db	50
   495  00FD46  38                 	db	56
   496  00FD47  42                 	db	66
   497  00FD48  47                 	db	71
   498  00FD49  50                 	db	80
   499  00FD4A  5A                 	db	90
   500  00FD4B  60                 	db	96
   501  00FD4C  67                 	db	103
   502  00FD4D  6C                 	db	108
   503  00FD4E  72                 	db	114
   504  00FD4F  78                 	db	120
   505  00FD50  7C                 	db	124
   506  00FD51  81                 	db	129
   507  00FD52  85                 	db	133
   508  00FD53  8A                 	db	138
   509  00FD54  90                 	db	144
   510  00FD55  96                 	db	150
   511  00FD56  99                 	db	153
   512  00FD57  9D                 	db	157
   513  00FD58  A0                 	db	160
   514  00FD59  A3                 	db	163
   515  00FD5A  A7                 	db	167
   516  00FD5B  AA                 	db	170
   517  00FD5C  AD                 	db	173
   518  00FD5D  B1                 	db	177
   519  00FD5E  B2                 	db	178
   520  00FD5F  B3                 	db	179
   521  00FD60  B3                 	db	179
   522  00FD61  B4                 	db	180
   523  00FD62  00                 	db	0
   524  00FD63  27                 	db	39
   525  00FD64  2C                 	db	44
   526  00FD65  32                 	db	50
   527  00FD66  38                 	db	56
   528  00FD67  42                 	db	66
   529  00FD68  48                 	db	72
   530  00FD69  51                 	db	81
   531  00FD6A  5A                 	db	90
   532  00FD6B  60                 	db	96
   533  00FD6C  67                 	db	103
   534  00FD6D  6C                 	db	108
   535  00FD6E  72                 	db	114
   536  00FD6F  78                 	db	120
   537  00FD70  7C                 	db	124
   538  00FD71  81                 	db	129
   539  00FD72  85                 	db	133
   540  00FD73  8A                 	db	138
   541  00FD74  90                 	db	144
   542  00FD75  96                 	db	150
   543  00FD76  99                 	db	153
   544  00FD77  9D                 	db	157
   545  00FD78  A0                 	db	160
   546  00FD79  A3                 	db	163
   547  00FD7A  A7                 	db	167
   548  00FD7B  AA                 	db	170
   549  00FD7C  AD                 	db	173
   550  00FD7D  B1                 	db	177
   551  00FD7E  B2                 	db	178
   552  00FD7F  B3                 	db	179
   553  00FD80  B3                 	db	179
   554  00FD81  B4                 	db	180
   555  00FD82  00                 	db	0
   556  00FD83  27                 	db	39
   557  00FD84  2C                 	db	44
   558  00FD85  32                 	db	50
   559  00FD86  38                 	db	56
   560  00FD87  42                 	db	66
   561  00FD88  49                 	db	73
   562  00FD89  51                 	db	81
   563  00FD8A  5A                 	db	90
   564  00FD8B  60                 	db	96
   565  00FD8C  67                 	db	103
   566  00FD8D  6C                 	db	108
   567  00FD8E  72                 	db	114
   568  00FD8F  78                 	db	120
   569  00FD90  7C                 	db	124
   570  00FD91  81                 	db	129
   571  00FD92  85                 	db	133
   572  00FD93  8A                 	db	138
   573  00FD94  90                 	db	144
   574  00FD95  96                 	db	150
   575  00FD96  99                 	db	153
   576  00FD97  9D                 	db	157
   577  00FD98  A0                 	db	160
   578  00FD99  A3                 	db	163
   579  00FD9A  A7                 	db	167
   580  00FD9B  AA                 	db	170
   581  00FD9C  AD                 	db	173
   582  00FD9D  B1                 	db	177
   583  00FD9E  B2                 	db	178
   584  00FD9F  B3                 	db	179
   585  00FDA0  B3                 	db	179
   586  00FDA1  B4                 	db	180
   587  00FDA2  00                 	db	0
   588  00FDA3  27                 	db	39
   589  00FDA4  2C                 	db	44
   590  00FDA5  32                 	db	50
   591  00FDA6  38                 	db	56
   592  00FDA7  43                 	db	67
   593  00FDA8  4A                 	db	74
   594  00FDA9  52                 	db	82
   595  00FDAA  5A                 	db	90
   596  00FDAB  60                 	db	96
   597  00FDAC  67                 	db	103
   598  00FDAD  6C                 	db	108
   599  00FDAE  72                 	db	114
   600  00FDAF  78                 	db	120
   601  00FDB0  7C                 	db	124
   602  00FDB1  81                 	db	129
   603  00FDB2  85                 	db	133
   604  00FDB3  8A                 	db	138
   605  00FDB4  90                 	db	144
   606  00FDB5  96                 	db	150
   607  00FDB6  9A                 	db	154
   608  00FDB7  9E                 	db	158
   609  00FDB8  A1                 	db	161
   610  00FDB9  A4                 	db	164
   611  00FDBA  A7                 	db	167
   612  00FDBB  AA                 	db	170
   613  00FDBC  AD                 	db	173
   614  00FDBD  B1                 	db	177
   615  00FDBE  B2                 	db	178
   616  00FDBF  B3                 	db	179
   617  00FDC0  B3                 	db	179
   618  00FDC1  B4                 	db	180
   619  00FDC2  00                 	db	0
   620  00FDC3                     __end_of_Ign0:
   621                           	opt stack 0
   622  00FDC3                     _Lambda:
   623                           	opt stack 0
   624  00FDC3  5E                 	db	94
   625  00FDC4  59                 	db	89
   626  00FDC5  54                 	db	84
   627  00FDC6  4F                 	db	79
   628  00FDC7  4A                 	db	74
   629  00FDC8  45                 	db	69
   630  00FDC9  3F                 	db	63
   631  00FDCA  3A                 	db	58
   632  00FDCB  35                 	db	53
   633  00FDCC  30                 	db	48
   634  00FDCD  2B                 	db	43
   635  00FDCE  26                 	db	38
   636  00FDCF  21                 	db	33
   637  00FDD0  1F                 	db	31
   638  00FDD1  1E                 	db	30
   639  00FDD2  1D                 	db	29
   640  00FDD3  1C                 	db	28
   641  00FDD4  1A                 	db	26
   642  00FDD5  19                 	db	25
   643  00FDD6  18                 	db	24
   644  00FDD7  16                 	db	22
   645  00FDD8  16                 	db	22
   646  00FDD9  16                 	db	22
   647  00FDDA  15                 	db	21
   648  00FDDB  15                 	db	21
   649  00FDDC  15                 	db	21
   650  00FDDD  14                 	db	20
   651  00FDDE  14                 	db	20
   652  00FDDF  14                 	db	20
   653  00FDE0  14                 	db	20
   654  00FDE1  13                 	db	19
   655  00FDE2  13                 	db	19
   656  00FDE3  13                 	db	19
   657  00FDE4  12                 	db	18
   658  00FDE5  12                 	db	18
   659  00FDE6  12                 	db	18
   660  00FDE7  11                 	db	17
   661  00FDE8  11                 	db	17
   662  00FDE9  11                 	db	17
   663  00FDEA  10                 	db	16
   664  00FDEB  10                 	db	16
   665  00FDEC  10                 	db	16
   666  00FDED  0F                 	db	15
   667  00FDEE  0F                 	db	15
   668  00FDEF  0F                 	db	15
   669  00FDF0  0E                 	db	14
   670  00FDF1  0E                 	db	14
   671  00FDF2  0E                 	db	14
   672  00FDF3  0D                 	db	13
   673  00FDF4  0D                 	db	13
   674  00FDF5  0D                 	db	13
   675  00FDF6  0C                 	db	12
   676  00FDF7  0C                 	db	12
   677  00FDF8  0B                 	db	11
   678  00FDF9  0B                 	db	11
   679  00FDFA  0A                 	db	10
   680  00FDFB  0A                 	db	10
   681  00FDFC  0A                 	db	10
   682  00FDFD  09                 	db	9
   683  00FDFE  09                 	db	9
   684  00FDFF  08                 	db	8
   685  00FE00  08                 	db	8
   686  00FE01  07                 	db	7
   687  00FE02  07                 	db	7
   688  00FE03  06                 	db	6
   689  00FE04  06                 	db	6
   690  00FE05  05                 	db	5
   691  00FE06  05                 	db	5
   692  00FE07  05                 	db	5
   693  00FE08  04                 	db	4
   694  00FE09  04                 	db	4
   695  00FE0A  03                 	db	3
   696  00FE0B  03                 	db	3
   697  00FE0C  02                 	db	2
   698  00FE0D  02                 	db	2
   699  00FE0E  01                 	db	1
   700  00FE0F  01                 	db	1
   701  00FE10  00                 	db	0
   702  00FE11  00                 	db	0
   703  00FE12  FF                 	db	255
   704  00FE13  FF                 	db	255
   705  00FE14  FF                 	db	255
   706  00FE15  FE                 	db	254
   707  00FE16  FE                 	db	254
   708  00FE17  FD                 	db	253
   709  00FE18  FD                 	db	253
   710  00FE19  FC                 	db	252
   711  00FE1A  FC                 	db	252
   712  00FE1B  FB                 	db	251
   713  00FE1C  FB                 	db	251
   714  00FE1D  FA                 	db	250
   715  00FE1E  FA                 	db	250
   716  00FE1F  FA                 	db	250
   717  00FE20  F9                 	db	249
   718  00FE21  F9                 	db	249
   719  00FE22  F8                 	db	248
   720  00FE23  F8                 	db	248
   721  00FE24  F8                 	db	248
   722  00FE25  F8                 	db	248
   723  00FE26  F8                 	db	248
   724  00FE27  F7                 	db	247
   725  00FE28  F7                 	db	247
   726  00FE29  F7                 	db	247
   727  00FE2A  F7                 	db	247
   728  00FE2B  F7                 	db	247
   729  00FE2C  F7                 	db	247
   730  00FE2D  F7                 	db	247
   731  00FE2E  F7                 	db	247
   732  00FE2F  F7                 	db	247
   733  00FE30  F7                 	db	247
   734  00FE31  F7                 	db	247
   735  00FE32  F7                 	db	247
   736  00FE33  F6                 	db	246
   737  00FE34  F6                 	db	246
   738  00FE35  F6                 	db	246
   739  00FE36  F6                 	db	246
   740  00FE37  F6                 	db	246
   741  00FE38  F6                 	db	246
   742  00FE39  F6                 	db	246
   743  00FE3A  F6                 	db	246
   744  00FE3B  F6                 	db	246
   745  00FE3C  F6                 	db	246
   746  00FE3D  F6                 	db	246
   747  00FE3E  F6                 	db	246
   748  00FE3F  F6                 	db	246
   749  00FE40  F5                 	db	245
   750  00FE41  F5                 	db	245
   751  00FE42  F5                 	db	245
   752  00FE43  F5                 	db	245
   753  00FE44  F5                 	db	245
   754  00FE45  F5                 	db	245
   755  00FE46  F5                 	db	245
   756  00FE47  F5                 	db	245
   757  00FE48  F5                 	db	245
   758  00FE49  F5                 	db	245
   759  00FE4A  F5                 	db	245
   760  00FE4B  F5                 	db	245
   761  00FE4C  F4                 	db	244
   762  00FE4D  F4                 	db	244
   763  00FE4E  F4                 	db	244
   764  00FE4F  F4                 	db	244
   765  00FE50  F4                 	db	244
   766  00FE51  F4                 	db	244
   767  00FE52  F4                 	db	244
   768  00FE53  F4                 	db	244
   769  00FE54  F4                 	db	244
   770  00FE55  F4                 	db	244
   771  00FE56  F4                 	db	244
   772  00FE57  F4                 	db	244
   773  00FE58  F4                 	db	244
   774  00FE59  F3                 	db	243
   775  00FE5A  F3                 	db	243
   776  00FE5B  F3                 	db	243
   777  00FE5C  F3                 	db	243
   778  00FE5D  F3                 	db	243
   779  00FE5E  F3                 	db	243
   780  00FE5F  F3                 	db	243
   781  00FE60  F3                 	db	243
   782  00FE61  F3                 	db	243
   783  00FE62  F3                 	db	243
   784  00FE63  F3                 	db	243
   785  00FE64  F2                 	db	242
   786  00FE65  F1                 	db	241
   787  00FE66  F0                 	db	240
   788  00FE67  EF                 	db	239
   789  00FE68  EE                 	db	238
   790  00FE69  EE                 	db	238
   791  00FE6A  EC                 	db	236
   792  00FE6B  EB                 	db	235
   793  00FE6C  EA                 	db	234
   794  00FE6D  E8                 	db	232
   795  00FE6E  E7                 	db	231
   796  00FE6F  E6                 	db	230
   797  00FE70  E5                 	db	229
   798  00FE71  E3                 	db	227
   799  00FE72  E1                 	db	225
   800  00FE73  DE                 	db	222
   801  00FE74  DC                 	db	220
   802  00FE75  E3                 	db	227
   803  00FE76  E1                 	db	225
   804  00FE77  DE                 	db	222
   805  00FE78  DC                 	db	220
   806  00FE79  CF                 	db	207
   807  00FE7A  CC                 	db	204
   808  00FE7B  CA                 	db	202
   809  00FE7C  C7                 	db	199
   810  00FE7D  C5                 	db	197
   811  00FE7E  C4                 	db	196
   812  00FE7F  C3                 	db	195
   813  00FE80  C1                 	db	193
   814  00FE81  C0                 	db	192
   815  00FE82  BF                 	db	191
   816  00FE83  BE                 	db	190
   817  00FE84  BD                 	db	189
   818  00FE85  BC                 	db	188
   819  00FE86  BB                 	db	187
   820  00FE87  BA                 	db	186
   821  00FE88  B9                 	db	185
   822  00FE89  B7                 	db	183
   823  00FE8A  B6                 	db	182
   824  00FE8B  B4                 	db	180
   825  00FE8C  B3                 	db	179
   826  00FE8D  B2                 	db	178
   827  00FE8E  B0                 	db	176
   828  00FE8F  AF                 	db	175
   829  00FE90  AF                 	db	175
   830  00FE91  AE                 	db	174
   831  00FE92  AE                 	db	174
   832  00FE93  AD                 	db	173
   833  00FE94  AC                 	db	172
   834  00FE95  AC                 	db	172
   835  00FE96  AB                 	db	171
   836  00FE97  AA                 	db	170
   837  00FE98  AA                 	db	170
   838  00FE99  A9                 	db	169
   839  00FE9A  A8                 	db	168
   840  00FE9B  A8                 	db	168
   841  00FE9C  A7                 	db	167
   842  00FE9D  A6                 	db	166
   843  00FE9E  A6                 	db	166
   844  00FE9F  A5                 	db	165
   845  00FEA0  A5                 	db	165
   846  00FEA1  A4                 	db	164
   847  00FEA2  A3                 	db	163
   848  00FEA3  A3                 	db	163
   849  00FEA4  A2                 	db	162
   850  00FEA5  A1                 	db	161
   851  00FEA6  A1                 	db	161
   852  00FEA7  A0                 	db	160
   853  00FEA8  9F                 	db	159
   854  00FEA9  9F                 	db	159
   855  00FEAA  9E                 	db	158
   856  00FEAB  9E                 	db	158
   857  00FEAC  9D                 	db	157
   858  00FEAD  9C                 	db	156
   859  00FEAE  9C                 	db	156
   860  00FEAF  9B                 	db	155
   861  00FEB0  9A                 	db	154
   862  00FEB1  9A                 	db	154
   863  00FEB2  99                 	db	153
   864  00FEB3  98                 	db	152
   865  00FEB4  98                 	db	152
   866  00FEB5  97                 	db	151
   867  00FEB6  96                 	db	150
   868  00FEB7  96                 	db	150
   869  00FEB8  95                 	db	149
   870  00FEB9  95                 	db	149
   871  00FEBA  94                 	db	148
   872  00FEBB  93                 	db	147
   873  00FEBC  93                 	db	147
   874  00FEBD  92                 	db	146
   875  00FEBE  91                 	db	145
   876  00FEBF  91                 	db	145
   877  00FEC0  90                 	db	144
   878  00FEC1  8F                 	db	143
   879  00FEC2  8F                 	db	143
   880  00FEC3                     __end_of_Lambda:
   881                           	opt stack 0
   882  00FEC3                     _RPM2Tabl:
   883                           	opt stack 0
   884  00FEC3  00                 	db	0
   885  00FEC4  00                 	db	0
   886  00FEC5  00                 	db	0
   887  00FEC6  00                 	db	0
   888  00FEC7  00                 	db	0
   889  00FEC8  00                 	db	0
   890  00FEC9  00                 	db	0
   891  00FECA  00                 	db	0
   892  00FECB  00                 	db	0
   893  00FECC  00                 	db	0
   894  00FECD  00                 	db	0
   895  00FECE  00                 	db	0
   896  00FECF  00                 	db	0
   897  00FED0  00                 	db	0
   898  00FED1  00                 	db	0
   899  00FED2  00                 	db	0
   900  00FED3  00                 	db	0
   901  00FED4  01                 	db	1
   902  00FED5  01                 	db	1
   903  00FED6  01                 	db	1
   904  00FED7  01                 	db	1
   905  00FED8  02                 	db	2
   906  00FED9  02                 	db	2
   907  00FEDA  02                 	db	2
   908  00FEDB  03                 	db	3
   909  00FEDC  03                 	db	3
   910  00FEDD  03                 	db	3
   911  00FEDE  03                 	db	3
   912  00FEDF  03                 	db	3
   913  00FEE0  04                 	db	4
   914  00FEE1  04                 	db	4
   915  00FEE2  04                 	db	4
   916  00FEE3  04                 	db	4
   917  00FEE4  04                 	db	4
   918  00FEE5  05                 	db	5
   919  00FEE6  05                 	db	5
   920  00FEE7  05                 	db	5
   921  00FEE8  05                 	db	5
   922  00FEE9  03                 	db	3
   923  00FEEA  06                 	db	6
   924  00FEEB  06                 	db	6
   925  00FEEC  06                 	db	6
   926  00FEED  06                 	db	6
   927  00FEEE  06                 	db	6
   928  00FEEF  06                 	db	6
   929  00FEF0  06                 	db	6
   930  00FEF1  06                 	db	6
   931  00FEF2  07                 	db	7
   932  00FEF3  07                 	db	7
   933  00FEF4  07                 	db	7
   934  00FEF5  07                 	db	7
   935  00FEF6  08                 	db	8
   936  00FEF7  08                 	db	8
   937  00FEF8  08                 	db	8
   938  00FEF9  08                 	db	8
   939  00FEFA  09                 	db	9
   940  00FEFB  09                 	db	9
   941  00FEFC  09                 	db	9
   942  00FEFD  09                 	db	9
   943  00FEFE  09                 	db	9
   944  00FEFF  09                 	db	9
   945  00FF00  09                 	db	9
   946  00FF01  09                 	db	9
   947  00FF02  0A                 	db	10
   948  00FF03  0A                 	db	10
   949  00FF04  0A                 	db	10
   950  00FF05  0A                 	db	10
   951  00FF06  0A                 	db	10
   952  00FF07  0A                 	db	10
   953  00FF08  0A                 	db	10
   954  00FF09  0A                 	db	10
   955  00FF0A  0B                 	db	11
   956  00FF0B  0B                 	db	11
   957  00FF0C  0B                 	db	11
   958  00FF0D  0B                 	db	11
   959  00FF0E  0B                 	db	11
   960  00FF0F  0B                 	db	11
   961  00FF10  0B                 	db	11
   962  00FF11  0B                 	db	11
   963  00FF12  0C                 	db	12
   964  00FF13  0C                 	db	12
   965  00FF14  0C                 	db	12
   966  00FF15  0C                 	db	12
   967  00FF16  0C                 	db	12
   968  00FF17  0C                 	db	12
   969  00FF18  0C                 	db	12
   970  00FF19  0C                 	db	12
   971  00FF1A  0D                 	db	13
   972  00FF1B  0D                 	db	13
   973  00FF1C  0D                 	db	13
   974  00FF1D  0D                 	db	13
   975  00FF1E  0D                 	db	13
   976  00FF1F  0D                 	db	13
   977  00FF20  0D                 	db	13
   978  00FF21  0D                 	db	13
   979  00FF22  0E                 	db	14
   980  00FF23  0E                 	db	14
   981  00FF24  0E                 	db	14
   982  00FF25  0E                 	db	14
   983  00FF26  0E                 	db	14
   984  00FF27  0E                 	db	14
   985  00FF28  0E                 	db	14
   986  00FF29  0E                 	db	14
   987  00FF2A  0E                 	db	14
   988  00FF2B  0E                 	db	14
   989  00FF2C  0E                 	db	14
   990  00FF2D  0E                 	db	14
   991  00FF2E  0E                 	db	14
   992  00FF2F  0E                 	db	14
   993  00FF30  0E                 	db	14
   994  00FF31  0E                 	db	14
   995  00FF32  0F                 	db	15
   996  00FF33  0F                 	db	15
   997  00FF34  0F                 	db	15
   998  00FF35  0F                 	db	15
   999  00FF36  0F                 	db	15
  1000  00FF37  0F                 	db	15
  1001  00FF38  0F                 	db	15
  1002  00FF39  0F                 	db	15
  1003  00FF3A  0F                 	db	15
  1004  00FF3B  0F                 	db	15
  1005  00FF3C  0F                 	db	15
  1006  00FF3D  0F                 	db	15
  1007  00FF3E  10                 	db	16
  1008  00FF3F  10                 	db	16
  1009  00FF40  10                 	db	16
  1010  00FF41  10                 	db	16
  1011  00FF42  10                 	db	16
  1012  00FF43  10                 	db	16
  1013  00FF44  10                 	db	16
  1014  00FF45  10                 	db	16
  1015  00FF46  11                 	db	17
  1016  00FF47  11                 	db	17
  1017  00FF48  11                 	db	17
  1018  00FF49  11                 	db	17
  1019  00FF4A  11                 	db	17
  1020  00FF4B  11                 	db	17
  1021  00FF4C  11                 	db	17
  1022  00FF4D  11                 	db	17
  1023  00FF4E  12                 	db	18
  1024  00FF4F  12                 	db	18
  1025  00FF50  12                 	db	18
  1026  00FF51  12                 	db	18
  1027  00FF52  12                 	db	18
  1028  00FF53  12                 	db	18
  1029  00FF54  12                 	db	18
  1030  00FF55  12                 	db	18
  1031  00FF56  12                 	db	18
  1032  00FF57  12                 	db	18
  1033  00FF58  12                 	db	18
  1034  00FF59  12                 	db	18
  1035  00FF5A  13                 	db	19
  1036  00FF5B  13                 	db	19
  1037  00FF5C  13                 	db	19
  1038  00FF5D  13                 	db	19
  1039  00FF5E  13                 	db	19
  1040  00FF5F  13                 	db	19
  1041  00FF60  13                 	db	19
  1042  00FF61  13                 	db	19
  1043  00FF62  13                 	db	19
  1044  00FF63  13                 	db	19
  1045  00FF64  13                 	db	19
  1046  00FF65  13                 	db	19
  1047  00FF66  14                 	db	20
  1048  00FF67  14                 	db	20
  1049  00FF68  14                 	db	20
  1050  00FF69  14                 	db	20
  1051  00FF6A  14                 	db	20
  1052  00FF6B  14                 	db	20
  1053  00FF6C  14                 	db	20
  1054  00FF6D  14                 	db	20
  1055  00FF6E  15                 	db	21
  1056  00FF6F  15                 	db	21
  1057  00FF70  15                 	db	21
  1058  00FF71  15                 	db	21
  1059  00FF72  15                 	db	21
  1060  00FF73  15                 	db	21
  1061  00FF74  15                 	db	21
  1062  00FF75  15                 	db	21
  1063  00FF76  16                 	db	22
  1064  00FF77  16                 	db	22
  1065  00FF78  16                 	db	22
  1066  00FF79  16                 	db	22
  1067  00FF7A  16                 	db	22
  1068  00FF7B  16                 	db	22
  1069  00FF7C  16                 	db	22
  1070  00FF7D  16                 	db	22
  1071  00FF7E  17                 	db	23
  1072  00FF7F  17                 	db	23
  1073  00FF80  17                 	db	23
  1074  00FF81  17                 	db	23
  1075  00FF82  17                 	db	23
  1076  00FF83  17                 	db	23
  1077  00FF84  17                 	db	23
  1078  00FF85  17                 	db	23
  1079  00FF86  18                 	db	24
  1080  00FF87  18                 	db	24
  1081  00FF88  18                 	db	24
  1082  00FF89  18                 	db	24
  1083  00FF8A  18                 	db	24
  1084  00FF8B  18                 	db	24
  1085  00FF8C  18                 	db	24
  1086  00FF8D  18                 	db	24
  1087  00FF8E  19                 	db	25
  1088  00FF8F  19                 	db	25
  1089  00FF90  19                 	db	25
  1090  00FF91  19                 	db	25
  1091  00FF92  19                 	db	25
  1092  00FF93  19                 	db	25
  1093  00FF94  19                 	db	25
  1094  00FF95  19                 	db	25
  1095  00FF96  19                 	db	25
  1096  00FF97  19                 	db	25
  1097  00FF98  19                 	db	25
  1098  00FF99  19                 	db	25
  1099  00FF9A  1A                 	db	26
  1100  00FF9B  1A                 	db	26
  1101  00FF9C  1A                 	db	26
  1102  00FF9D  1A                 	db	26
  1103  00FF9E  1A                 	db	26
  1104  00FF9F  1A                 	db	26
  1105  00FFA0  1A                 	db	26
  1106  00FFA1  1A                 	db	26
  1107  00FFA2  1A                 	db	26
  1108  00FFA3  1A                 	db	26
  1109  00FFA4  1A                 	db	26
  1110  00FFA5  1A                 	db	26
  1111  00FFA6  1A                 	db	26
  1112  00FFA7  1A                 	db	26
  1113  00FFA8  1A                 	db	26
  1114  00FFA9  1A                 	db	26
  1115  00FFAA  1B                 	db	27
  1116  00FFAB  1B                 	db	27
  1117  00FFAC  1B                 	db	27
  1118  00FFAD  1B                 	db	27
  1119  00FFAE  1B                 	db	27
  1120  00FFAF  1B                 	db	27
  1121  00FFB0  1B                 	db	27
  1122  00FFB1  1B                 	db	27
  1123  00FFB2  1B                 	db	27
  1124  00FFB3  1C                 	db	28
  1125  00FFB4  1C                 	db	28
  1126  00FFB5  1C                 	db	28
  1127  00FFB6  1C                 	db	28
  1128  00FFB7  1C                 	db	28
  1129  00FFB8  1C                 	db	28
  1130  00FFB9  1C                 	db	28
  1131  00FFBA  1C                 	db	28
  1132  00FFBB  1C                 	db	28
  1133  00FFBC  1C                 	db	28
  1134  00FFBD  1C                 	db	28
  1135  00FFBE  1C                 	db	28
  1136  00FFBF  1C                 	db	28
  1137  00FFC0  1C                 	db	28
  1138  00FFC1  1C                 	db	28
  1139  00FFC2  1C                 	db	28
  1140  00FFC3                     __end_of_RPM2Tabl:
  1141                           	opt stack 0
  1142  00FFC3                     _X:
  1143                           	opt stack 0
  1144  00FFC3  0190               	dw	400
  1145  00FFC5  0258               	dw	600
  1146  00FFC7  02EE               	dw	750
  1147  00FFC9  0384               	dw	900
  1148  00FFCB  04B0               	dw	1200
  1149  00FFCD  0640               	dw	1600
  1150  00FFCF  07D0               	dw	2000
  1151  00FFD1  0960               	dw	2400
  1152  00FFD3  0C1C               	dw	3100
  1153  00FFD5  0DAC               	dw	3500
  1154  00FFD7  1004               	dw	4100
  1155  00FFD9  125C               	dw	4700
  1156  00FFDB  1518               	dw	5400
  1157  00FFDD  17D4               	dw	6100
  1158  00FFDF  1FA4               	dw	8100
  1159  00FFE1                     __end_of_X:
  1160                           	opt stack 0
  1161  00FFE1                     _LAG:
  1162                           	opt stack 0
  1163  00FFE1  0960               	dw	2400
  1164  00FFE3  069A               	dw	1690
  1165  00FFE5  05AA               	dw	1450
  1166  00FFE7  04E2               	dw	1250
  1167  00FFE9  03F2               	dw	1010
  1168  00FFEB                     __end_of_LAG:
  1169                           	opt stack 0
  1170  00FFEB                     _LAG_LPG:
  1171                           	opt stack 0
  1172  00FFEB  15E0               	dw	5600
  1173  00FFED  10CC               	dw	4300
  1174  00FFEF  0DAC               	dw	3500
  1175  00FFF1  0BB8               	dw	3000
  1176  00FFF3  0960               	dw	2400
  1177  00FFF5                     __end_of_LAG_LPG:
  1178                           	opt stack 0
  1179  00FFF5                     _Y:
  1180                           	opt stack 0
  1181  00FFF5  0014               	dw	20
  1182  00FFF7  001E               	dw	30
  1183  00FFF9  0028               	dw	40
  1184  00FFFB                     __end_of_Y:
  1185                           	opt stack 0
  1186  00FFFB                     _SPD_CONST:
  1187                           	opt stack 0
  1188  00FFFB  E0                 	db	224
  1189  00FFFC  93                 	db	147
  1190  00FFFD  04                 	db	4
  1191  00FFFE                     __end_of_SPD_CONST:
  1192                           	opt stack 0
  1193  0000                     _TMR1	set	4046
  1194  0000                     _ADCON0	set	4034
  1195  0000                     _ADCON0bits	set	4034
  1196  0000                     _ADCON1	set	4033
  1197  0000                     _ADCON2	set	4032
  1198  0000                     _ADRESH	set	4036
  1199  0000                     _ADRESL	set	4035
  1200  0000                     _ANSELA	set	3896
  1201  0000                     _ANSELB	set	3897
  1202  0000                     _ANSELC	set	3898
  1203  0000                     _ANSELD	set	3899
  1204  0000                     _ANSELE	set	3900
  1205  0000                     _BAUDCON1	set	4024
  1206  0000                     _CCP1CON	set	4029
  1207  0000                     _CCP2CON	set	3942
  1208  0000                     _CCP3CON	set	3933
  1209  0000                     _CCP5CON	set	3924
  1210  0000                     _CCPR1H	set	4031
  1211  0000                     _CCPR1L	set	4030
  1212  0000                     _CCPR2H	set	3944
  1213  0000                     _CCPR2L	set	3943
  1214  0000                     _CCPR3H	set	3935
  1215  0000                     _CCPR3L	set	3934
  1216  0000                     _CCPR5L	set	3925
  1217  0000                     _CCPTMRS0	set	3913
  1218  0000                     _CCPTMRS1	set	3912
  1219  0000                     _INTCONbits	set	4082
  1220  0000                     _LATA	set	3977
  1221  0000                     _LATB	set	3978
  1222  0000                     _LATC	set	3979
  1223  0000                     _LATD	set	3980
  1224  0000                     _LATE	set	3981
  1225  0000                     _OSCCON	set	4051
  1226  0000                     _OSCCON2	set	4050
  1227  0000                     _PIE1bits	set	3997
  1228  0000                     _PIE2bits	set	4000
  1229  0000                     _PIE4bits	set	3962
  1230  0000                     _PIE5bits	set	3965
  1231  0000                     _PIR1bits	set	3998
  1232  0000                     _PIR2bits	set	4001
  1233  0000                     _PIR4bits	set	3963
  1234  0000                     _PIR5bits	set	3966
  1235  0000                     _PR2	set	4027
  1236  0000                     _PR4	set	3922
  1237  0000                     _PR6	set	3915
  1238  0000                     _RCREG	set	4014
  1239  0000                     _RCSTA1	set	4011
  1240  0000                     _RCSTAbits	set	4011
  1241  0000                     _SPBRG1	set	4015
  1242  0000                     _SPBRGH1	set	4016
  1243  0000                     _T0CON	set	4053
  1244  0000                     _T1CON	set	4045
  1245  0000                     _T1GCON	set	4044
  1246  0000                     _T2CON	set	4026
  1247  0000                     _T2CONbits	set	4026
  1248  0000                     _T3CON	set	4017
  1249  0000                     _T3GCON	set	4020
  1250  0000                     _T4CONbits	set	3921
  1251  0000                     _T6CON	set	3914
  1252  0000                     _T6CONbits	set	3914
  1253  0000                     _TMR0H	set	4055
  1254  0000                     _TMR0L	set	4054
  1255  0000                     _TMR1H	set	4047
  1256  0000                     _TMR1L	set	4046
  1257  0000                     _TMR3H	set	4019
  1258  0000                     _TMR3L	set	4018
  1259  0000                     _TMR6	set	3916
  1260  0000                     _TRISA	set	3986
  1261  0000                     _TRISAbits	set	3986
  1262  0000                     _TRISB	set	3987
  1263  0000                     _TRISBbits	set	3987
  1264  0000                     _TRISC	set	3988
  1265  0000                     _TRISCbits	set	3988
  1266  0000                     _TRISD	set	3989
  1267  0000                     _TRISE	set	3990
  1268  0000                     _TRISEbits	set	3990
  1269  0000                     _TXREG	set	4013
  1270  0000                     _TXSTA1	set	4012
  1271  0000                     _TXSTAbits	set	4012
  1272  0000                     _WPUB	set	3937
  1273  0000                     _ADIE	set	31982
  1274  0000                     _ADIF	set	31990
  1275  0000                     _ADIP	set	31998
  1276  0000                     _BOR	set	32384
  1277  0000                     _C1IF	set	32014
  1278  0000                     _C2IE	set	32005
  1279  0000                     _C2IF	set	32013
  1280  0000                     _C2IP	set	32021
  1281  0000                     _CCP1IE	set	31978
  1282  0000                     _CCP1IF	set	31986
  1283  0000                     _CCP1IP	set	31994
  1284  0000                     _CCP2IE	set	32000
  1285  0000                     _CCP2IF	set	32008
  1286  0000                     _CCP2IP	set	32016
  1287  0000                     _CCP3IE	set	31696
  1288  0000                     _CCP3IF	set	31704
  1289  0000                     _CCP3IP	set	31712
  1290  0000                     _GIEH	set	32663
  1291  0000                     _GIEL	set	32662
  1292  0000                     _GO	set	32273
  1293  0000                     _INT0IE	set	32660
  1294  0000                     _INT0IF	set	32657
  1295  0000                     _INT1IE	set	32643
  1296  0000                     _INT1IF	set	32640
  1297  0000                     _INT1IP	set	32646
  1298  0000                     _INT2IF	set	32641
  1299  0000                     _INT2IP	set	32647
  1300  0000                     _INTEDG0	set	32654
  1301  0000                     _INTEDG1	set	32653
  1302  0000                     _INTEDG2	set	32652
  1303  0000                     _IPEN	set	32391
  1304  0000                     _LB3	set	31827
  1305  0000                     _LB4	set	31828
  1306  0000                     _LC0	set	31832
  1307  0000                     _LC1	set	31833
  1308  0000                     _LC2	set	31834
  1309  0000                     _LC3	set	31835
  1310  0000                     _LC4	set	31836
  1311  0000                     _LC5	set	31837
  1312  0000                     _LD0	set	31840
  1313  0000                     _LD1	set	31841
  1314  0000                     _LD2	set	31842
  1315  0000                     _LD3	set	31843
  1316  0000                     _LD4	set	31844
  1317  0000                     _LD5	set	31845
  1318  0000                     _RC1IE	set	31981
  1319  0000                     _RC1IP	set	31997
  1320  0000                     _RCIF	set	31989
  1321  0000                     _T0IF	set	32658
  1322  0000                     _TMR0IE	set	32661
  1323  0000                     _TMR0IF	set	32658
  1324  0000                     _TMR0IP	set	32650
  1325  0000                     _TMR0ON	set	32431
  1326  0000                     _TMR1IE	set	31976
  1327  0000                     _TMR1IF	set	31984
  1328  0000                     _TMR1IP	set	31992
  1329  0000                     _TMR1ON	set	32360
  1330  0000                     _TMR2IE	set	31977
  1331  0000                     _TMR3IE	set	32001
  1332  0000                     _TO	set	32387
  1333  0000                     _TX1IE	set	31980
  1334  0000                     _TX1IP	set	31996
  1335  0000                     _nRBPU	set	32655
  1336                           
  1337                           ; #config settings
  1338  00FFFE  00                 	db	0	; dummy byte at the end
  1339  0000                     
  1340                           	psect	cinit
  1341  001AA0                     __pcinit:
  1342                           	opt stack 0
  1343  001AA0                     start_initialization:
  1344                           	opt stack 0
  1345  001AA0                     __initialization:
  1346                           	opt stack 0
  1347                           
  1348                           ; Clear objects allocated to BANK0 (103 bytes)
  1349  001AA0  EE00  F060         	lfsr	0,__pbssBANK0
  1350  001AA4  0E67               	movlw	103
  1351  001AA6                     clear_0:
  1352  001AA6  6AEE               	clrf	postinc0,c
  1353  001AA8  06E8               	decf	wreg,f,c
  1354  001AAA  E1FD               	bnz	clear_0
  1355                           
  1356                           ; Clear objects allocated to BITCOMRAM (2 bytes)
  1357  001AAC  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
  1358  001AAE  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  1359                           
  1360                           ; Clear objects allocated to COMRAM (34 bytes)
  1361  001AB0  EE00  F029         	lfsr	0,__pbssCOMRAM
  1362  001AB4  0E22               	movlw	34
  1363  001AB6                     clear_1:
  1364  001AB6  6AEE               	clrf	postinc0,c
  1365  001AB8  06E8               	decf	wreg,f,c
  1366  001ABA  E1FD               	bnz	clear_1
  1367                           
  1368                           ; Initialize objects allocated to BANK1 (16 bytes)
  1369                           ; load TBLPTR registers with __pidataBANK1
  1370  001ABC  0E28               	movlw	low __pidataBANK1
  1371  001ABE  6EF6               	movwf	tblptrl,c
  1372  001AC0  0E1D               	movlw	high __pidataBANK1
  1373  001AC2  6EF7               	movwf	tblptrh,c
  1374  001AC4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1375  001AC6  6EF8               	movwf	tblptru,c
  1376  001AC8  EE01  F01A         	lfsr	0,__pdataBANK1
  1377  001ACC  EE10 F010          	lfsr	1,16
  1378  001AD0                     copy_data0:
  1379  001AD0  0009               	tblrd		*+
  1380  001AD2  CFF5 FFEE          	movff	tablat,postinc0
  1381  001AD6  50E5               	movf	postdec1,w,c
  1382  001AD8  50E1               	movf	fsr1l,w,c
  1383  001ADA  E1FA               	bnz	copy_data0
  1384  001ADC                     end_of_initialization:
  1385                           	opt stack 0
  1386  001ADC                     __end_of__initialization:
  1387                           	opt stack 0
  1388  001ADC  0100               	movlb	0
  1389  001ADE  EF3E  F005         	goto	_main	;jump to C main() function
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           
  1399                           	psect	bitbssCOMRAM
  1400  000258                     __pbitbssCOMRAM:
  1401                           	opt stack 0
  1402  000258                     _Flag_Corr_equal:
  1403                           	opt stack 0
  1404  000258                     	ds	1
  1405  000259                     _Flag_FiveSeconds:
  1406                           	opt stack 0
  1407  000259                     	ds	1
  1408  00025A                     _Flag_FuelEq:
  1409                           	opt stack 0
  1410  00025A                     	ds	1
  1411  00025B                     _Flag_IAC:
  1412                           	opt stack 0
  1413  00025B                     	ds	1
  1414  00025C                     _Flag_Init_Pos:
  1415                           	opt stack 0
  1416  00025C                     	ds	1
  1417  00025D                     _Flag_Sec_Clock:
  1418                           	opt stack 0
  1419  00025D                     	ds	1
  1420  00025E                     _Flag_Send_data:
  1421                           	opt stack 0
  1422  00025E                     	ds	1
  1423  00025F                     _Flag_Speed_equal:
  1424                           	opt stack 0
  1425  00025F                     	ds	1
  1426  000260                     _Flag_UART_recieved:
  1427                           	opt stack 0
  1428  000260                     	ds	1
  1429  000261                     _Flag_setADC_chenal:
  1430                           	opt stack 0
  1431  000261                     	ds	1
  1432  000262                     _Flag_set_IAC:
  1433                           	opt stack 0
  1434  000262                     	ds	1
  1435                           tblptru	equ	0xFF8
  1436                           tblptrh	equ	0xFF7
  1437                           tblptrl	equ	0xFF6
  1438                           tablat	equ	0xFF5
  1439                           postinc0	equ	0xFEE
  1440                           wreg	equ	0xFE8
  1441                           postdec1	equ	0xFE5
  1442                           fsr1l	equ	0xFE1
  1443                           
  1444                           	psect	bssCOMRAM
  1445  000029                     __pbssCOMRAM:
  1446                           	opt stack 0
  1447  000029                     TMR0Event@ADCdelay:
  1448                           	opt stack 0
  1449  000029                     	ds	2
  1450  00002B                     TMR0Event@Cdelay:
  1451                           	opt stack 0
  1452  00002B                     	ds	2
  1453  00002D                     TMR0Event@STPdelay:
  1454                           	opt stack 0
  1455  00002D                     	ds	2
  1456  00002F                     TMR0Event@TXdelay:
  1457                           	opt stack 0
  1458  00002F                     	ds	2
  1459  000031                     TMR0Event@mckc:
  1460                           	opt stack 0
  1461  000031                     	ds	2
  1462  000033                     _ADC:
  1463                           	opt stack 0
  1464  000033                     	ds	2
  1465  000035                     _LPGPressure:
  1466                           	opt stack 0
  1467  000035                     	ds	2
  1468  000037                     _LoadCounter:
  1469                           	opt stack 0
  1470  000037                     	ds	2
  1471  000039                     _PUMPCounter:
  1472                           	opt stack 0
  1473  000039                     	ds	2
  1474  00003B                     _TMRC:
  1475                           	opt stack 0
  1476  00003B                     	ds	2
  1477  00003D                     _Cylinder:
  1478                           	opt stack 0
  1479  00003D                     	ds	1
  1480  00003E                     setADC@ADCChan:
  1481                           	opt stack 0
  1482  00003E                     	ds	1
  1483  00003F                     _MAP_array:
  1484                           	opt stack 0
  1485  00003F                     	ds	12
  1486                           tblptru	equ	0xFF8
  1487                           tblptrh	equ	0xFF7
  1488                           tblptrl	equ	0xFF6
  1489                           tablat	equ	0xFF5
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           postdec1	equ	0xFE5
  1493                           fsr1l	equ	0xFE1
  1494                           
  1495                           	psect	bssBANK0
  1496  000060                     __pbssBANK0:
  1497                           	opt stack 0
  1498  000060                     _AirPressure:
  1499                           	opt stack 0
  1500  000060                     	ds	2
  1501  000062                     _p:
  1502                           	opt stack 0
  1503  000062                     	ds	1
  1504  000063                     main@Minutes:
  1505                           	opt stack 0
  1506  000063                     	ds	1
  1507  000064                     main@Seconds:
  1508                           	opt stack 0
  1509  000064                     	ds	1
  1510  000065                     _ECU:
  1511                           	opt stack 0
  1512  000065                     	ds	38
  1513  00008B                     _CLT_array:
  1514                           	opt stack 0
  1515  00008B                     	ds	12
  1516  000097                     _EXT_array:
  1517                           	opt stack 0
  1518  000097                     	ds	12
  1519  0000A3                     _IAT_array:
  1520                           	opt stack 0
  1521  0000A3                     	ds	12
  1522  0000AF                     _Load_array:
  1523                           	opt stack 0
  1524  0000AF                     	ds	12
  1525  0000BB                     _PWR_array:
  1526                           	opt stack 0
  1527  0000BB                     	ds	12
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           postdec1	equ	0xFE5
  1535                           fsr1l	equ	0xFE1
  1536                           
  1537                           	psect	dataBANK1
  1538  00011A                     __pdataBANK1:
  1539                           	opt stack 0
  1540  00011A                     _VE_table:
  1541                           	opt stack 0
  1542  00011A                     	ds	16
  1543                           tblptru	equ	0xFF8
  1544                           tblptrh	equ	0xFF7
  1545                           tblptrl	equ	0xFF6
  1546                           tablat	equ	0xFF5
  1547                           postinc0	equ	0xFEE
  1548                           wreg	equ	0xFE8
  1549                           postdec1	equ	0xFE5
  1550                           fsr1l	equ	0xFE1
  1551                           
  1552                           	psect	cstackBANK1
  1553  000100                     __pcstackBANK1:
  1554                           	opt stack 0
  1555  000100                     ??_Emul_PND_T:
  1556  000100                     ??_IntpResL:
  1557                           
  1558                           ; 0 bytes @ 0x0
  1559  000100                     	ds	1
  1560  000101                     Fuel_Calculate@GazPressure:
  1561                           	opt stack 0
  1562                           
  1563                           ; 2 bytes @ 0x1
  1564  000101                     	ds	2
  1565  000103                     Fuel_Calculate@Injection:
  1566                           	opt stack 0
  1567                           
  1568                           ; 3 bytes @ 0x3
  1569  000103                     	ds	1
  1570  000104                     ?_ReadTable:
  1571                           	opt stack 0
  1572  000104                     ReadTable@a:
  1573                           	opt stack 0
  1574                           
  1575                           ; 2 bytes @ 0x4
  1576  000104                     	ds	2
  1577  000106                     ReadTable@Massive:
  1578                           	opt stack 0
  1579                           
  1580                           ; 2 bytes @ 0x6
  1581  000106                     	ds	1
  1582  000107                     Emul_PND_T@RPM:
  1583                           	opt stack 0
  1584                           
  1585                           ; 1 bytes @ 0x7
  1586  000107                     	ds	1
  1587  000108                     ??_ReadTable:
  1588  000108                     Emul_PND_T@out:
  1589                           	opt stack 0
  1590                           
  1591                           ; 1 bytes @ 0x8
  1592  000108                     	ds	1
  1593  000109                     Emul_PND_T@span:
  1594                           	opt stack 0
  1595                           
  1596                           ; 1 bytes @ 0x9
  1597  000109                     	ds	1
  1598  00010A                     Emul_PND_T@column:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0xA
  1602  00010A                     	ds	1
  1603  00010B                     Emul_PND_T@lowdt:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0xB
  1607  00010B                     	ds	1
  1608  00010C                     Emul_PND_T@hidt:
  1609                           	opt stack 0
  1610                           
  1611                           ; 1 bytes @ 0xC
  1612  00010C                     	ds	1
  1613  00010D                     Emul_PND_T@pres:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0xD
  1617  00010D                     	ds	5
  1618  000112                     ReadTable@Span:
  1619                           	opt stack 0
  1620                           
  1621                           ; 1 bytes @ 0x12
  1622  000112                     	ds	1
  1623  000113                     ReadTable@Index:
  1624                           	opt stack 0
  1625                           
  1626                           ; 1 bytes @ 0x13
  1627  000113                     	ds	1
  1628  000114                     ??_Get_Lag:
  1629                           
  1630                           ; 0 bytes @ 0x14
  1631  000114                     	ds	2
  1632  000116                     main@TCycle:
  1633                           	opt stack 0
  1634                           
  1635                           ; 2 bytes @ 0x16
  1636  000116                     	ds	2
  1637  000118                     main@MSpeed:
  1638                           	opt stack 0
  1639                           
  1640                           ; 2 bytes @ 0x18
  1641  000118                     	ds	2
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           postdec1	equ	0xFE5
  1649                           fsr1l	equ	0xFE1
  1650                           
  1651                           	psect	cstackBANK0
  1652  0000C7                     __pcstackBANK0:
  1653                           	opt stack 0
  1654  0000C7                     ?_ReadTimer3:
  1655                           	opt stack 0
  1656  0000C7                     ?i2___lwdiv:
  1657                           	opt stack 0
  1658  0000C7                     LGP_st@LPGPres:
  1659                           	opt stack 0
  1660  0000C7                     i2___lwdiv@dividend:
  1661                           	opt stack 0
  1662                           
  1663                           ; 2 bytes @ 0x0
  1664  0000C7                     	ds	2
  1665  0000C9                     ??_CheckInj:
  1666  0000C9                     ReadTimer3@timer:
  1667                           	opt stack 0
  1668  0000C9                     i2___lwdiv@divisor:
  1669                           	opt stack 0
  1670                           
  1671                           ; 2 bytes @ 0x2
  1672  0000C9                     	ds	2
  1673  0000CB                     i2___lwdiv@counter:
  1674                           	opt stack 0
  1675  0000CB                     OpenECompare1@period:
  1676                           	opt stack 0
  1677  0000CB                     OpenECompare2@period:
  1678                           	opt stack 0
  1679                           
  1680                           ; 2 bytes @ 0x4
  1681  0000CB                     	ds	1
  1682  0000CC                     i2___lwdiv@quotient:
  1683                           	opt stack 0
  1684                           
  1685                           ; 2 bytes @ 0x5
  1686  0000CC                     	ds	1
  1687  0000CD                     ??_OpenECompare1:
  1688  0000CD                     ??_OpenECompare2:
  1689  0000CD                     
  1690                           ; 0 bytes @ 0x6
  1691  0000CD                     	ds	1
  1692  0000CE                     i2OpenECompare3@period:
  1693                           	opt stack 0
  1694                           
  1695                           ; 2 bytes @ 0x7
  1696  0000CE                     	ds	2
  1697  0000D0                     ??i2_OpenECompare3:
  1698  0000D0                     OpenECompare1@config:
  1699                           	opt stack 0
  1700  0000D0                     OpenECompare2@config:
  1701                           	opt stack 0
  1702                           
  1703                           ; 1 bytes @ 0x9
  1704  0000D0                     	ds	1
  1705  0000D1                     ??_CompareGroup1:
  1706  0000D1                     ??_CompareGroup2:
  1707  0000D1                     
  1708                           ; 0 bytes @ 0xA
  1709  0000D1                     	ds	2
  1710  0000D3                     i2OpenECompare3@config:
  1711                           	opt stack 0
  1712  0000D3                     CompareGroup1@Injection:
  1713                           	opt stack 0
  1714  0000D3                     CompareGroup2@Injection:
  1715                           	opt stack 0
  1716                           
  1717                           ; 2 bytes @ 0xC
  1718  0000D3                     	ds	1
  1719  0000D4                     
  1720                           ; 0 bytes @ 0xD
  1721  0000D4                     	ds	1
  1722  0000D5                     ??_high_isr:
  1723                           
  1724                           ; 0 bytes @ 0xE
  1725  0000D5                     	ds	5
  1726  0000DA                     ??_SetChanADC:
  1727  0000DA                     ??_STP_Open:
  1728  0000DA                     ??_STP_Close:
  1729  0000DA                     ?___tmul:
  1730                           	opt stack 0
  1731  0000DA                     ?___atdiv:
  1732                           	opt stack 0
  1733  0000DA                     ?___ltdiv:
  1734                           	opt stack 0
  1735  0000DA                     OpenADC@config2:
  1736                           	opt stack 0
  1737  0000DA                     OpenPWM5@timer_source:
  1738                           	opt stack 0
  1739  0000DA                     OpenTimer6@config:
  1740                           	opt stack 0
  1741  0000DA                     delay@ms:
  1742                           	opt stack 0
  1743  0000DA                     VE@Table:
  1744                           	opt stack 0
  1745  0000DA                     SetDCPWM5@dutycycle:
  1746                           	opt stack 0
  1747  0000DA                     ___tmul@multiplier:
  1748                           	opt stack 0
  1749  0000DA                     ___atdiv@dividend:
  1750                           	opt stack 0
  1751  0000DA                     ___ltdiv@dividend:
  1752                           	opt stack 0
  1753                           
  1754                           ; 3 bytes @ 0x13
  1755  0000DA                     	ds	1
  1756  0000DB                     ??_OpenPWM5:
  1757  0000DB                     STP_Set@p:
  1758                           	opt stack 0
  1759  0000DB                     IAC_Stab@CLTR:
  1760                           	opt stack 0
  1761  0000DB                     OpenADC@config3:
  1762                           	opt stack 0
  1763  0000DB                     SetChanADC@channel:
  1764                           	opt stack 0
  1765                           
  1766                           ; 1 bytes @ 0x14
  1767  0000DB                     	ds	1
  1768  0000DC                     ??_SetDCPWM5:
  1769  0000DC                     ??_OpenADC:
  1770  0000DC                     ??_VE:
  1771  0000DC                     ??_delay:
  1772  0000DC                     IAC_Stab@Step_Init_Pos:
  1773                           	opt stack 0
  1774  0000DC                     OpenPWM5@period:
  1775                           	opt stack 0
  1776                           
  1777                           ; 1 bytes @ 0x15
  1778  0000DC                     	ds	1
  1779  0000DD                     STP_Init@a:
  1780                           	opt stack 0
  1781  0000DD                     ___tmul@multiplicand:
  1782                           	opt stack 0
  1783  0000DD                     ___atdiv@divisor:
  1784                           	opt stack 0
  1785  0000DD                     ___ltdiv@divisor:
  1786                           	opt stack 0
  1787                           
  1788                           ; 3 bytes @ 0x16
  1789  0000DD                     	ds	1
  1790  0000DE                     OpenADC@config:
  1791                           	opt stack 0
  1792  0000DE                     SetDCPWM5@DCycle:
  1793                           	opt stack 0
  1794                           
  1795                           ; 2 bytes @ 0x17
  1796  0000DE                     	ds	2
  1797  0000E0                     ??___tmul:
  1798  0000E0                     ___atdiv@counter:
  1799                           	opt stack 0
  1800  0000E0                     ___ltdiv@quotient:
  1801                           	opt stack 0
  1802                           
  1803                           ; 3 bytes @ 0x19
  1804  0000E0                     	ds	1
  1805  0000E1                     ___atdiv@sign:
  1806                           	opt stack 0
  1807                           
  1808                           ; 1 bytes @ 0x1A
  1809  0000E1                     	ds	1
  1810  0000E2                     ___tmul@product:
  1811                           	opt stack 0
  1812  0000E2                     ___atdiv@quotient:
  1813                           	opt stack 0
  1814                           
  1815                           ; 3 bytes @ 0x1B
  1816  0000E2                     	ds	1
  1817  0000E3                     VE@a:
  1818                           	opt stack 0
  1819  0000E3                     ___ltdiv@counter:
  1820                           	opt stack 0
  1821                           
  1822                           ; 1 bytes @ 0x1C
  1823  0000E3                     	ds	1
  1824  0000E4                     VE@Index:
  1825                           	opt stack 0
  1826                           
  1827                           ; 1 bytes @ 0x1D
  1828  0000E4                     	ds	1
  1829  0000E5                     ??_Fuel_Calculate:
  1830  0000E5                     ?_IntpResL:
  1831                           	opt stack 0
  1832  0000E5                     VE@Span:
  1833                           	opt stack 0
  1834  0000E5                     IntpResL@Low_d:
  1835                           	opt stack 0
  1836  0000E5                     Emul_PND_T@MAP:
  1837                           	opt stack 0
  1838                           
  1839                           ; 2 bytes @ 0x1E
  1840  0000E5                     	ds	1
  1841  0000E6                     VE@lowdt:
  1842                           	opt stack 0
  1843                           
  1844                           ; 1 bytes @ 0x1F
  1845  0000E6                     	ds	1
  1846  0000E7                     ??_Emul_PND:
  1847  0000E7                     VE@hidt:
  1848                           	opt stack 0
  1849  0000E7                     IntpResL@Hi_d:
  1850                           	opt stack 0
  1851                           
  1852                           ; 2 bytes @ 0x20
  1853  0000E7                     	ds	2
  1854  0000E9                     IntpResL@C:
  1855                           	opt stack 0
  1856  0000E9                     Emul_PND@Vout:
  1857                           	opt stack 0
  1858                           
  1859                           ; 2 bytes @ 0x22
  1860  0000E9                     	ds	1
  1861  0000EA                     IntpResL@prom:
  1862                           	opt stack 0
  1863                           
  1864                           ; 2 bytes @ 0x23
  1865  0000EA                     	ds	2
  1866  0000EC                     tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           postinc0	equ	0xFEE
  1871                           wreg	equ	0xFE8
  1872                           postdec1	equ	0xFE5
  1873                           fsr1l	equ	0xFE1
  1874                           
  1875                           ; 0 bytes @ 0x25
  1876                           
  1877                           	psect	cstackCOMRAM
  1878  000001                     __pcstackCOMRAM:
  1879                           	opt stack 0
  1880  000001                     ??i1_SetChanADC:
  1881  000001                     ?_ReadADC:
  1882                           	opt stack 0
  1883  000001                     ?___lwdiv:
  1884                           	opt stack 0
  1885  000001                     ?i1___tmul:
  1886                           	opt stack 0
  1887  000001                     ___lwdiv@dividend:
  1888                           	opt stack 0
  1889  000001                     i1___tmul@multiplier:
  1890                           	opt stack 0
  1891                           
  1892                           ; 3 bytes @ 0x0
  1893  000001                     	ds	1
  1894  000002                     i1SetChanADC@channel:
  1895                           	opt stack 0
  1896                           
  1897                           ; 1 bytes @ 0x1
  1898  000002                     	ds	1
  1899  000003                     ?_SMA_filter:
  1900                           	opt stack 0
  1901  000003                     ?_EX_filter:
  1902                           	opt stack 0
  1903  000003                     SMA_filter@a:
  1904                           	opt stack 0
  1905  000003                     EX_filter@a:
  1906                           	opt stack 0
  1907  000003                     ___lwdiv@divisor:
  1908                           	opt stack 0
  1909                           
  1910                           ; 2 bytes @ 0x2
  1911  000003                     	ds	1
  1912  000004                     i1___tmul@multiplicand:
  1913                           	opt stack 0
  1914                           
  1915                           ; 3 bytes @ 0x3
  1916  000004                     	ds	1
  1917  000005                     SMA_filter@Massive:
  1918                           	opt stack 0
  1919  000005                     EX_filter@Massive:
  1920                           	opt stack 0
  1921  000005                     ___lwdiv@quotient:
  1922                           	opt stack 0
  1923                           
  1924                           ; 2 bytes @ 0x4
  1925  000005                     	ds	1
  1926  000006                     ??_SMA_filter:
  1927  000006                     ??_EX_filter:
  1928                           
  1929                           ; 0 bytes @ 0x5
  1930  000006                     	ds	1
  1931  000007                     ??i1___tmul:
  1932  000007                     ___lwdiv@counter:
  1933                           	opt stack 0
  1934                           
  1935                           ; 1 bytes @ 0x6
  1936  000007                     	ds	1
  1937  000008                     SMA_filter@n:
  1938                           	opt stack 0
  1939  000008                     OpenECompare3@period:
  1940                           	opt stack 0
  1941                           
  1942                           ; 2 bytes @ 0x7
  1943  000008                     	ds	1
  1944  000009                     SMA_filter@j:
  1945                           	opt stack 0
  1946  000009                     i1___tmul@product:
  1947                           	opt stack 0
  1948                           
  1949                           ; 3 bytes @ 0x8
  1950  000009                     	ds	1
  1951  00000A                     ??_OpenECompare3:
  1952  00000A                     ??_TMR0Event:
  1953  00000A                     ??_GetColt:
  1954  00000A                     EX_filter@n:
  1955                           	opt stack 0
  1956                           
  1957                           ; 2 bytes @ 0x9
  1958  00000A                     	ds	3
  1959  00000D                     OpenECompare3@config:
  1960                           	opt stack 0
  1961                           
  1962                           ; 1 bytes @ 0xC
  1963  00000D                     	ds	1
  1964  00000E                     
  1965                           ; 0 bytes @ 0xD
  1966  00000E                     	ds	2
  1967  000010                     GetColt@CLT_DATA:
  1968                           	opt stack 0
  1969                           
  1970                           ; 2 bytes @ 0xF
  1971  000010                     	ds	2
  1972  000012                     ??_ADCread:
  1973                           
  1974                           ; 0 bytes @ 0x11
  1975  000012                     	ds	6
  1976  000018                     ADCread@ADCPressure:
  1977                           	opt stack 0
  1978                           
  1979                           ; 2 bytes @ 0x17
  1980  000018                     	ds	2
  1981  00001A                     ADCread@EGRD_CURR:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x19
  1985  00001A                     	ds	2
  1986  00001C                     ??_low_isr:
  1987                           
  1988                           ; 0 bytes @ 0x1B
  1989  00001C                     	ds	13
  1990                           tblptru	equ	0xFF8
  1991                           tblptrh	equ	0xFF7
  1992                           tblptrl	equ	0xFF6
  1993                           tablat	equ	0xFF5
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           postdec1	equ	0xFE5
  1997                           fsr1l	equ	0xFE1
  1998                           
  1999 ;;
  2000 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2001 ;;
  2002 ;; *************** function _main *****************
  2003 ;; Defined at:
  2004 ;;		line 366 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  MSpeed          2   24[BANK1 ] unsigned int 
  2009 ;;  TCycle          2   22[BANK1 ] unsigned int 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;		None               void
  2012 ;; Registers used:
  2013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : F/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;Total ram usage:        4 bytes
  2024 ;; Hardware stack levels required when called:   14
  2025 ;; This function calls:
  2026 ;;		_Emul_PND
  2027 ;;		_Fuel_Calculate
  2028 ;;		_Get_Lag
  2029 ;;		_IAC_Stab
  2030 ;;		_INIT
  2031 ;;		_STP_Set
  2032 ;;		_VE
  2033 ;;		___ltdiv
  2034 ;;		_setADC
  2035 ;; This function is called by:
  2036 ;;		Startup code after reset
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text0
  2041  000A7C                     __ptext0:
  2042                           	opt stack 0
  2043  000A7C                     _main:
  2044                           	opt stack 16
  2045                           
  2046                           ;main.c: 368: INIT();
  2047                           
  2048                           ;incstack = 0
  2049  000A7C  EC85  F004         	call	_INIT	;wreg free
  2050  000A80                     l5148:
  2051                           
  2052                           ;main.c: 370: {
  2053                           ;main.c: 371: LoadCounter++;
  2054  000A80  4A37               	infsnz	_LoadCounter,f,c	;volatile
  2055  000A82  2A38               	incf	_LoadCounter+1,f,c	;volatile
  2056                           
  2057                           ;main.c: 373: if (Flag_FuelEq)
  2058  000A84  A44B               	btfss	_Flag_FuelEq/(0+8),_Flag_FuelEq& (0+7),c	;volatile
  2059  000A86  D004               	goto	l5156
  2060                           
  2061                           ;main.c: 374: {
  2062                           ;main.c: 375: Flag_FuelEq=0;Fuel_Calculate();
  2063  000A88  0100               	movlb	(_Flag_FuelEq/(0+8)) shr (0+8)
  2064  000A8A  944B               	bcf	_Flag_FuelEq/(0+8),_Flag_FuelEq& (0+7),c	;volatile
  2065  000A8C  ECC9  F001         	call	_Fuel_Calculate	;wreg free
  2066  000A90                     l5156:
  2067                           
  2068                           ;main.c: 376: }
  2069                           ;main.c: 379: if (Flag_Send_data && TXSTAbits.TRMT){
  2070  000A90  BC4B               	btfsc	_Flag_Send_data/(0+8),_Flag_Send_data& (0+7),c	;volatile
  2071  000A92  A2AC               	btfss	4012,1,c	;volatile
  2072  000A94  D017               	goto	l5174
  2073                           
  2074                           ;main.c: 381: if (ECU.Byte_Counter==ECU.Paket_size)
  2075  000A96  0100               	movlb	0	; () banked
  2076  000A98  5168               	movf	(_ECU+3)& (0+255),w,b	;volatile
  2077  000A9A  EE20  F066         	lfsr	2,_ECU+1	;volatile
  2078  000A9E  62DF               	cpfseq	indf2,c
  2079  000AA0  D006               	goto	l477
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;main.c: 382: {ECU.Byte_Counter=0;ECU.CHK_SUM_TX=0;Flag_Send_data=0;p=(char*)&ECU;}
  2083  000AA2  6B66               	clrf	(_ECU+1)& (0+255),b	;volatile
  2084  000AA4  6B8A               	clrf	(_ECU+37)& (0+255),b	;volatile
  2085  000AA6  9C4B               	bcf	_Flag_Send_data/(0+8),_Flag_Send_data& (0+7),c	;volatile
  2086  000AA8  0E65               	movlw	low _ECU	;volatile
  2087  000AAA  6F62               	movwf	_p& (0+255),b
  2088  000AAC  D00B               	goto	l5174
  2089  000AAE                     l477:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;main.c: 383: else
  2093                           ;main.c: 384: {RCSTAbits.CREN=0;TXREG=*p;ECU.CHK_SUM_TX=ECU.CHK_SUM_TX+TXREG; p=p+1;ECU.
      +                          Byte_Counter++;}}
  2094  000AAE  98AB               	bcf	4011,4,c	;volatile
  2095                           
  2096                           ; BSR set to: 0
  2097  000AB0  5162               	movf	_p& (0+255),w,b
  2098  000AB2  6ED9               	movwf	fsr2l,c
  2099  000AB4  6ADA               	clrf	fsr2h,c
  2100  000AB6  50DF               	movf	indf2,w,c
  2101  000AB8  6EAD               	movwf	4013,c	;volatile
  2102                           
  2103                           ; BSR set to: 0
  2104  000ABA  518A               	movf	(_ECU+37)& (0+255),w,b	;volatile
  2105  000ABC  24AD               	addwf	4013,w,c	;volatile
  2106  000ABE  6F8A               	movwf	(_ECU+37)& (0+255),b	;volatile
  2107                           
  2108                           ; BSR set to: 0
  2109  000AC0  2B62               	incf	_p& (0+255),f,b
  2110                           
  2111                           ; BSR set to: 0
  2112  000AC2  2B66               	incf	(_ECU+1)& (0+255),f,b	;volatile
  2113  000AC4                     l5174:
  2114                           
  2115                           ;main.c: 386: if (TXSTAbits.TRMT==1 && Flag_Send_data==0) {RCSTAbits.CREN=1;}
  2116  000AC4  A2AC               	btfss	4012,1,c	;volatile
  2117  000AC6  D002               	goto	l479
  2118  000AC8  AC4B               	btfss	_Flag_Send_data/(0+8),_Flag_Send_data& (0+7),c	;volatile
  2119  000ACA  88AB               	bsf	4011,4,c	;volatile
  2120  000ACC                     l479:
  2121                           
  2122                           ;main.c: 388: if (RCSTAbits.OERR==1){RCSTAbits.CREN=0;RCSTAbits.CREN=1;TXSTAbits.TXEN=0;
      +                          TXSTAbits.TXEN=1;}
  2123  000ACC  A2AB               	btfss	4011,1,c	;volatile
  2124  000ACE  D004               	goto	l480
  2125  000AD0  98AB               	bcf	4011,4,c	;volatile
  2126  000AD2  88AB               	bsf	4011,4,c	;volatile
  2127  000AD4  9AAC               	bcf	4012,5,c	;volatile
  2128  000AD6  8AAC               	bsf	4012,5,c	;volatile
  2129  000AD8                     l480:
  2130                           
  2131                           ;main.c: 390: if (Flag_Speed_equal){
  2132  000AD8  AE4B               	btfss	_Flag_Speed_equal/(0+8),_Flag_Speed_equal& (0+7),c	;volatile
  2133  000ADA  D048               	goto	l481
  2134                           
  2135                           ;main.c: 391: unsigned int MSpeed, TCycle;
  2136                           ;main.c: 392: INT0IE=0;TCycle=TMRC;INT0IE=1;Flag_Speed_equal=0;
  2137  000ADC  98F2               	bcf	intcon,4,c	;volatile
  2138  000ADE  C03B  F116         	movff	_TMRC,main@TCycle	;volatile
  2139  000AE2  C03C  F117         	movff	_TMRC+1,main@TCycle+1	;volatile
  2140  000AE6  88F2               	bsf	intcon,4,c	;volatile
  2141  000AE8  9E4B               	bcf	_Flag_Speed_equal/(0+8),_Flag_Speed_equal& (0+7),c	;volatile
  2142                           
  2143                           ;main.c: 394: if (TCycle==0 || SPD_CONST<TCycle) {ECU.RPM=0,ECU.Mtr_On=0;ECU.SeqINJ=0;EC
      +                          U.CutOff=0;}
  2144  000AEA  0101               	movlb	1	; () banked
  2145  000AEC  5117               	movf	(main@TCycle+1)& (0+255),w,b
  2146  000AEE  1116               	iorwf	main@TCycle& (0+255),w,b
  2147  000AF0  E105               	bnz	l5188
  2148                           
  2149                           ; BSR set to: 1
  2150  000AF2  0100               	movlb	0	; () banked
  2151  000AF4  6B72               	clrf	(_ECU+13)& (0+255),b	;volatile
  2152  000AF6  9169               	bcf	(_ECU+4)& (0+255),0,b	;volatile
  2153  000AF8  957F               	bcf	(_ECU+26)& (0+255),2,b	;volatile
  2154  000AFA  D02E               	goto	u5770
  2155  000AFC                     l5188:
  2156                           
  2157                           ; BSR set to: 1
  2158  000AFC  0EE0               	movlw	224
  2159  000AFE  0100               	movlb	0	; () banked
  2160  000B00  6FDA               	movwf	___ltdiv@dividend& (0+255),b
  2161  000B02  0E93               	movlw	147
  2162  000B04  6FDB               	movwf	(___ltdiv@dividend+1)& (0+255),b
  2163  000B06  0E04               	movlw	4
  2164  000B08  6FDC               	movwf	(___ltdiv@dividend+2)& (0+255),b
  2165  000B0A  C116  F0DD         	movff	main@TCycle,___ltdiv@divisor
  2166  000B0E  C117  F0DE         	movff	main@TCycle+1,___ltdiv@divisor+1
  2167  000B12  6BDF               	clrf	(___ltdiv@divisor+2)& (0+255),b
  2168  000B14  ECDE  F00B         	call	___ltdiv	;wreg free
  2169  000B18  C0DA  F118         	movff	?___ltdiv,main@MSpeed
  2170  000B1C  C0DB  F119         	movff	?___ltdiv+1,main@MSpeed+1
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;main.c: 398: if (MSpeed>255) {ECU.RPM=255;} else {ECU.RPM=MSpeed;}
  2174  000B20  0E00               	movlw	0
  2175  000B22  0101               	movlb	1	; () banked
  2176  000B24  5D18               	subwf	main@MSpeed& (0+255),w,b
  2177  000B26  0E01               	movlw	1
  2178  000B28  5919               	subwfb	(main@MSpeed+1)& (0+255),w,b
  2179  000B2A  E303               	bnc	l484
  2180                           
  2181                           ; BSR set to: 1
  2182  000B2C  0100               	movlb	0	; () banked
  2183  000B2E  6972               	setf	(_ECU+13)& (0+255),b	;volatile
  2184  000B30  D002               	goto	l5194
  2185  000B32                     l484:
  2186                           
  2187                           ; BSR set to: 1
  2188  000B32  C118  F072         	movff	main@MSpeed,_ECU+13	;volatile
  2189  000B36                     l5194:
  2190                           
  2191                           ;main.c: 399: if (MSpeed>260 && ECU.CutOff==0) {ECU.CutOff=1;}
  2192  000B36  0E05               	movlw	5
  2193  000B38  0101               	movlb	1	; () banked
  2194  000B3A  5D18               	subwf	main@MSpeed& (0+255),w,b
  2195  000B3C  0E01               	movlw	1
  2196  000B3E  5919               	subwfb	(main@MSpeed+1)& (0+255),w,b
  2197  000B40  E303               	bnc	l5200
  2198                           
  2199                           ; BSR set to: 1
  2200  000B42  0100               	movlb	0	; () banked
  2201  000B44  AF7F               	btfss	(_ECU+26)& (0+255),7,b	;volatile
  2202                           
  2203                           ; BSR set to: 0
  2204  000B46  8F7F               	bsf	(_ECU+26)& (0+255),7,b	;volatile
  2205  000B48                     l5200:
  2206                           
  2207                           ;main.c: 400: if (MSpeed<250 && ECU.CutOff==1) {ECU.CutOff=0;}
  2208  000B48  0EFA               	movlw	250
  2209  000B4A  0101               	movlb	1	; () banked
  2210  000B4C  5D18               	subwf	main@MSpeed& (0+255),w,b
  2211  000B4E  0E00               	movlw	0
  2212  000B50  5919               	subwfb	(main@MSpeed+1)& (0+255),w,b
  2213  000B52  E203               	bc	l5206
  2214                           
  2215                           ; BSR set to: 1
  2216  000B54  0100               	movlb	0	; () banked
  2217  000B56  BF7F               	btfsc	(_ECU+26)& (0+255),7,b	;volatile
  2218  000B58                     u5770:
  2219                           
  2220                           ; BSR set to: 0
  2221  000B58  9F7F               	bcf	(_ECU+26)& (0+255),7,b	;volatile
  2222  000B5A                     l5206:
  2223                           
  2224                           ;main.c: 401: }
  2225                           ;main.c: 403: if (ECU.RPM<16) {ECU.Mtr_On=0;ECU.AFSTEN=1;ECU.CutOff=0;} else {ECU.Mtr_On
      +                          =1;}
  2226  000B5A  0E10               	movlw	16
  2227  000B5C  0100               	movlb	0	; () banked
  2228  000B5E  5D72               	subwf	(_ECU+13)& (0+255),w,b	;volatile
  2229  000B60  E204               	bc	l488
  2230                           
  2231                           ; BSR set to: 0
  2232  000B62  9169               	bcf	(_ECU+4)& (0+255),0,b	;volatile
  2233  000B64  8F69               	bsf	(_ECU+4)& (0+255),7,b	;volatile
  2234  000B66  9F7F               	bcf	(_ECU+26)& (0+255),7,b	;volatile
  2235  000B68  D001               	goto	l481
  2236  000B6A                     l488:
  2237                           
  2238                           ; BSR set to: 0
  2239  000B6A  8169               	bsf	(_ECU+4)& (0+255),0,b	;volatile
  2240  000B6C                     l481:
  2241                           
  2242                           ;main.c: 404: }
  2243                           ;main.c: 406: if (Flag_Corr_equal){Flag_Corr_equal=0;
  2244  000B6C  A04B               	btfss	_Flag_Corr_equal/(0+8),_Flag_Corr_equal& (0+7),c	;volatile
  2245  000B6E  D00F               	goto	l5216
  2246  000B70  0100               	movlb	(_Flag_Corr_equal/(0+8)) shr (0+8)
  2247  000B72  904B               	bcf	_Flag_Corr_equal/(0+8),_Flag_Corr_equal& (0+7),c	;volatile
  2248                           
  2249                           ;main.c: 407: Get_Lag();
  2250  000B74  EC7D  F006         	call	_Get_Lag	;wreg free
  2251                           
  2252                           ;main.c: 408: Emul_PND();
  2253  000B78  EC97  F00C         	call	_Emul_PND	;wreg free
  2254                           
  2255                           ; BSR set to: 15
  2256                           ;main.c: 409: ECU.SPD_Enr=VE(ECU.RPM,VE_table);}
  2257  000B7C  0E01               	movlw	high _VE_table	;volatile
  2258  000B7E  0100               	movlb	0	; () banked
  2259  000B80  6FDB               	movwf	(VE@Table+1)& (0+255),b
  2260  000B82  0E1A               	movlw	low _VE_table	;volatile
  2261  000B84  6FDA               	movwf	VE@Table& (0+255),b
  2262  000B86  5172               	movf	(_ECU+13)& (0+255),w,b	;volatile
  2263  000B88  ECD7  F007         	call	_VE
  2264  000B8C  6F88               	movwf	(_ECU+35)& (0+255),b	;volatile
  2265  000B8E                     l5216:
  2266                           
  2267                           ;main.c: 411: if (Flag_IAC){Flag_IAC=0;IAC_Stab();}
  2268  000B8E  A64B               	btfss	_Flag_IAC/(0+8),_Flag_IAC& (0+7),c	;volatile
  2269  000B90  D004               	goto	l5222
  2270  000B92  0100               	movlb	(_Flag_IAC/(0+8)) shr (0+8)
  2271  000B94  964B               	bcf	_Flag_IAC/(0+8),_Flag_IAC& (0+7),c	;volatile
  2272  000B96  EC0E  F00C         	call	_IAC_Stab	;wreg free
  2273  000B9A                     l5222:
  2274                           
  2275                           ;main.c: 413: if (Flag_set_IAC){Flag_set_IAC=0;STP_Set(10);}
  2276  000B9A  A44C               	btfss	_Flag_set_IAC/(0+8),_Flag_set_IAC& (0+7),c	;volatile
  2277  000B9C  D005               	goto	l5228
  2278  000B9E  0100               	movlb	(_Flag_set_IAC/(0+8)) shr (0+8)
  2279  000BA0  944C               	bcf	_Flag_set_IAC/(0+8),_Flag_set_IAC& (0+7),c	;volatile
  2280  000BA2  0E0A               	movlw	10
  2281  000BA4  EC55  F00E         	call	_STP_Set
  2282  000BA8                     l5228:
  2283                           
  2284                           ;main.c: 415: if (Flag_UART_recieved){Flag_UART_recieved=0;}
  2285  000BA8  B04C               	btfsc	_Flag_UART_recieved/(0+8),_Flag_UART_recieved& (0+7),c	;volatile
  2286  000BAA  904C               	bcf	_Flag_UART_recieved/(0+8),_Flag_UART_recieved& (0+7),c	;volatile
  2287                           
  2288                           ;main.c: 416: if (Flag_setADC_chenal){Flag_setADC_chenal=0; setADC();}
  2289  000BAC  A24C               	btfss	_Flag_setADC_chenal/(0+8),_Flag_setADC_chenal& (0+7),c	;volatile
  2290  000BAE  D004               	goto	l5236
  2291  000BB0  0100               	movlb	(_Flag_setADC_chenal/(0+8)) shr (0+8)
  2292  000BB2  924C               	bcf	_Flag_setADC_chenal/(0+8),_Flag_setADC_chenal& (0+7),c	;volatile
  2293  000BB4  ECBB  F009         	call	_setADC	;wreg free
  2294  000BB8                     l5236:
  2295                           
  2296                           ;main.c: 418: if (Flag_Sec_Clock){Flag_Sec_Clock=0;
  2297  000BB8  AA4B               	btfss	_Flag_Sec_Clock/(0+8),_Flag_Sec_Clock& (0+7),c	;volatile
  2298  000BBA  D762               	goto	l5148
  2299  000BBC  9A4B               	bcf	_Flag_Sec_Clock/(0+8),_Flag_Sec_Clock& (0+7),c	;volatile
  2300                           
  2301                           ;main.c: 419: static char Minutes,Seconds;
  2302                           ;main.c: 420: if (Minutes>=60){Minutes=0;ECU.MotoClock++;}else{Minutes++;}
  2303  000BBE  0E3B               	movlw	59
  2304  000BC0  0100               	movlb	0	; () banked
  2305  000BC2  6563               	cpfsgt	main@Minutes& (0+255),b
  2306  000BC4  D004               	goto	l5246
  2307                           
  2308                           ; BSR set to: 0
  2309  000BC6  6B63               	clrf	main@Minutes& (0+255),b
  2310                           
  2311                           ; BSR set to: 0
  2312  000BC8  4B7B               	infsnz	(_ECU+22)& (0+255),f,b	;volatile
  2313  000BCA  2B7C               	incf	(_ECU+23)& (0+255),f,b	;volatile
  2314  000BCC  D001               	goto	l5248
  2315  000BCE                     l5246:
  2316                           
  2317                           ; BSR set to: 0
  2318  000BCE  2B63               	incf	main@Minutes& (0+255),f,b
  2319  000BD0                     l5248:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;main.c: 421: if (Seconds>=5){Seconds=0;Flag_FiveSeconds=1;}else{Seconds++;}
  2323  000BD0  0E04               	movlw	4
  2324  000BD2  6564               	cpfsgt	main@Seconds& (0+255),b
  2325  000BD4  D004               	goto	l5252
  2326                           
  2327                           ; BSR set to: 0
  2328  000BD6  6B64               	clrf	main@Seconds& (0+255),b
  2329  000BD8  0100               	movlb	(_Flag_FiveSeconds/(0+8)) shr (0+8)
  2330  000BDA  824B               	bsf	_Flag_FiveSeconds/(0+8),_Flag_FiveSeconds& (0+7),c	;volatile
  2331  000BDC  D751               	goto	l5148
  2332  000BDE                     l5252:
  2333                           
  2334                           ; BSR set to: 0
  2335  000BDE  2B64               	incf	main@Seconds& (0+255),f,b
  2336  000BE0  D74F               	goto	l5148
  2337  000BE2                     __end_of_main:
  2338                           	opt stack 0
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           intcon	equ	0xFF2
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           postdec1	equ	0xFE5
  2347                           fsr1l	equ	0xFE1
  2348                           indf2	equ	0xFDF
  2349                           fsr2h	equ	0xFDA
  2350                           fsr2l	equ	0xFD9
  2351                           
  2352 ;; *************** function _setADC *****************
  2353 ;; Defined at:
  2354 ;;		line 188 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;		None               void
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;Total ram usage:        0 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:   11
  2375 ;; This function calls:
  2376 ;;		_ConvertADC
  2377 ;;		_SetChanADC
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text1
  2384  001376                     __ptext1:
  2385                           	opt stack 0
  2386  001376                     _setADC:
  2387                           	opt stack 18
  2388                           
  2389                           ;main.c: 190: static uint8_t ADCChan;
  2390                           ;main.c: 191: if (GO==0)
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;incstack = 0
  2394  001376  B2C2               	btfsc	4034,1,c	;volatile
  2395  001378  0012               	return	
  2396                           
  2397                           ;main.c: 192: { ADIF=0;
  2398  00137A  9C9E               	bcf	3998,6,c	;volatile
  2399                           
  2400                           ;main.c: 193: switch (ADCChan)
  2401  00137C  D023               	goto	l4944
  2402  00137E                     l378:
  2403  00137E  0100               	movlb	0	; () banked
  2404  001380  B169               	btfsc	(_ECU+4)& (0+255),0,b	;volatile
  2405  001382  D005               	goto	l4916
  2406                           
  2407                           ; BSR set to: 0
  2408  001384  0E83               	movlw	131
  2409  001386  EC62  F00E         	call	_SetChanADC
  2410  00138A                     l4914:
  2411                           
  2412                           ; BSR set to: 0
  2413  00138A  2A3E               	incf	setADC@ADCChan,f,c
  2414  00138C  D02A               	goto	l4946
  2415  00138E                     l4916:
  2416                           
  2417                           ; BSR set to: 0
  2418  00138E  2A3E               	incf	setADC@ADCChan,f,c
  2419  001390  0012               	return	
  2420  001392                     l4920:
  2421  001392  0E87               	movlw	135
  2422  001394  EC62  F00E         	call	_SetChanADC
  2423  001398  D7F8               	goto	l4914
  2424  00139A                     l4924:
  2425  00139A  0E8B               	movlw	139
  2426  00139C  EC62  F00E         	call	_SetChanADC
  2427  0013A0  D7F4               	goto	l4914
  2428  0013A2                     l4928:
  2429  0013A2  0E93               	movlw	147
  2430  0013A4  EC62  F00E         	call	_SetChanADC
  2431  0013A8  D7F0               	goto	l4914
  2432  0013AA                     l4932:
  2433  0013AA  0E8F               	movlw	143
  2434  0013AC  EC62  F00E         	call	_SetChanADC
  2435  0013B0  D7EC               	goto	l4914
  2436  0013B2                     l4936:
  2437  0013B2  0E97               	movlw	151
  2438  0013B4  EC62  F00E         	call	_SetChanADC
  2439  0013B8  D7E8               	goto	l4914
  2440  0013BA                     l4940:
  2441  0013BA  0EE7               	movlw	231
  2442  0013BC  EC62  F00E         	call	_SetChanADC
  2443  0013C0                     l4942:
  2444  0013C0  6A3E               	clrf	setADC@ADCChan,c
  2445  0013C2  D00F               	goto	l4946
  2446  0013C4                     l4944:
  2447  0013C4  503E               	movf	setADC@ADCChan,w,c
  2448                           
  2449                           ; Switch size 1, requested type "speed"
  2450                           ; Number of cases is 7, Range of values is 0 to 6
  2451                           ; switch strategies available:
  2452                           ; Name         Instructions Cycles
  2453                           ; simple_byte           22    12 (average)
  2454                           ;	Chosen strategy is simple_byte
  2455  0013C6  E0DB               	bz	l378
  2456  0013C8  0A01               	xorlw	1	; case 1
  2457  0013CA  E0E3               	bz	l4920
  2458  0013CC  0A03               	xorlw	3	; case 2
  2459  0013CE  E0E5               	bz	l4924
  2460  0013D0  0A01               	xorlw	1	; case 3
  2461  0013D2  E0E7               	bz	l4928
  2462  0013D4  0A07               	xorlw	7	; case 4
  2463  0013D6  E0E9               	bz	l4932
  2464  0013D8  0A01               	xorlw	1	; case 5
  2465  0013DA  E0EB               	bz	l4936
  2466  0013DC  0A03               	xorlw	3	; case 6
  2467  0013DE  E0ED               	bz	l4940
  2468  0013E0  D7EF               	goto	l4942
  2469  0013E2                     l4946:
  2470                           
  2471                           ;main.c: 206: _delay((unsigned long)((22)*(64000000/4000000.0)));ADIF=0;
  2472  0013E2  0E75               	movlw	117
  2473  0013E4                     u5937:
  2474  0013E4  2EE8               	decfsz	wreg,f,c
  2475  0013E6  D7FE               	goto	u5937
  2476  0013E8  F000               	nop	
  2477  0013EA  9C9E               	bcf	3998,6,c	;volatile
  2478                           
  2479                           ;main.c: 207: ConvertADC();
  2480  0013EC  EFBA  F00E         	goto	_ConvertADC	;wreg free
  2481  0013F0                     __end_of_setADC:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           intcon	equ	0xFF2
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1l	equ	0xFE1
  2492                           indf2	equ	0xFDF
  2493                           fsr2h	equ	0xFDA
  2494                           fsr2l	equ	0xFD9
  2495                           
  2496 ;; *************** function _SetChanADC *****************
  2497 ;; Defined at:
  2498 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcsetch.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  channel         1    wreg     unsigned char 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  channel         1   20[BANK0 ] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;		None               void
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : F/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;Total ram usage:        2 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:   10
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_setADC
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text2
  2527  001CC4                     __ptext2:
  2528                           	opt stack 0
  2529  001CC4                     _SetChanADC:
  2530                           	opt stack 18
  2531                           
  2532                           ;incstack = 0
  2533                           ;SetChanADC@channel stored from wreg
  2534  001CC4  0100               	movlb	0	; () banked
  2535  001CC6  6FDB               	movwf	SetChanADC@channel& (0+255),b
  2536                           
  2537                           ; BSR set to: 0
  2538  001CC8  C0DB  F0DA         	movff	SetChanADC@channel,??_SetChanADC
  2539  001CCC  0E7C               	movlw	124
  2540  001CCE  17DA               	andwf	??_SetChanADC& (0+255),f,b
  2541  001CD0  50C2               	movf	4034,w,c	;volatile
  2542  001CD2  0B83               	andlw	131
  2543  001CD4  11DA               	iorwf	??_SetChanADC& (0+255),w,b
  2544  001CD6  6EC2               	movwf	4034,c	;volatile
  2545                           
  2546                           ; BSR set to: 0
  2547  001CD8  0012               	return	
  2548  001CDA                     __end_of_SetChanADC:
  2549                           	opt stack 0
  2550                           tblptru	equ	0xFF8
  2551                           tblptrh	equ	0xFF7
  2552                           tblptrl	equ	0xFF6
  2553                           tablat	equ	0xFF5
  2554                           intcon	equ	0xFF2
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           postdec1	equ	0xFE5
  2558                           fsr1l	equ	0xFE1
  2559                           indf2	equ	0xFDF
  2560                           fsr2h	equ	0xFDA
  2561                           fsr2l	equ	0xFD9
  2562                           
  2563 ;; *************** function ___ltdiv *****************
  2564 ;; Defined at:
  2565 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ltdiv.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  dividend        3   19[BANK0 ] unsigned um
  2568 ;;  divisor         3   22[BANK0 ] unsigned um
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  quotient        3   25[BANK0 ] unsigned um
  2571 ;;  counter         1   28[BANK0 ] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  3   19[BANK0 ] unsigned um
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : F/0
  2578 ;;		On exit  : F/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:       10 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:   10
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text3
  2596  0017BC                     __ptext3:
  2597                           	opt stack 0
  2598  0017BC                     ___ltdiv:
  2599                           	opt stack 19
  2600                           
  2601                           ; BSR set to: 0
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;incstack = 0
  2605  0017BC  6BE0               	clrf	___ltdiv@quotient& (0+255),b
  2606  0017BE  6BE1               	clrf	(___ltdiv@quotient+1)& (0+255),b
  2607  0017C0  6BE2               	clrf	(___ltdiv@quotient+2)& (0+255),b
  2608                           
  2609                           ; BSR set to: 0
  2610  0017C2  51DD               	movf	___ltdiv@divisor& (0+255),w,b
  2611  0017C4  11DE               	iorwf	(___ltdiv@divisor+1)& (0+255),w,b
  2612  0017C6  11DF               	iorwf	(___ltdiv@divisor+2)& (0+255),w,b
  2613  0017C8  E022               	bz	l1461
  2614                           
  2615                           ; BSR set to: 0
  2616  0017CA  0E01               	movlw	1
  2617  0017CC  6FE3               	movwf	___ltdiv@counter& (0+255),b
  2618  0017CE  D005               	goto	l5128
  2619  0017D0                     l5126:
  2620                           
  2621                           ; BSR set to: 0
  2622  0017D0  90D8               	bcf	status,0,c
  2623  0017D2  37DD               	rlcf	___ltdiv@divisor& (0+255),f,b
  2624  0017D4  37DE               	rlcf	(___ltdiv@divisor+1)& (0+255),f,b
  2625  0017D6  37DF               	rlcf	(___ltdiv@divisor+2)& (0+255),f,b
  2626  0017D8  2BE3               	incf	___ltdiv@counter& (0+255),f,b
  2627  0017DA                     l5128:
  2628                           
  2629                           ; BSR set to: 0
  2630  0017DA  AFDF               	btfss	(___ltdiv@divisor+2)& (0+255),7,b
  2631  0017DC  D7F9               	goto	l5126
  2632  0017DE                     l5130:
  2633                           
  2634                           ; BSR set to: 0
  2635  0017DE  90D8               	bcf	status,0,c
  2636  0017E0  37E0               	rlcf	___ltdiv@quotient& (0+255),f,b
  2637  0017E2  37E1               	rlcf	(___ltdiv@quotient+1)& (0+255),f,b
  2638  0017E4  37E2               	rlcf	(___ltdiv@quotient+2)& (0+255),f,b
  2639                           
  2640                           ; BSR set to: 0
  2641  0017E6  51DD               	movf	___ltdiv@divisor& (0+255),w,b
  2642  0017E8  5DDA               	subwf	___ltdiv@dividend& (0+255),w,b
  2643  0017EA  51DE               	movf	(___ltdiv@divisor+1)& (0+255),w,b
  2644  0017EC  59DB               	subwfb	(___ltdiv@dividend+1)& (0+255),w,b
  2645  0017EE  51DF               	movf	(___ltdiv@divisor+2)& (0+255),w,b
  2646  0017F0  59DC               	subwfb	(___ltdiv@dividend+2)& (0+255),w,b
  2647  0017F2  E307               	bnc	l1466
  2648                           
  2649                           ; BSR set to: 0
  2650  0017F4  51DD               	movf	___ltdiv@divisor& (0+255),w,b
  2651  0017F6  5FDA               	subwf	___ltdiv@dividend& (0+255),f,b
  2652  0017F8  51DE               	movf	(___ltdiv@divisor+1)& (0+255),w,b
  2653  0017FA  5BDB               	subwfb	(___ltdiv@dividend+1)& (0+255),f,b
  2654  0017FC  51DF               	movf	(___ltdiv@divisor+2)& (0+255),w,b
  2655  0017FE  5BDC               	subwfb	(___ltdiv@dividend+2)& (0+255),f,b
  2656                           
  2657                           ; BSR set to: 0
  2658  001800  81E0               	bsf	___ltdiv@quotient& (0+255),0,b
  2659  001802                     l1466:
  2660                           
  2661                           ; BSR set to: 0
  2662  001802  90D8               	bcf	status,0,c
  2663  001804  33DF               	rrcf	(___ltdiv@divisor+2)& (0+255),f,b
  2664  001806  33DE               	rrcf	(___ltdiv@divisor+1)& (0+255),f,b
  2665  001808  33DD               	rrcf	___ltdiv@divisor& (0+255),f,b
  2666                           
  2667                           ; BSR set to: 0
  2668  00180A  2FE3               	decfsz	___ltdiv@counter& (0+255),f,b
  2669  00180C  D7E8               	goto	l5130
  2670  00180E                     l1461:
  2671                           
  2672                           ; BSR set to: 0
  2673  00180E  C0E0  F0DA         	movff	___ltdiv@quotient,?___ltdiv
  2674  001812  C0E1  F0DB         	movff	___ltdiv@quotient+1,?___ltdiv+1
  2675  001816  C0E2  F0DC         	movff	___ltdiv@quotient+2,?___ltdiv+2
  2676                           
  2677                           ; BSR set to: 0
  2678  00181A  0012               	return	
  2679  00181C                     __end_of___ltdiv:
  2680                           	opt stack 0
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           intcon	equ	0xFF2
  2686                           postinc0	equ	0xFEE
  2687                           wreg	equ	0xFE8
  2688                           postdec1	equ	0xFE5
  2689                           fsr1l	equ	0xFE1
  2690                           indf2	equ	0xFDF
  2691                           fsr2h	equ	0xFDA
  2692                           fsr2l	equ	0xFD9
  2693                           status	equ	0xFD8
  2694                           
  2695 ;; *************** function _VE *****************
  2696 ;; Defined at:
  2697 ;;		line 215 in file "D:\DOC\Project\WEGA\WEGA2\Fuel_Calc.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  a               1    wreg     unsigned char 
  2700 ;;  Table           2   19[BANK0 ] PTR unsigned char 
  2701 ;;		 -> VE_table(16), 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  a               1   28[BANK0 ] unsigned char 
  2704 ;;  hidt            1   32[BANK0 ] unsigned char 
  2705 ;;  lowdt           1   31[BANK0 ] unsigned char 
  2706 ;;  Span            1   30[BANK0 ] unsigned char 
  2707 ;;  Index           1   29[BANK0 ] unsigned char 
  2708 ;;  Slope           1    0        unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      unsigned char 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2713 ;; Tracked objects:
  2714 ;;		On entry : F/0
  2715 ;;		On exit  : F/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;Total ram usage:       14 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:   10
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text4
  2733  000FAE                     __ptext4:
  2734                           	opt stack 0
  2735  000FAE                     _VE:
  2736                           	opt stack 19
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;incstack = 0
  2740                           ;VE@a stored from wreg
  2741  000FAE  6FE3               	movwf	VE@a& (0+255),b
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;Fuel_Calc.c: 217: unsigned char Index,Span,Slope,lowdt,hidt;
  2745                           ;Fuel_Calc.c: 218: Span=a&0b00001111;
  2746  000FB0  51E3               	movf	VE@a& (0+255),w,b
  2747  000FB2  0B0F               	andlw	15
  2748  000FB4  6FE5               	movwf	VE@Span& (0+255),b
  2749                           
  2750                           ;Fuel_Calc.c: 219: Index=a>>4;
  2751  000FB6  39E3               	swapf	VE@a& (0+255),w,b
  2752  000FB8  0B0F               	andlw	15
  2753  000FBA  6FE4               	movwf	VE@Index& (0+255),b
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;Fuel_Calc.c: 220: lowdt=Table[Index];hidt=Table[Index+1];
  2757  000FBC  51E4               	movf	VE@Index& (0+255),w,b
  2758  000FBE  25DA               	addwf	VE@Table& (0+255),w,b
  2759  000FC0  6ED9               	movwf	fsr2l,c
  2760  000FC2  0E00               	movlw	0
  2761  000FC4  21DB               	addwfc	(VE@Table+1)& (0+255),w,b
  2762  000FC6  6EDA               	movwf	fsr2h,c
  2763  000FC8  50DF               	movf	indf2,w,c
  2764  000FCA  6FE6               	movwf	VE@lowdt& (0+255),b
  2765                           
  2766                           ; BSR set to: 0
  2767  000FCC  51E4               	movf	VE@Index& (0+255),w,b
  2768  000FCE  25DA               	addwf	VE@Table& (0+255),w,b
  2769  000FD0  6FDC               	movwf	??_VE& (0+255),b
  2770  000FD2  0E00               	movlw	0
  2771  000FD4  21DB               	addwfc	(VE@Table+1)& (0+255),w,b
  2772  000FD6  6FDD               	movwf	(??_VE+1)& (0+255),b
  2773  000FD8  29DC               	incf	??_VE& (0+255),w,b
  2774  000FDA  6ED9               	movwf	fsr2l,c
  2775  000FDC  0E00               	movlw	0
  2776  000FDE  21DD               	addwfc	(??_VE+1)& (0+255),w,b
  2777  000FE0  6EDA               	movwf	fsr2h,c
  2778  000FE2  50DF               	movf	indf2,w,c
  2779  000FE4  6FE7               	movwf	VE@hidt& (0+255),b
  2780                           
  2781                           ;Fuel_Calc.c: 221: if (lowdt<hidt){return(lowdt+(((hidt-lowdt)*Span)>>4));}else{return(h
      +                          idt+(((lowdt-hidt)*Span)>>4));}
  2782  000FE6  51E7               	movf	VE@hidt& (0+255),w,b
  2783  000FE8  5DE6               	subwf	VE@lowdt& (0+255),w,b
  2784  000FEA  E221               	bc	l5074
  2785                           
  2786                           ; BSR set to: 0
  2787  000FEC  51E5               	movf	VE@Span& (0+255),w,b
  2788  000FEE  6FDC               	movwf	??_VE& (0+255),b
  2789  000FF0  6BDD               	clrf	(??_VE+1)& (0+255),b
  2790  000FF2  51E6               	movf	VE@lowdt& (0+255),w,b
  2791  000FF4  C0E7  F0DE         	movff	VE@hidt,??_VE+2
  2792  000FF8  6BDF               	clrf	(??_VE+3)& (0+255),b
  2793  000FFA  5FDE               	subwf	(??_VE+2)& (0+255),f,b
  2794  000FFC  0E00               	movlw	0
  2795  000FFE  5BDF               	subwfb	(??_VE+3)& (0+255),f,b
  2796  001000  51DC               	movf	??_VE& (0+255),w,b
  2797  001002  03DE               	mulwf	(??_VE+2)& (0+255),b
  2798  001004  CFF3 F0E0          	movff	prodl,??_VE+4
  2799  001008  CFF4 F0E1          	movff	prodh,??_VE+5
  2800  00100C  03DF               	mulwf	(??_VE+3)& (0+255),b
  2801  00100E  50F3               	movf	243,w,c
  2802  001010  27E1               	addwf	(??_VE+5)& (0+255),f,b
  2803  001012  51DD               	movf	(??_VE+1)& (0+255),w,b
  2804  001014  03DE               	mulwf	(??_VE+2)& (0+255),b
  2805  001016  50F3               	movf	243,w,c
  2806  001018  27E1               	addwf	(??_VE+5)& (0+255),f,b
  2807  00101A  0E04               	movlw	4
  2808  00101C  6FE2               	movwf	(??_VE+6)& (0+255),b
  2809  00101E                     u5505:
  2810  00101E  35E1               	rlcf	(??_VE+5)& (0+255),w,b
  2811  001020  33E1               	rrcf	(??_VE+5)& (0+255),f,b
  2812  001022  33E0               	rrcf	(??_VE+4)& (0+255),f,b
  2813  001024  2FE2               	decfsz	(??_VE+6)& (0+255),f,b
  2814  001026  D7FB               	goto	u5505
  2815  001028  51E0               	movf	(??_VE+4)& (0+255),w,b
  2816  00102A  25E6               	addwf	VE@lowdt& (0+255),w,b
  2817  00102C  0012               	return	
  2818  00102E                     l5074:
  2819                           
  2820                           ; BSR set to: 0
  2821  00102E  51E5               	movf	VE@Span& (0+255),w,b
  2822  001030  6FDC               	movwf	??_VE& (0+255),b
  2823  001032  6BDD               	clrf	(??_VE+1)& (0+255),b
  2824  001034  51E7               	movf	VE@hidt& (0+255),w,b
  2825  001036  C0E6  F0DE         	movff	VE@lowdt,??_VE+2
  2826  00103A  6BDF               	clrf	(??_VE+3)& (0+255),b
  2827  00103C  5FDE               	subwf	(??_VE+2)& (0+255),f,b
  2828  00103E  0E00               	movlw	0
  2829  001040  5BDF               	subwfb	(??_VE+3)& (0+255),f,b
  2830  001042  51DC               	movf	??_VE& (0+255),w,b
  2831  001044  03DE               	mulwf	(??_VE+2)& (0+255),b
  2832  001046  CFF3 F0E0          	movff	prodl,??_VE+4
  2833  00104A  CFF4 F0E1          	movff	prodh,??_VE+5
  2834  00104E  03DF               	mulwf	(??_VE+3)& (0+255),b
  2835  001050  50F3               	movf	243,w,c
  2836  001052  27E1               	addwf	(??_VE+5)& (0+255),f,b
  2837  001054  51DD               	movf	(??_VE+1)& (0+255),w,b
  2838  001056  03DE               	mulwf	(??_VE+2)& (0+255),b
  2839  001058  50F3               	movf	243,w,c
  2840  00105A  27E1               	addwf	(??_VE+5)& (0+255),f,b
  2841  00105C  0E04               	movlw	4
  2842  00105E  6FE2               	movwf	(??_VE+6)& (0+255),b
  2843  001060                     u5515:
  2844  001060  35E1               	rlcf	(??_VE+5)& (0+255),w,b
  2845  001062  33E1               	rrcf	(??_VE+5)& (0+255),f,b
  2846  001064  33E0               	rrcf	(??_VE+4)& (0+255),f,b
  2847  001066  2FE2               	decfsz	(??_VE+6)& (0+255),f,b
  2848  001068  D7FB               	goto	u5515
  2849  00106A  51E0               	movf	(??_VE+4)& (0+255),w,b
  2850  00106C  25E7               	addwf	VE@hidt& (0+255),w,b
  2851                           
  2852                           ; BSR set to: 0
  2853  00106E  0012               	return	
  2854  001070                     __end_of_VE:
  2855                           	opt stack 0
  2856                           tblptru	equ	0xFF8
  2857                           tblptrh	equ	0xFF7
  2858                           tblptrl	equ	0xFF6
  2859                           tablat	equ	0xFF5
  2860                           prodh	equ	0xFF4
  2861                           prodl	equ	0xFF3
  2862                           intcon	equ	0xFF2
  2863                           postinc0	equ	0xFEE
  2864                           wreg	equ	0xFE8
  2865                           postdec1	equ	0xFE5
  2866                           fsr1l	equ	0xFE1
  2867                           indf2	equ	0xFDF
  2868                           fsr2h	equ	0xFDA
  2869                           fsr2l	equ	0xFD9
  2870                           status	equ	0xFD8
  2871                           
  2872 ;; *************** function _STP_Set *****************
  2873 ;; Defined at:
  2874 ;;		line 44 in file "D:\DOC\Project\WEGA\WEGA2\IAC.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  p               1    wreg     unsigned char 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  p               1   20[BANK0 ] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;		None               void
  2881 ;; Registers used:
  2882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : F/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;Total ram usage:        1 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; Hardware stack levels required when called:   11
  2895 ;; This function calls:
  2896 ;;		_STP_Close
  2897 ;;		_STP_Open
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text5
  2904  001CAA                     __ptext5:
  2905                           	opt stack 0
  2906  001CAA                     _STP_Set:
  2907                           	opt stack 18
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;incstack = 0
  2911                           ;STP_Set@p stored from wreg
  2912  001CAA  0100               	movlb	0	; () banked
  2913  001CAC  6FDB               	movwf	STP_Set@p& (0+255),b
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;IAC.c: 46: if (p > ECU.STEPCNT) {STP_Open();return;}
  2917  001CAE  51DB               	movf	STP_Set@p& (0+255),w,b
  2918  001CB0  5D6B               	subwf	(_ECU+6)& (0+255),w,b	;volatile
  2919  001CB2  E202               	bc	l5114
  2920                           
  2921                           ; BSR set to: 0
  2922  001CB4  EF47  F00B         	goto	_STP_Open	;wreg free
  2923  001CB8                     l5114:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;IAC.c: 47: if (p < ECU.STEPCNT) {STP_Close();return;}
  2927  001CB8  516B               	movf	(_ECU+6)& (0+255),w,b	;volatile
  2928  001CBA  5DDB               	subwf	STP_Set@p& (0+255),w,b
  2929  001CBC  A0D8               	btfss	status,0,c
  2930                           
  2931                           ; BSR set to: 0
  2932  001CBE  ECAD  F00B         	call	_STP_Close	;wreg free
  2933                           
  2934                           ; BSR set to: 0
  2935  001CC2  0012               	return	
  2936  001CC4                     __end_of_STP_Set:
  2937                           	opt stack 0
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodh	equ	0xFF4
  2943                           prodl	equ	0xFF3
  2944                           intcon	equ	0xFF2
  2945                           postinc0	equ	0xFEE
  2946                           wreg	equ	0xFE8
  2947                           postdec1	equ	0xFE5
  2948                           fsr1l	equ	0xFE1
  2949                           indf2	equ	0xFDF
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _INIT *****************
  2955 ;; Defined at:
  2956 ;;		line 31 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : F/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:   12
  2977 ;; This function calls:
  2978 ;;		_ConvertADC
  2979 ;;		_OpenADC
  2980 ;;		_OpenPWM5
  2981 ;;		_OpenTimer6
  2982 ;;		_STP_Init
  2983 ;;		_SetDCPWM5
  2984 ;; This function is called by:
  2985 ;;		_main
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text6
  2990  00090A                     __ptext6:
  2991                           	opt stack 0
  2992  00090A                     _INIT:
  2993                           	opt stack 17
  2994                           
  2995                           ;main.c: 33: OSCCON = 0x30;
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;incstack = 0
  2999  00090A  0E30               	movlw	48
  3000  00090C  6ED3               	movwf	4051,c	;volatile
  3001                           
  3002                           ;main.c: 34: OSCCON2 = 0x04;
  3003  00090E  0E04               	movlw	4
  3004  000910  6ED2               	movwf	4050,c	;volatile
  3005                           
  3006                           ;main.c: 36: LATE = 0x00;LATD = 0x00;LATA = 0x00;LATB = 0x00;LATC = 0x00;
  3007  000912  6A8D               	clrf	3981,c	;volatile
  3008  000914  6A8C               	clrf	3980,c	;volatile
  3009  000916  6A89               	clrf	3977,c	;volatile
  3010  000918  6A8A               	clrf	3978,c	;volatile
  3011  00091A  6A8B               	clrf	3979,c	;volatile
  3012                           
  3013                           ;main.c: 38: TRISE = 0B00000011;
  3014  00091C  0E03               	movlw	3
  3015  00091E  6E96               	movwf	3990,c	;volatile
  3016                           
  3017                           ;main.c: 39: TRISA = 0xFF;
  3018  000920  6892               	setf	3986,c	;volatile
  3019                           
  3020                           ;main.c: 40: TRISB = 0B00100111;
  3021  000922  0E27               	movlw	39
  3022  000924  6E93               	movwf	3987,c	;volatile
  3023                           
  3024                           ;main.c: 41: TRISC = 0B10000000;
  3025  000926  0E80               	movlw	128
  3026  000928  6E94               	movwf	3988,c	;volatile
  3027                           
  3028                           ;main.c: 42: TRISD = 0b00100000;
  3029  00092A  0E20               	movlw	32
  3030  00092C  6E95               	movwf	3989,c	;volatile
  3031                           
  3032                           ;main.c: 46: ANSELD = 0xFF;
  3033  00092E  010F               	movlb	15	; () banked
  3034  000930  693B               	setf	59,b	;volatile
  3035                           
  3036                           ;main.c: 47: ANSELC = 0x3C;
  3037  000932  0E3C               	movlw	60
  3038  000934  6F3A               	movwf	58,b	;volatile
  3039                           
  3040                           ;main.c: 48: ANSELB = 0x3C;
  3041  000936  6F39               	movwf	57,b	;volatile
  3042                           
  3043                           ; BSR set to: 15
  3044                           ;main.c: 49: ANSELE = 0xff;
  3045  000938  693C               	setf	60,b	;volatile
  3046                           
  3047                           ;main.c: 50: ANSELA = 0x2F;
  3048  00093A  0E2F               	movlw	47
  3049  00093C  6F38               	movwf	56,b	;volatile
  3050                           
  3051                           ; BSR set to: 15
  3052                           ;main.c: 52: WPUB = 0x00;
  3053  00093E  6A61               	clrf	3937,c	;volatile
  3054                           
  3055                           ; BSR set to: 15
  3056                           ;main.c: 53: nRBPU = 1;
  3057  000940  8EF1               	bsf	intcon2,7,c	;volatile
  3058                           
  3059                           ; BSR set to: 15
  3060                           ;main.c: 54: LD0=1;LD1=1;LD2=0;LD4=0;
  3061  000942  808C               	bsf	3980,0,c	;volatile
  3062                           
  3063                           ; BSR set to: 15
  3064  000944  828C               	bsf	3980,1,c	;volatile
  3065                           
  3066                           ; BSR set to: 15
  3067  000946  948C               	bcf	3980,2,c	;volatile
  3068                           
  3069                           ; BSR set to: 15
  3070  000948  988C               	bcf	3980,4,c	;volatile
  3071                           
  3072                           ; BSR set to: 15
  3073                           ;main.c: 57: TMR0H = 0x00;TMR0L = 0x60;
  3074  00094A  6AD7               	clrf	4055,c	;volatile
  3075  00094C  0E60               	movlw	96
  3076  00094E  6ED6               	movwf	4054,c	;volatile
  3077                           
  3078                           ;main.c: 58: T0CON = 0xD6;
  3079  000950  0ED6               	movlw	214
  3080  000952  6ED5               	movwf	4053,c	;volatile
  3081                           
  3082                           ;main.c: 60: T1GCON = 0b11000001;
  3083  000954  0EC1               	movlw	193
  3084  000956  6ECC               	movwf	4044,c	;volatile
  3085                           
  3086                           ;main.c: 61: T1CON = 0b00000011;
  3087  000958  0E03               	movlw	3
  3088  00095A  6ECD               	movwf	4045,c	;volatile
  3089                           
  3090                           ; BSR set to: 15
  3091                           ;main.c: 62: TMR1ON=0;
  3092  00095C  90CD               	bcf	4045,0,c	;volatile
  3093                           
  3094                           ; BSR set to: 15
  3095                           ;main.c: 63: TMR1H = 0;TMR1L = 0;
  3096  00095E  6ACF               	clrf	4047,c	;volatile
  3097                           
  3098                           ; BSR set to: 15
  3099  000960  6ACE               	clrf	4046,c	;volatile
  3100                           
  3101                           ; BSR set to: 15
  3102                           ;main.c: 64: PIR1bits.TMR1IF = 0;
  3103  000962  909E               	bcf	3998,0,c	;volatile
  3104                           
  3105                           ;main.c: 68: PR2 = 63;
  3106  000964  0E3F               	movlw	63
  3107  000966  6EBB               	movwf	4027,c	;volatile
  3108                           
  3109                           ;main.c: 69: T2CON = 0b01111100;
  3110  000968  0E7C               	movlw	124
  3111  00096A  6EBA               	movwf	4026,c	;volatile
  3112                           
  3113                           ; BSR set to: 15
  3114                           ;main.c: 70: TMR2IE = 0;
  3115  00096C  929D               	bcf	3997,1,c	;volatile
  3116                           
  3117                           ; BSR set to: 15
  3118                           ;main.c: 73: T3GCON = 0x00;
  3119  00096E  6AB4               	clrf	4020,c	;volatile
  3120                           
  3121                           ;main.c: 74: T3CON = 0b00110111;
  3122  000970  0E37               	movlw	55
  3123  000972  6EB1               	movwf	4017,c	;volatile
  3124                           
  3125                           ; BSR set to: 15
  3126                           ;main.c: 75: TMR3H=0;TMR3L=0;
  3127  000974  6AB3               	clrf	4019,c	;volatile
  3128                           
  3129                           ; BSR set to: 15
  3130  000976  6AB2               	clrf	4018,c	;volatile
  3131                           
  3132                           ; BSR set to: 15
  3133                           ;main.c: 76: TMR3IE=0;
  3134  000978  92A0               	bcf	4000,1,c	;volatile
  3135                           
  3136                           ;main.c: 80: BAUDCON1 = 0x08;RCSTA1 = 0x90;TXSTA1 = 0x24;SPBRG1 = 0x22;SPBRGH1 = 0x06;
  3137  00097A  0E08               	movlw	8
  3138  00097C  6EB8               	movwf	4024,c	;volatile
  3139  00097E  0E90               	movlw	144
  3140  000980  6EAB               	movwf	4011,c	;volatile
  3141  000982  0E24               	movlw	36
  3142  000984  6EAC               	movwf	4012,c	;volatile
  3143  000986  0E22               	movlw	34
  3144  000988  6EAF               	movwf	4015,c	;volatile
  3145  00098A  0E06               	movlw	6
  3146  00098C  6EB0               	movwf	4016,c	;volatile
  3147                           
  3148                           ;main.c: 81: SPBRG1 = 0x82; TX1IE=0;
  3149  00098E  0E82               	movlw	130
  3150  000990  6EAF               	movwf	4015,c	;volatile
  3151                           
  3152                           ; BSR set to: 15
  3153  000992  989D               	bcf	3997,4,c	;volatile
  3154                           
  3155                           ; BSR set to: 15
  3156                           ;main.c: 84: OpenTimer6(0b01111111&0b11111100&0b10000111);
  3157  000994  0E04               	movlw	4
  3158  000996  EC44  F00E         	call	_OpenTimer6
  3159                           
  3160                           ; BSR set to: 15
  3161                           ;main.c: 85: OpenPWM5(255,0b11101111);
  3162  00099A  0EEF               	movlw	239
  3163  00099C  0100               	movlb	0	; () banked
  3164  00099E  6FDA               	movwf	OpenPWM5@timer_source& (0+255),b
  3165  0009A0  0EFF               	movlw	255
  3166  0009A2  EC13  F00B         	call	_OpenPWM5
  3167                           
  3168                           ;main.c: 86: SetDCPWM5(45);
  3169  0009A6  0100               	movlb	0	; () banked
  3170  0009A8  6BDB               	clrf	(SetDCPWM5@dutycycle+1)& (0+255),b
  3171  0009AA  0E2D               	movlw	45
  3172  0009AC  6FDA               	movwf	SetDCPWM5@dutycycle& (0+255),b
  3173  0009AE  EC71  F00D         	call	_SetDCPWM5	;wreg free
  3174                           
  3175                           ; BSR set to: 15
  3176                           ;main.c: 89: IPEN = 1;
  3177  0009B2  8ED0               	bsf	4048,7,c	;volatile
  3178                           
  3179                           ; BSR set to: 15
  3180                           ;main.c: 91: CCP1IP = 1;
  3181  0009B4  849F               	bsf	3999,2,c	;volatile
  3182                           
  3183                           ; BSR set to: 15
  3184                           ;main.c: 92: CCP2IP = 1;
  3185  0009B6  80A2               	bsf	4002,0,c	;volatile
  3186                           
  3187                           ; BSR set to: 15
  3188                           ;main.c: 93: CCP3IP = 1;
  3189  0009B8  807C               	bsf	3964,0,c	;volatile
  3190                           
  3191                           ; BSR set to: 15
  3192                           ;main.c: 94: TMR1IP = 1;
  3193  0009BA  809F               	bsf	3999,0,c	;volatile
  3194                           
  3195                           ; BSR set to: 15
  3196                           ;main.c: 95: TMR0IP = 0;
  3197  0009BC  94F1               	bcf	intcon2,2,c	;volatile
  3198                           
  3199                           ; BSR set to: 15
  3200                           ;main.c: 96: ADIP = 0;
  3201  0009BE  9C9F               	bcf	3999,6,c	;volatile
  3202                           
  3203                           ; BSR set to: 15
  3204                           ;main.c: 97: TX1IP = 0;
  3205  0009C0  989F               	bcf	3999,4,c	;volatile
  3206                           
  3207                           ; BSR set to: 15
  3208                           ;main.c: 98: RC1IP = 0;
  3209  0009C2  9A9F               	bcf	3999,5,c	;volatile
  3210                           
  3211                           ; BSR set to: 15
  3212                           ;main.c: 99: INT1IP = 1;
  3213  0009C4  8CF0               	bsf	intcon3,6,c	;volatile
  3214                           
  3215                           ; BSR set to: 15
  3216                           ;main.c: 100: INT2IP = 0;
  3217  0009C6  9EF0               	bcf	intcon3,7,c	;volatile
  3218                           
  3219                           ; BSR set to: 15
  3220                           ;main.c: 102: C2IP = 0;
  3221  0009C8  9AA2               	bcf	4002,5,c	;volatile
  3222                           
  3223                           ; BSR set to: 15
  3224                           ;main.c: 103: C2IP = 0;
  3225  0009CA  9AA2               	bcf	4002,5,c	;volatile
  3226                           
  3227                           ; BSR set to: 15
  3228                           ;main.c: 105: INTEDG0=0;
  3229  0009CC  9CF1               	bcf	intcon2,6,c	;volatile
  3230                           
  3231                           ; BSR set to: 15
  3232                           ;main.c: 106: INTEDG1=1;
  3233  0009CE  8AF1               	bsf	intcon2,5,c	;volatile
  3234                           
  3235                           ; BSR set to: 15
  3236                           ;main.c: 107: INTEDG2=0;
  3237  0009D0  98F1               	bcf	intcon2,4,c	;volatile
  3238                           
  3239                           ; BSR set to: 15
  3240                           ;main.c: 109: TMR0IF = 0;
  3241  0009D2  94F2               	bcf	intcon,2,c	;volatile
  3242                           
  3243                           ; BSR set to: 15
  3244                           ;main.c: 110: TMR0IE = 1;
  3245  0009D4  8AF2               	bsf	intcon,5,c	;volatile
  3246                           
  3247                           ; BSR set to: 15
  3248                           ;main.c: 111: TMR1IE = 1;
  3249  0009D6  809D               	bsf	3997,0,c	;volatile
  3250                           
  3251                           ; BSR set to: 15
  3252                           ;main.c: 112: RC1IE = 1;
  3253  0009D8  8A9D               	bsf	3997,5,c	;volatile
  3254                           
  3255                           ; BSR set to: 15
  3256                           ;main.c: 115: CCP1IE=1;
  3257  0009DA  849D               	bsf	3997,2,c	;volatile
  3258                           
  3259                           ; BSR set to: 15
  3260                           ;main.c: 116: CCP2IE=1;
  3261  0009DC  80A0               	bsf	4000,0,c	;volatile
  3262                           
  3263                           ; BSR set to: 15
  3264                           ;main.c: 117: CCP3IE=1;
  3265  0009DE  807A               	bsf	3962,0,c	;volatile
  3266                           
  3267                           ; BSR set to: 15
  3268                           ;main.c: 118: C2IE = 1;
  3269  0009E0  8AA0               	bsf	4000,5,c	;volatile
  3270                           
  3271                           ; BSR set to: 15
  3272                           ;main.c: 119: C2IE = 1;
  3273  0009E2  8AA0               	bsf	4000,5,c	;volatile
  3274                           
  3275                           ; BSR set to: 15
  3276                           ;main.c: 120: OpenADC(0b11101111&0b11111111&0b11111111, 0b10001011&0b11111111, 0b1111110
      +                          0);
  3277  0009E4  0E8B               	movlw	139
  3278  0009E6  0100               	movlb	0	; () banked
  3279  0009E8  6FDA               	movwf	OpenADC@config2& (0+255),b
  3280  0009EA  0EFC               	movlw	252
  3281  0009EC  6FDB               	movwf	OpenADC@config3& (0+255),b
  3282  0009EE  0EEF               	movlw	239
  3283  0009F0  EC08  F00D         	call	_OpenADC
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;main.c: 123: for(p=(char*)&ECU;p<((char*)&ECU+38);p=p+1) {*p=0;}
  3287  0009F4  0E65               	movlw	low _ECU	;volatile
  3288  0009F6  6F62               	movwf	_p& (0+255),b
  3289  0009F8                     l4840:
  3290                           
  3291                           ; BSR set to: 0
  3292  0009F8  0E8A               	movlw	_ECU+37	;volatile
  3293  0009FA  6562               	cpfsgt	_p& (0+255),b
  3294  0009FC  D001               	goto	l4844
  3295  0009FE  D006               	goto	l332
  3296  000A00                     l4844:
  3297                           
  3298                           ; BSR set to: 0
  3299  000A00  5162               	movf	_p& (0+255),w,b
  3300  000A02  6ED9               	movwf	fsr2l,c
  3301  000A04  6ADA               	clrf	fsr2h,c
  3302  000A06  6ADF               	clrf	indf2,c
  3303                           
  3304                           ; BSR set to: 0
  3305  000A08  2B62               	incf	_p& (0+255),f,b
  3306  000A0A  D7F6               	goto	l4840
  3307  000A0C                     l332:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;main.c: 129: if (TO==0){ECU.WDT=1;}
  3311  000A0C  A6D0               	btfss	4048,3,c	;volatile
  3312                           
  3313                           ; BSR set to: 0
  3314  000A0E  816A               	bsf	(_ECU+5)& (0+255),0,b	;volatile
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;main.c: 130: if (BOR==0){ECU.BOR=1;BOR=1;}
  3318  000A10  B0D0               	btfsc	4048,0,c	;volatile
  3319  000A12  D002               	goto	l4854
  3320                           
  3321                           ; BSR set to: 0
  3322  000A14  836A               	bsf	(_ECU+5)& (0+255),1,b	;volatile
  3323  000A16  80D0               	bsf	4048,0,c	;volatile
  3324  000A18                     l4854:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;main.c: 131: ECU.BYTEAF=0xAF; ECU.Byte_Counter=0x00; ECU.Paket_version=0x10; ECU.Paket_
      +                          size=38;
  3328  000A18  0EAF               	movlw	175
  3329  000A1A  6F65               	movwf	_ECU& (0+255),b	;volatile
  3330                           
  3331                           ; BSR set to: 0
  3332  000A1C  6B66               	clrf	(_ECU+1)& (0+255),b	;volatile
  3333  000A1E  0E10               	movlw	16
  3334  000A20  6F67               	movwf	(_ECU+2)& (0+255),b	;volatile
  3335  000A22  0E26               	movlw	38
  3336  000A24  6F68               	movwf	(_ECU+3)& (0+255),b	;volatile
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;main.c: 132: p=(char*)&ECU;
  3340  000A26  0E65               	movlw	low _ECU	;volatile
  3341  000A28  6F62               	movwf	_p& (0+255),b
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;main.c: 135: ECU.SeqINJ=0;
  3345  000A2A  957F               	bcf	(_ECU+26)& (0+255),2,b	;volatile
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;main.c: 136: ECU.INJ_LAG=LAG[3];
  3349  000A2C  0EE7               	movlw	low (_LAG+6)
  3350  000A2E  6EF6               	movwf	tblptrl,c
  3351  000A30  0EFF               	movlw	high (_LAG+6)
  3352  000A32  6EF7               	movwf	tblptrh,c
  3353  000A34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3354  000A34  6AF8               	clrf	tblptru,c
  3355  000A36                     	endif
  3356  000A36                     	if	0	;tblptru may be non-zero
  3357  000A36                     	endif
  3358  000A36  0009               	tblrd		*+
  3359  000A38  CFF5 F075          	movff	tablat,_ECU+16	;volatile
  3360  000A3C  000A               	tblrd		*-
  3361  000A3E  CFF5 F076          	movff	tablat,_ECU+17	;volatile
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;main.c: 137: ConvertADC();
  3365  000A42  ECBA  F00E         	call	_ConvertADC	;wreg free
  3366                           
  3367                           ;main.c: 138: Cylinder=0;
  3368  000A46  6A3D               	clrf	_Cylinder,c
  3369                           
  3370                           ;main.c: 139: ECU.MAPtype=1;
  3371  000A48  0100               	movlb	0	; () banked
  3372  000A4A  8185               	bsf	(_ECU+32)& (0+255),0,b	;volatile
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;main.c: 140: ECU.COLT=165;
  3376  000A4C  0EA5               	movlw	165
  3377  000A4E  6F6D               	movwf	(_ECU+8)& (0+255),b	;volatile
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;main.c: 141: PUMPCounter=0;
  3381  000A50  6A39               	clrf	_PUMPCounter,c	;volatile
  3382  000A52  6A3A               	clrf	_PUMPCounter+1,c	;volatile
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;main.c: 142: TMR0ON=1;
  3386  000A54  8ED5               	bsf	4053,7,c	;volatile
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;main.c: 143: LoadCounter=0;
  3390  000A56  6A37               	clrf	_LoadCounter,c	;volatile
  3391  000A58  6A38               	clrf	_LoadCounter+1,c	;volatile
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;main.c: 144: STP_Init();
  3395  000A5A  EC32  F00E         	call	_STP_Init	;wreg free
  3396                           
  3397                           ;main.c: 147: ECU.TIME_INJ=1000;INT0IF=1;
  3398  000A5E  0E03               	movlw	3
  3399  000A60  0100               	movlb	0	; () banked
  3400  000A62  6F74               	movwf	(_ECU+15)& (0+255),b	;volatile
  3401  000A64  0EE8               	movlw	232
  3402  000A66  6F73               	movwf	(_ECU+14)& (0+255),b	;volatile
  3403                           
  3404                           ; BSR set to: 0
  3405  000A68  82F2               	bsf	intcon,1,c	;volatile
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;main.c: 148: ECU.RqF=5000;
  3409  000A6A  0E13               	movlw	19
  3410  000A6C  6F78               	movwf	(_ECU+19)& (0+255),b	;volatile
  3411  000A6E  0E88               	movlw	136
  3412  000A70  6F77               	movwf	(_ECU+18)& (0+255),b	;volatile
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;main.c: 149: GIEL=1;GIEH=1;
  3416  000A72  8CF2               	bsf	intcon,6,c	;volatile
  3417                           
  3418                           ; BSR set to: 0
  3419  000A74  8EF2               	bsf	intcon,7,c	;volatile
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;main.c: 150: INT0IE=1;INT1IE=1;
  3423  000A76  88F2               	bsf	intcon,4,c	;volatile
  3424                           
  3425                           ; BSR set to: 0
  3426  000A78  86F0               	bsf	intcon3,3,c	;volatile
  3427                           
  3428                           ; BSR set to: 0
  3429  000A7A  0C88               	retlw	136
  3430  000A7C                     __end_of_INIT:
  3431                           	opt stack 0
  3432                           tblptru	equ	0xFF8
  3433                           tblptrh	equ	0xFF7
  3434                           tblptrl	equ	0xFF6
  3435                           tablat	equ	0xFF5
  3436                           prodh	equ	0xFF4
  3437                           prodl	equ	0xFF3
  3438                           intcon	equ	0xFF2
  3439                           intcon2	equ	0xFF1
  3440                           intcon3	equ	0xFF0
  3441                           postinc0	equ	0xFEE
  3442                           wreg	equ	0xFE8
  3443                           postdec1	equ	0xFE5
  3444                           fsr1l	equ	0xFE1
  3445                           indf2	equ	0xFDF
  3446                           fsr2h	equ	0xFDA
  3447                           fsr2l	equ	0xFD9
  3448                           status	equ	0xFD8
  3449                           
  3450 ;; *************** function _STP_Init *****************
  3451 ;; Defined at:
  3452 ;;		line 33 in file "D:\DOC\Project\WEGA\WEGA2\IAC.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  a               1   22[BANK0 ] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;		None               void
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : F/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:        1 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:   11
  3473 ;; This function calls:
  3474 ;;		_STP_Close
  3475 ;;		_delay
  3476 ;; This function is called by:
  3477 ;;		_INIT
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text7
  3482  001C64                     __ptext7:
  3483                           	opt stack 0
  3484  001C64                     _STP_Init:
  3485                           	opt stack 17
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;IAC.c: 35: for (char a=210;a>0;a--)
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;incstack = 0
  3492  001C64  0ED2               	movlw	210
  3493  001C66  6FDD               	movwf	STP_Init@a& (0+255),b
  3494  001C68                     l4486:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;IAC.c: 36: {
  3498                           ;IAC.c: 37: ECU.STEPCNT=210;
  3499  001C68  0ED2               	movlw	210
  3500  001C6A  6F6B               	movwf	(_ECU+6)& (0+255),b	;volatile
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;IAC.c: 38: delay(3);
  3504  001C6C  6BDB               	clrf	(delay@ms+1)& (0+255),b
  3505  001C6E  0E03               	movlw	3
  3506  001C70  6FDA               	movwf	delay@ms& (0+255),b
  3507  001C72  EC0C  F00E         	call	_delay	;wreg free
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;IAC.c: 39: STP_Close();
  3511  001C76  ECAD  F00B         	call	_STP_Close	;wreg free
  3512                           
  3513                           ; BSR set to: 0
  3514  001C7A  07DD               	decf	STP_Init@a& (0+255),f,b
  3515                           
  3516                           ; BSR set to: 0
  3517  001C7C  67DD               	tstfsz	STP_Init@a& (0+255),b
  3518  001C7E  D7F4               	goto	l4486
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;IAC.c: 40: }
  3522                           ;IAC.c: 41: ECU.STEPCNT=0;
  3523  001C80  6B6B               	clrf	(_ECU+6)& (0+255),b	;volatile
  3524                           
  3525                           ;IAC.c: 42: Flag_Init_Pos=1;
  3526  001C82  0100               	movlb	(_Flag_Init_Pos/(0+8)) shr (0+8)
  3527  001C84  884B               	bsf	_Flag_Init_Pos/(0+8),_Flag_Init_Pos& (0+7),c	;volatile
  3528  001C86  0012               	return	
  3529  001C88                     __end_of_STP_Init:
  3530                           	opt stack 0
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           prodh	equ	0xFF4
  3536                           prodl	equ	0xFF3
  3537                           intcon	equ	0xFF2
  3538                           intcon2	equ	0xFF1
  3539                           intcon3	equ	0xFF0
  3540                           postinc0	equ	0xFEE
  3541                           wreg	equ	0xFE8
  3542                           postdec1	equ	0xFE5
  3543                           fsr1l	equ	0xFE1
  3544                           indf2	equ	0xFDF
  3545                           fsr2h	equ	0xFDA
  3546                           fsr2l	equ	0xFD9
  3547                           status	equ	0xFD8
  3548                           
  3549 ;; *************** function _delay *****************
  3550 ;; Defined at:
  3551 ;;		line 348 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  ms              2   19[BANK0 ] unsigned int 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;		None               void
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0
  3560 ;; Tracked objects:
  3561 ;;		On entry : F/0
  3562 ;;		On exit  : F/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;Total ram usage:        3 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:   10
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_STP_Init
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text8
  3580  001C18                     __ptext8:
  3581                           	opt stack 0
  3582  001C18                     _delay:
  3583                           	opt stack 17
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;main.c: 350: while(ms--){_delay((unsigned long)((1)*(64000000/4000.0)));}
  3587                           
  3588                           ;incstack = 0
  3589  001C18  D008               	goto	l4358
  3590  001C1A                     l4356:
  3591                           
  3592                           ; BSR set to: 0
  3593  001C1A  0E15               	movlw	21
  3594  001C1C  6FDC               	movwf	??_delay& (0+255),b
  3595  001C1E  0EC6               	movlw	198
  3596  001C20                     u5947:
  3597  001C20  2EE8               	decfsz	wreg,f,c
  3598  001C22  D7FE               	goto	u5947
  3599  001C24  2FDC               	decfsz	??_delay& (0+255),f,b
  3600  001C26  D7FC               	goto	u5947
  3601  001C28  D000               	nop2	
  3602  001C2A                     l4358:
  3603  001C2A  0100               	movlb	0	; () banked
  3604  001C2C  07DA               	decf	delay@ms& (0+255),f,b
  3605  001C2E  A0D8               	btfss	status,0,c
  3606  001C30  07DB               	decf	(delay@ms+1)& (0+255),f,b
  3607  001C32  29DA               	incf	delay@ms& (0+255),w,b
  3608  001C34  B4D8               	btfsc	status,2,c
  3609  001C36  29DB               	incf	(delay@ms+1)& (0+255),w,b
  3610  001C38  B4D8               	btfsc	status,2,c
  3611  001C3A  0012               	return	
  3612  001C3C  D7EE               	goto	l4356
  3613  001C3E                     __end_of_delay:
  3614                           	opt stack 0
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           intcon	equ	0xFF2
  3622                           intcon2	equ	0xFF1
  3623                           intcon3	equ	0xFF0
  3624                           postinc0	equ	0xFEE
  3625                           wreg	equ	0xFE8
  3626                           postdec1	equ	0xFE5
  3627                           fsr1l	equ	0xFE1
  3628                           indf2	equ	0xFDF
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function _STP_Close *****************
  3634 ;; Defined at:
  3635 ;;		line 23 in file "D:\DOC\Project\WEGA\WEGA2\IAC.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;		None               void
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : F/0
  3646 ;;		On exit  : F/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        1 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:   10
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_STP_Init
  3660 ;;		_STP_Set
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text9
  3665  00175A                     __ptext9:
  3666                           	opt stack 0
  3667  00175A                     _STP_Close:
  3668                           	opt stack 18
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;IAC.c: 25: if(ECU.STEPCNT<=6)return;
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;incstack = 0
  3675  00175A  0E07               	movlw	7
  3676  00175C  5D6B               	subwf	(_ECU+6)& (0+255),w,b	;volatile
  3677  00175E  A0D8               	btfss	status,0,c
  3678  001760  0012               	return	
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;IAC.c: 26: ECU.STEPCNT--;
  3682  001762  076B               	decf	(_ECU+6)& (0+255),f,b	;volatile
  3683  001764  0E01               	movlw	1
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;IAC.c: 27: if(LB4==0 & LB3==0){LB3=1;return;}
  3687  001766  B68A               	btfsc	3978,3,c	;volatile
  3688  001768  0E00               	movlw	0
  3689  00176A  6FDA               	movwf	??_STP_Close& (0+255),b
  3690  00176C  0E01               	movlw	1
  3691  00176E  B88A               	btfsc	3978,4,c	;volatile
  3692  001770  0E00               	movlw	0
  3693  001772  15DA               	andwf	??_STP_Close& (0+255),w,b
  3694  001774  A0E8               	btfss	wreg,0,c
  3695  001776  D002               	goto	l4376
  3696                           
  3697                           ; BSR set to: 0
  3698  001778  868A               	bsf	3978,3,c	;volatile
  3699  00177A  0012               	return	
  3700  00177C                     l4376:
  3701  00177C  0E01               	movlw	1
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;IAC.c: 28: if(LB4==0 & LB3==1){LB4=1;return;}
  3705  00177E  A68A               	btfss	3978,3,c	;volatile
  3706  001780  0E00               	movlw	0
  3707  001782  6FDA               	movwf	??_STP_Close& (0+255),b
  3708  001784  0E01               	movlw	1
  3709  001786  B88A               	btfsc	3978,4,c	;volatile
  3710  001788  0E00               	movlw	0
  3711  00178A  15DA               	andwf	??_STP_Close& (0+255),w,b
  3712  00178C  A0E8               	btfss	wreg,0,c
  3713  00178E  D002               	goto	l736
  3714                           
  3715                           ; BSR set to: 0
  3716  001790  888A               	bsf	3978,4,c	;volatile
  3717  001792  0012               	return	
  3718  001794                     l736:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;IAC.c: 29: if(LB4==1 & LB3==1){LB3=0;return;}
  3722  001794  0E01               	movlw	1
  3723  001796  A88A               	btfss	3978,4,c	;volatile
  3724  001798  0E00               	movlw	0
  3725  00179A  A68A               	btfss	3978,3,c	;volatile
  3726  00179C  0E00               	movlw	0
  3727  00179E  A0E8               	btfss	wreg,0,c
  3728  0017A0  D002               	goto	l4382
  3729                           
  3730                           ; BSR set to: 0
  3731  0017A2  968A               	bcf	3978,3,c	;volatile
  3732  0017A4  0012               	return	
  3733  0017A6                     l4382:
  3734  0017A6  0E01               	movlw	1
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;IAC.c: 30: if(LB4==1 & LB3==0){LB4=0;return;}
  3738  0017A8  A88A               	btfss	3978,4,c	;volatile
  3739  0017AA  0E00               	movlw	0
  3740  0017AC  6FDA               	movwf	??_STP_Close& (0+255),b
  3741  0017AE  0E01               	movlw	1
  3742  0017B0  B68A               	btfsc	3978,3,c	;volatile
  3743  0017B2  0E00               	movlw	0
  3744  0017B4  15DA               	andwf	??_STP_Close& (0+255),w,b
  3745  0017B6  B0E8               	btfsc	wreg,0,c
  3746                           
  3747                           ; BSR set to: 0
  3748  0017B8  988A               	bcf	3978,4,c	;volatile
  3749                           
  3750                           ; BSR set to: 0
  3751  0017BA  0012               	return	
  3752  0017BC                     __end_of_STP_Close:
  3753                           	opt stack 0
  3754                           tblptru	equ	0xFF8
  3755                           tblptrh	equ	0xFF7
  3756                           tblptrl	equ	0xFF6
  3757                           tablat	equ	0xFF5
  3758                           prodh	equ	0xFF4
  3759                           prodl	equ	0xFF3
  3760                           intcon	equ	0xFF2
  3761                           intcon2	equ	0xFF1
  3762                           intcon3	equ	0xFF0
  3763                           postinc0	equ	0xFEE
  3764                           wreg	equ	0xFE8
  3765                           postdec1	equ	0xFE5
  3766                           fsr1l	equ	0xFE1
  3767                           indf2	equ	0xFDF
  3768                           fsr2h	equ	0xFDA
  3769                           fsr2l	equ	0xFD9
  3770                           status	equ	0xFD8
  3771                           
  3772 ;; *************** function _OpenTimer6 *****************
  3773 ;; Defined at:
  3774 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t6open.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  config          1    wreg     unsigned char 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  config          1   19[BANK0 ] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;		None               void
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : F/F
  3785 ;;		On exit  : F/F
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;Total ram usage:        1 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:   10
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_INIT
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text10
  3803  001C88                     __ptext10:
  3804                           	opt stack 0
  3805  001C88                     _OpenTimer6:
  3806                           	opt stack 18
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;incstack = 0
  3810                           ;OpenTimer6@config stored from wreg
  3811  001C88  0100               	movlb	0	; () banked
  3812  001C8A  6FDA               	movwf	OpenTimer6@config& (0+255),b
  3813                           
  3814                           ; BSR set to: 0
  3815  001C8C  51DA               	movf	OpenTimer6@config& (0+255),w,b
  3816  001C8E  0BFB               	andlw	251
  3817  001C90  010F               	movlb	15	; () banked
  3818  001C92  6F4A               	movwf	74,b	;volatile
  3819                           
  3820                           ; BSR set to: 15
  3821  001C94  6B4C               	clrf	76,b	;volatile
  3822                           
  3823                           ; BSR set to: 15
  3824  001C96  947E               	bcf	3966,2,c	;volatile
  3825                           
  3826                           ; BSR set to: 15
  3827  001C98  0100               	movlb	0	; () banked
  3828  001C9A  AFDA               	btfss	OpenTimer6@config& (0+255),7,b
  3829  001C9C  D002               	goto	l985
  3830                           
  3831                           ; BSR set to: 0
  3832  001C9E  847D               	bsf	3965,2,c	;volatile
  3833  001CA0  D001               	goto	l986
  3834  001CA2                     l985:
  3835                           
  3836                           ; BSR set to: 0
  3837  001CA2  947D               	bcf	3965,2,c	;volatile
  3838  001CA4                     l986:
  3839                           
  3840                           ; BSR set to: 0
  3841  001CA4  010F               	movlb	15	; () banked
  3842  001CA6  854A               	bsf	74,2,b	;volatile
  3843                           
  3844                           ; BSR set to: 15
  3845  001CA8  0012               	return	
  3846  001CAA                     __end_of_OpenTimer6:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           intcon2	equ	0xFF1
  3856                           intcon3	equ	0xFF0
  3857                           postinc0	equ	0xFEE
  3858                           wreg	equ	0xFE8
  3859                           postdec1	equ	0xFE5
  3860                           fsr1l	equ	0xFE1
  3861                           indf2	equ	0xFDF
  3862                           fsr2h	equ	0xFDA
  3863                           fsr2l	equ	0xFD9
  3864                           status	equ	0xFD8
  3865                           
  3866 ;; *************** function _OpenPWM5 *****************
  3867 ;; Defined at:
  3868 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw5open.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  period          1    wreg     unsigned char 
  3871 ;;  timer_source    1   19[BANK0 ] unsigned char 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  period          1   21[BANK0 ] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;		None               void
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : F/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3883 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;Total ram usage:        3 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:   10
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_INIT
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text11
  3898  001626                     __ptext11:
  3899                           	opt stack 0
  3900  001626                     _OpenPWM5:
  3901                           	opt stack 18
  3902                           
  3903                           ; BSR set to: 15
  3904                           ;incstack = 0
  3905                           ;OpenPWM5@period stored from wreg
  3906  001626  6FDC               	movwf	OpenPWM5@period& (0+255),b
  3907                           
  3908                           ; BSR set to: 0
  3909  001628  0E0C               	movlw	12
  3910  00162A  010F               	movlb	15	; () banked
  3911  00162C  6F54               	movwf	84,b	;volatile
  3912                           
  3913                           ; BSR set to: 15
  3914  00162E  0EF3               	movlw	243
  3915  001630  1748               	andwf	72,f,b	;volatile
  3916                           
  3917                           ; BSR set to: 15
  3918  001632  0100               	movlb	0	; () banked
  3919  001634  41DA               	rrncf	OpenPWM5@timer_source& (0+255),w,b
  3920  001636  42E8               	rrncf	wreg,f,c
  3921  001638  0B3F               	andlw	63
  3922  00163A  0B0C               	andlw	12
  3923  00163C  010F               	movlb	15	; () banked
  3924  00163E  1348               	iorwf	72,f,b	;volatile
  3925                           
  3926                           ; BSR set to: 15
  3927  001640  9892               	bcf	3986,4,c	;volatile
  3928                           
  3929                           ; BSR set to: 15
  3930  001642  CF48 F0DB          	movff	3912,??_OpenPWM5	;volatile
  3931  001646  0E0C               	movlw	12
  3932  001648  0100               	movlb	0	; () banked
  3933  00164A  17DB               	andwf	??_OpenPWM5& (0+255),f,b
  3934  00164C  E105               	bnz	l4456
  3935                           
  3936                           ; BSR set to: 0
  3937  00164E  94BA               	bcf	4026,2,c	;volatile
  3938  001650  C0DC  FFBB         	movff	OpenPWM5@period,4027	;volatile
  3939  001654  84BA               	bsf	4026,2,c	;volatile
  3940  001656  0C0C               	retlw	12
  3941  001658                     l4456:
  3942                           
  3943                           ; BSR set to: 0
  3944  001658  CF48 F0DB          	movff	3912,??_OpenPWM5	;volatile
  3945  00165C  0E0C               	movlw	12
  3946  00165E  17DB               	andwf	??_OpenPWM5& (0+255),f,b
  3947  001660  51DB               	movf	??_OpenPWM5& (0+255),w,b
  3948  001662  0A04               	xorlw	4
  3949  001664  E106               	bnz	l4460
  3950                           
  3951                           ; BSR set to: 0
  3952  001666  010F               	movlb	15	; () banked
  3953  001668  9551               	bcf	81,2,b	;volatile
  3954  00166A  C0DC  FF52         	movff	OpenPWM5@period,3922	;volatile
  3955  00166E  8551               	bsf	81,2,b	;volatile
  3956  001670  0012               	return	
  3957  001672                     l4460:
  3958                           
  3959                           ; BSR set to: 0
  3960  001672  CF48 F0DB          	movff	3912,??_OpenPWM5	;volatile
  3961  001676  0E0C               	movlw	12
  3962  001678  17DB               	andwf	??_OpenPWM5& (0+255),f,b
  3963  00167A  51DB               	movf	??_OpenPWM5& (0+255),w,b
  3964  00167C  0A08               	xorlw	8
  3965  00167E  A4D8               	btfss	status,2,c
  3966  001680  0012               	return	
  3967                           
  3968                           ; BSR set to: 0
  3969  001682  010F               	movlb	15	; () banked
  3970  001684  954A               	bcf	74,2,b	;volatile
  3971  001686  C0DC  FF4B         	movff	OpenPWM5@period,3915	;volatile
  3972  00168A  854A               	bsf	74,2,b	;volatile
  3973  00168C  0012               	return	
  3974  00168E                     __end_of_OpenPWM5:
  3975                           	opt stack 0
  3976                           tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           prodh	equ	0xFF4
  3981                           prodl	equ	0xFF3
  3982                           intcon	equ	0xFF2
  3983                           intcon2	equ	0xFF1
  3984                           intcon3	equ	0xFF0
  3985                           postinc0	equ	0xFEE
  3986                           wreg	equ	0xFE8
  3987                           postdec1	equ	0xFE5
  3988                           fsr1l	equ	0xFE1
  3989                           indf2	equ	0xFDF
  3990                           fsr2h	equ	0xFDA
  3991                           fsr2l	equ	0xFD9
  3992                           status	equ	0xFD8
  3993                           
  3994 ;; *************** function _OpenADC *****************
  3995 ;; Defined at:
  3996 ;;		line 305 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcopen.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  config          1    wreg     unsigned char 
  3999 ;;  config2         1   19[BANK0 ] unsigned char 
  4000 ;;  config3         1   20[BANK0 ] unsigned char 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  config          1   23[BANK0 ] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;		None               void
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : F/0
  4009 ;;		On exit  : F/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;Total ram usage:        5 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; Hardware stack levels required when called:   10
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_INIT
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text12
  4027  001A10                     __ptext12:
  4028                           	opt stack 0
  4029  001A10                     _OpenADC:
  4030                           	opt stack 18
  4031                           
  4032                           ;incstack = 0
  4033                           ;OpenADC@config stored from wreg
  4034  001A10  6FDE               	movwf	OpenADC@config& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037  001A12  6AC2               	clrf	4034,c	;volatile
  4038  001A14  6AC1               	clrf	4033,c	;volatile
  4039  001A16  6AC0               	clrf	4032,c	;volatile
  4040                           
  4041                           ; BSR set to: 0
  4042  001A18  51DA               	movf	OpenADC@config2& (0+255),w,b
  4043  001A1A  0B7C               	andlw	124
  4044  001A1C  6EC2               	movwf	4034,c	;volatile
  4045                           
  4046                           ; BSR set to: 0
  4047  001A1E  C0DB  FFC1         	movff	OpenADC@config3,4033	;volatile
  4048  001A22  C0DE  F0DC         	movff	OpenADC@config,??_OpenADC
  4049  001A26  90D8               	bcf	status,0,c
  4050  001A28  37DC               	rlcf	??_OpenADC& (0+255),f,b
  4051  001A2A  90D8               	bcf	status,0,c
  4052  001A2C  37DC               	rlcf	??_OpenADC& (0+255),f,b
  4053  001A2E  0E38               	movlw	56
  4054  001A30  17DC               	andwf	??_OpenADC& (0+255),f,b
  4055  001A32  C0DE  F0DD         	movff	OpenADC@config,??_OpenADC+1
  4056  001A36  3BDD               	swapf	(??_OpenADC+1)& (0+255),f,b
  4057  001A38  0E0F               	movlw	15
  4058  001A3A  17DD               	andwf	(??_OpenADC+1)& (0+255),f,b
  4059  001A3C  0E07               	movlw	7
  4060  001A3E  17DD               	andwf	(??_OpenADC+1)& (0+255),f,b
  4061  001A40  51DE               	movf	OpenADC@config& (0+255),w,b
  4062  001A42  0B80               	andlw	128
  4063  001A44  11DD               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4064  001A46  11DC               	iorwf	??_OpenADC& (0+255),w,b
  4065  001A48  6EC0               	movwf	4032,c	;volatile
  4066                           
  4067                           ; BSR set to: 0
  4068  001A4A  AFDA               	btfss	OpenADC@config2& (0+255),7,b
  4069  001A4C  D003               	goto	l848
  4070                           
  4071                           ; BSR set to: 0
  4072  001A4E  9C9E               	bcf	3998,6,c	;volatile
  4073  001A50  8C9D               	bsf	3997,6,c	;volatile
  4074  001A52  8CF2               	bsf	intcon,6,c	;volatile
  4075  001A54                     l848:
  4076                           
  4077                           ; BSR set to: 0
  4078  001A54  80C2               	bsf	4034,0,c	;volatile
  4079                           
  4080                           ; BSR set to: 0
  4081  001A56  0012               	return	
  4082  001A58                     __end_of_OpenADC:
  4083                           	opt stack 0
  4084                           tblptru	equ	0xFF8
  4085                           tblptrh	equ	0xFF7
  4086                           tblptrl	equ	0xFF6
  4087                           tablat	equ	0xFF5
  4088                           prodh	equ	0xFF4
  4089                           prodl	equ	0xFF3
  4090                           intcon	equ	0xFF2
  4091                           intcon2	equ	0xFF1
  4092                           intcon3	equ	0xFF0
  4093                           postinc0	equ	0xFEE
  4094                           wreg	equ	0xFE8
  4095                           postdec1	equ	0xFE5
  4096                           fsr1l	equ	0xFE1
  4097                           indf2	equ	0xFDF
  4098                           fsr2h	equ	0xFDA
  4099                           fsr2l	equ	0xFD9
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function _ConvertADC *****************
  4103 ;; Defined at:
  4104 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcconv.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;		None               void
  4111 ;; Registers used:
  4112 ;;		None
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:   10
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_INIT
  4129 ;;		_setADC
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text13
  4134  001D74                     __ptext13:
  4135                           	opt stack 0
  4136  001D74                     _ConvertADC:
  4137                           	opt stack 18
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;incstack = 0
  4141  001D74  82C2               	bsf	4034,1,c	;volatile
  4142  001D76  0012               	return	
  4143  001D78                     __end_of_ConvertADC:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           prodh	equ	0xFF4
  4150                           prodl	equ	0xFF3
  4151                           intcon	equ	0xFF2
  4152                           intcon2	equ	0xFF1
  4153                           intcon3	equ	0xFF0
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           postdec1	equ	0xFE5
  4157                           fsr1l	equ	0xFE1
  4158                           indf2	equ	0xFDF
  4159                           fsr2h	equ	0xFDA
  4160                           fsr2l	equ	0xFD9
  4161                           status	equ	0xFD8
  4162                           
  4163 ;; *************** function _IAC_Stab *****************
  4164 ;; Defined at:
  4165 ;;		line 49 in file "D:\DOC\Project\WEGA\WEGA2\IAC.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;		None
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  Motor_Spd_Co    1    0        const unsigned char 
  4170 ;;  Motor_Spd_Ho    1    0        const unsigned char 
  4171 ;;  TRSHH           1    0        const unsigned char 
  4172 ;;  Step_Init_Po    1   21[BANK0 ] unsigned char 
  4173 ;;  CLTR            1   20[BANK0 ] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;		None               void
  4176 ;; Registers used:
  4177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;Total ram usage:        5 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:   11
  4190 ;; This function calls:
  4191 ;;		_STP_Open
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text14
  4198  00181C                     __ptext14:
  4199                           	opt stack 0
  4200  00181C                     _IAC_Stab:
  4201                           	opt stack 18
  4202                           
  4203                           ;IAC.c: 51: if (Flag_Init_Pos)
  4204                           
  4205                           ;incstack = 0
  4206  00181C  A84B               	btfss	_Flag_Init_Pos/(0+8),_Flag_Init_Pos& (0+7),c	;volatile
  4207  00181E  D01C               	goto	l751
  4208                           
  4209                           ;IAC.c: 52: {
  4210                           ;IAC.c: 55: unsigned char CLTR=(ECU.COLT * (int)ECU.COLT)>>8;
  4211  001820  0100               	movlb	0	; () banked
  4212  001822  516D               	movf	(_ECU+8)& (0+255),w,b	;volatile
  4213  001824  036D               	mulwf	(_ECU+8)& (0+255),b	;volatile
  4214  001826  CFF4 FFF3          	movff	prodh,prodl
  4215  00182A  6AF4               	clrf	prodh,c
  4216  00182C  BEF3               	btfsc	prodl,7,c
  4217  00182E  68F4               	setf	prodh,c
  4218  001830  50F3               	movf	prodl,w,c
  4219  001832  6FDB               	movwf	IAC_Stab@CLTR& (0+255),b
  4220                           
  4221                           ;IAC.c: 56: unsigned char Step_Init_Pos =(((CLTR*(int)(110-25))>>8) + 25;
  4222  001834  51DB               	movf	IAC_Stab@CLTR& (0+255),w,b
  4223  001836  0D55               	mullw	85
  4224  001838  CFF4 FFF3          	movff	prodh,prodl
  4225  00183C  6AF4               	clrf	prodh,c
  4226  00183E  BEF3               	btfsc	prodl,7,c
  4227  001840  68F4               	setf	prodh,c
  4228  001842  50F3               	movf	prodl,w,c
  4229  001844  0F19               	addlw	25
  4230  001846  6FDC               	movwf	IAC_Stab@Step_Init_Pos& (0+255),b
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;IAC.c: 57: if (Step_Init_Pos > ECU.STEPCNT) {STP_Open();}
  4234  001848  51DC               	movf	IAC_Stab@Step_Init_Pos& (0+255),w,b
  4235  00184A  5D6B               	subwf	(_ECU+6)& (0+255),w,b	;volatile
  4236  00184C  E202               	bc	l752
  4237                           
  4238                           ; BSR set to: 0
  4239  00184E  EF47  F00B         	goto	_STP_Open	;wreg free
  4240  001852                     l752:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;IAC.c: 58: else {Flag_Init_Pos=0;}
  4244  001852  0100               	movlb	(_Flag_Init_Pos/(0+8)) shr (0+8)
  4245  001854  984B               	bcf	_Flag_Init_Pos/(0+8),_Flag_Init_Pos& (0+7),c	;volatile
  4246  001856  0012               	return	
  4247  001858                     l751:
  4248                           
  4249                           ;IAC.c: 60: }
  4250                           ;IAC.c: 62: if (ECU.Mtr_On==0){return;}
  4251  001858  0100               	movlb	0	; () banked
  4252  00185A  A169               	btfss	(_ECU+4)& (0+255),0,b	;volatile
  4253  00185C  0012               	return	
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;IAC.c: 63: if (ECU.IAC)
  4257  00185E  A569               	btfss	(_ECU+4)& (0+255),2,b	;volatile
  4258  001860  D005               	goto	l5104
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;IAC.c: 66: if (ECU.COLT<(255-TRSHH))
  4262                           
  4263                           ; BSR set to: 0
  4264  001862  0E3B               	movlw	59
  4265  001864  5D6D               	subwf	(_ECU+8)& (0+255),w,b	;volatile
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;IAC.c: 70: if (ECU.RPM<Motor_Spd_Hot-1){}
  4269                           
  4270                           ; BSR set to: 0
  4271  001866  5172               	movf	(_ECU+13)& (0+255),w,b	;volatile
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;IAC.c: 71: if (ECU.RPM>Motor_Spd_Hot+2){}
  4275  001868  5172               	movf	(_ECU+13)& (0+255),w,b	;volatile
  4276  00186A  0012               	return	
  4277  00186C                     l5104:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;IAC.c: 83: else {
  4281                           ;IAC.c: 85: if (26 < ECU.STEPCNT){STP_Open();}
  4282  00186C  EE20  F06B         	lfsr	2,_ECU+6	;volatile
  4283  001870  0E1A               	movlw	26
  4284  001872  64DF               	cpfsgt	indf2,c
  4285  001874  0C1A               	retlw	26
  4286  001876  EF47  F00B         	goto	_STP_Open
  4287  00187A                     __end_of_IAC_Stab:
  4288                           	opt stack 0
  4289                           tblptru	equ	0xFF8
  4290                           tblptrh	equ	0xFF7
  4291                           tblptrl	equ	0xFF6
  4292                           tablat	equ	0xFF5
  4293                           prodh	equ	0xFF4
  4294                           prodl	equ	0xFF3
  4295                           intcon	equ	0xFF2
  4296                           intcon2	equ	0xFF1
  4297                           intcon3	equ	0xFF0
  4298                           postinc0	equ	0xFEE
  4299                           wreg	equ	0xFE8
  4300                           postdec1	equ	0xFE5
  4301                           fsr1l	equ	0xFE1
  4302                           indf2	equ	0xFDF
  4303                           fsr2h	equ	0xFDA
  4304                           fsr2l	equ	0xFD9
  4305                           status	equ	0xFD8
  4306                           
  4307 ;; *************** function _STP_Open *****************
  4308 ;; Defined at:
  4309 ;;		line 13 in file "D:\DOC\Project\WEGA\WEGA2\IAC.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;		None               void
  4316 ;; Registers used:
  4317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : F/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;Total ram usage:        1 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:   10
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_STP_Set
  4334 ;;		_IAC_Stab
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text15
  4339  00168E                     __ptext15:
  4340                           	opt stack 0
  4341  00168E                     _STP_Open:
  4342                           	opt stack 18
  4343                           
  4344                           ;IAC.c: 15: if(ECU.STEPCNT>=210)return;
  4345                           
  4346                           ;incstack = 0
  4347  00168E  0100               	movlb	0	; () banked
  4348  001690  EE20  F06B         	lfsr	2,_ECU+6	;volatile
  4349  001694  0ED1               	movlw	209
  4350  001696  64DF               	cpfsgt	indf2,c
  4351  001698  D001               	goto	l4620
  4352  00169A  0CD1               	retlw	209
  4353  00169C                     l4620:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;IAC.c: 16: ECU.STEPCNT++;
  4357  00169C  2B6B               	incf	(_ECU+6)& (0+255),f,b	;volatile
  4358  00169E  0E01               	movlw	1
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;IAC.c: 17: if(LB4==0 & LB3==0){LB4=1;return;}
  4362  0016A0  B68A               	btfsc	3978,3,c	;volatile
  4363  0016A2  0E00               	movlw	0
  4364  0016A4  6FDA               	movwf	??_STP_Open& (0+255),b
  4365  0016A6  0E01               	movlw	1
  4366  0016A8  B88A               	btfsc	3978,4,c	;volatile
  4367  0016AA  0E00               	movlw	0
  4368  0016AC  15DA               	andwf	??_STP_Open& (0+255),w,b
  4369  0016AE  A0E8               	btfss	wreg,0,c
  4370  0016B0  D002               	goto	l4626
  4371                           
  4372                           ; BSR set to: 0
  4373  0016B2  888A               	bsf	3978,4,c	;volatile
  4374  0016B4  0012               	return	
  4375  0016B6                     l4626:
  4376  0016B6  0E01               	movlw	1
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;IAC.c: 18: if(LB4==1 & LB3==0){LB3=1;return;}
  4380  0016B8  A88A               	btfss	3978,4,c	;volatile
  4381  0016BA  0E00               	movlw	0
  4382  0016BC  6FDA               	movwf	??_STP_Open& (0+255),b
  4383  0016BE  0E01               	movlw	1
  4384  0016C0  B68A               	btfsc	3978,3,c	;volatile
  4385  0016C2  0E00               	movlw	0
  4386  0016C4  15DA               	andwf	??_STP_Open& (0+255),w,b
  4387  0016C6  A0E8               	btfss	wreg,0,c
  4388  0016C8  D002               	goto	l728
  4389                           
  4390                           ; BSR set to: 0
  4391  0016CA  868A               	bsf	3978,3,c	;volatile
  4392  0016CC  0012               	return	
  4393  0016CE                     l728:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;IAC.c: 19: if(LB4==1 & LB3==1){LB4=0;return;}
  4397  0016CE  0E01               	movlw	1
  4398  0016D0  A88A               	btfss	3978,4,c	;volatile
  4399  0016D2  0E00               	movlw	0
  4400  0016D4  A68A               	btfss	3978,3,c	;volatile
  4401  0016D6  0E00               	movlw	0
  4402  0016D8  A0E8               	btfss	wreg,0,c
  4403  0016DA  D002               	goto	l4632
  4404                           
  4405                           ; BSR set to: 0
  4406  0016DC  988A               	bcf	3978,4,c	;volatile
  4407  0016DE  0012               	return	
  4408  0016E0                     l4632:
  4409  0016E0  0E01               	movlw	1
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;IAC.c: 20: if(LB4==0 & LB3==1){LB3=0;return;}
  4413  0016E2  A68A               	btfss	3978,3,c	;volatile
  4414  0016E4  0E00               	movlw	0
  4415  0016E6  6FDA               	movwf	??_STP_Open& (0+255),b
  4416  0016E8  0E01               	movlw	1
  4417  0016EA  B88A               	btfsc	3978,4,c	;volatile
  4418  0016EC  0E00               	movlw	0
  4419  0016EE  15DA               	andwf	??_STP_Open& (0+255),w,b
  4420  0016F0  B0E8               	btfsc	wreg,0,c
  4421                           
  4422                           ; BSR set to: 0
  4423  0016F2  968A               	bcf	3978,3,c	;volatile
  4424                           
  4425                           ; BSR set to: 0
  4426  0016F4  0012               	return	
  4427  0016F6                     __end_of_STP_Open:
  4428                           	opt stack 0
  4429                           tblptru	equ	0xFF8
  4430                           tblptrh	equ	0xFF7
  4431                           tblptrl	equ	0xFF6
  4432                           tablat	equ	0xFF5
  4433                           prodh	equ	0xFF4
  4434                           prodl	equ	0xFF3
  4435                           intcon	equ	0xFF2
  4436                           intcon2	equ	0xFF1
  4437                           intcon3	equ	0xFF0
  4438                           postinc0	equ	0xFEE
  4439                           wreg	equ	0xFE8
  4440                           postdec1	equ	0xFE5
  4441                           fsr1l	equ	0xFE1
  4442                           indf2	equ	0xFDF
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           
  4447 ;; *************** function _Get_Lag *****************
  4448 ;; Defined at:
  4449 ;;		line 330 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;		None               void
  4456 ;; Registers used:
  4457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : E/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;Total ram usage:        2 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:   13
  4470 ;; This function calls:
  4471 ;;		_ReadTable
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text16
  4478  000CFA                     __ptext16:
  4479                           	opt stack 0
  4480  000CFA                     _Get_Lag:
  4481                           	opt stack 16
  4482                           
  4483                           ;main.c: 332: if (ECU.LPG)
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;incstack = 0
  4487  000CFA  0100               	movlb	0	; () banked
  4488  000CFC  A17F               	btfss	(_ECU+26)& (0+255),0,b	;volatile
  4489  000CFE  D03D               	goto	l4992
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;main.c: 333: {
  4493                           ;main.c: 334: if (ECU.POWER>0x96) {ECU.INJ_LAG=LAG_LPG[4];return;}
  4494  000D00  EE20  F071         	lfsr	2,_ECU+12	;volatile
  4495  000D04  0E96               	movlw	150
  4496  000D06  64DF               	cpfsgt	indf2,c
  4497  000D08  D00C               	goto	l4984
  4498                           
  4499                           ; BSR set to: 0
  4500  000D0A  0EF3               	movlw	low (_LAG_LPG+8)
  4501  000D0C  6EF6               	movwf	tblptrl,c
  4502  000D0E  0EFF               	movlw	high (_LAG_LPG+8)
  4503  000D10  6EF7               	movwf	tblptrh,c
  4504  000D12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4505  000D12  6AF8               	clrf	tblptru,c
  4506  000D14                     	endif
  4507  000D14                     	if	0	;tblptru may be non-zero
  4508  000D14                     	endif
  4509  000D14  0009               	tblrd		*+
  4510  000D16  CFF5 F075          	movff	tablat,_ECU+16	;volatile
  4511  000D1A  000A               	tblrd		*-
  4512  000D1C  CFF5 F076          	movff	tablat,_ECU+17	;volatile
  4513  000D20  0012               	return	
  4514  000D22                     l4984:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;main.c: 335: if (ECU.POWER<0x57) {ECU.INJ_LAG=LAG_LPG[0];return;}
  4518  000D22  0E57               	movlw	87
  4519  000D24  5D71               	subwf	(_ECU+12)& (0+255),w,b	;volatile
  4520  000D26  E20D               	bc	l4990
  4521                           
  4522                           ; BSR set to: 0
  4523  000D28  0EEB               	movlw	low _LAG_LPG
  4524  000D2A  6EF6               	movwf	tblptrl,c
  4525  000D2C                     	if	1	;There is more than 1 active tblptr byte
  4526  000D2C  0EFF               	movlw	high _LAG_LPG
  4527  000D2E  6EF7               	movwf	tblptrh,c
  4528  000D30                     	endif
  4529  000D30                     	if	1	;There are 3 active tblptr bytes
  4530  000D30  0E00               	movlw	low (_LAG_LPG shr (0+16))
  4531  000D32  6EF8               	movwf	tblptru,c
  4532  000D34                     	endif
  4533  000D34  0009               	tblrd		*+
  4534  000D36  CFF5 F075          	movff	tablat,_ECU+16	;volatile
  4535  000D3A  000A               	tblrd		*-
  4536  000D3C  CFF5 F076          	movff	tablat,_ECU+17	;volatile
  4537  000D40  0012               	return	
  4538  000D42                     l4990:
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;main.c: 337: ECU.INJ_LAG=ReadTable((ECU.POWER - 0x57)<<2,LAG_LPG);
  4542  000D42  5171               	movf	(_ECU+12)& (0+255),w,b	;volatile
  4543  000D44  0101               	movlb	1	; () banked
  4544  000D46  6F14               	movwf	??_Get_Lag& (0+255),b
  4545  000D48  6B15               	clrf	(??_Get_Lag+1)& (0+255),b
  4546  000D4A  90D8               	bcf	status,0,c
  4547  000D4C  3714               	rlcf	??_Get_Lag& (0+255),f,b
  4548  000D4E  3715               	rlcf	(??_Get_Lag+1)& (0+255),f,b
  4549  000D50  90D8               	bcf	status,0,c
  4550  000D52  3714               	rlcf	??_Get_Lag& (0+255),f,b
  4551  000D54  3715               	rlcf	(??_Get_Lag+1)& (0+255),f,b
  4552  000D56  0EA4               	movlw	164
  4553  000D58  2514               	addwf	??_Get_Lag& (0+255),w,b
  4554  000D5A  6F04               	movwf	ReadTable@a& (0+255),b
  4555  000D5C  0EFE               	movlw	254
  4556  000D5E  2115               	addwfc	(??_Get_Lag+1)& (0+255),w,b
  4557  000D60  6F05               	movwf	(ReadTable@a+1)& (0+255),b
  4558  000D62  0EFF               	movlw	high _LAG_LPG
  4559  000D64  6F07               	movwf	(ReadTable@Massive+1)& (0+255),b
  4560  000D66  0EEB               	movlw	low _LAG_LPG
  4561  000D68  6F06               	movwf	ReadTable@Massive& (0+255),b
  4562  000D6A  ECC3  F003         	call	_ReadTable	;wreg free
  4563  000D6E  0101               	movlb	1	; () banked
  4564  000D70  C104  F075         	movff	?_ReadTable,_ECU+16	;volatile
  4565  000D74  C105  F076         	movff	?_ReadTable+1,_ECU+17	;volatile
  4566                           
  4567                           ;main.c: 338: }
  4568  000D78  0012               	return	
  4569  000D7A                     l4992:
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;main.c: 339: else {
  4573                           ;main.c: 340: if (ECU.POWER>0x96) {ECU.INJ_LAG=LAG[4];return;}
  4574  000D7A  EE20  F071         	lfsr	2,_ECU+12	;volatile
  4575  000D7E  0E96               	movlw	150
  4576  000D80  64DF               	cpfsgt	indf2,c
  4577  000D82  D00C               	goto	l4998
  4578                           
  4579                           ; BSR set to: 0
  4580  000D84  0EE9               	movlw	low (_LAG+8)
  4581  000D86  6EF6               	movwf	tblptrl,c
  4582  000D88  0EFF               	movlw	high (_LAG+8)
  4583  000D8A  6EF7               	movwf	tblptrh,c
  4584  000D8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4585  000D8C  6AF8               	clrf	tblptru,c
  4586  000D8E                     	endif
  4587  000D8E                     	if	0	;tblptru may be non-zero
  4588  000D8E                     	endif
  4589  000D8E  0009               	tblrd		*+
  4590  000D90  CFF5 F075          	movff	tablat,_ECU+16	;volatile
  4591  000D94  000A               	tblrd		*-
  4592  000D96  CFF5 F076          	movff	tablat,_ECU+17	;volatile
  4593  000D9A  0012               	return	
  4594  000D9C                     l4998:
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;main.c: 341: if (ECU.POWER<0x57) {ECU.INJ_LAG=LAG[0];return;}
  4598  000D9C  0E57               	movlw	87
  4599  000D9E  5D71               	subwf	(_ECU+12)& (0+255),w,b	;volatile
  4600  000DA0  E20D               	bc	l5004
  4601                           
  4602                           ; BSR set to: 0
  4603  000DA2  0EE1               	movlw	low _LAG
  4604  000DA4  6EF6               	movwf	tblptrl,c
  4605  000DA6                     	if	1	;There is more than 1 active tblptr byte
  4606  000DA6  0EFF               	movlw	high _LAG
  4607  000DA8  6EF7               	movwf	tblptrh,c
  4608  000DAA                     	endif
  4609  000DAA                     	if	1	;There are 3 active tblptr bytes
  4610  000DAA  0E00               	movlw	low (_LAG shr (0+16))
  4611  000DAC  6EF8               	movwf	tblptru,c
  4612  000DAE                     	endif
  4613  000DAE  0009               	tblrd		*+
  4614  000DB0  CFF5 F075          	movff	tablat,_ECU+16	;volatile
  4615  000DB4  000A               	tblrd		*-
  4616  000DB6  CFF5 F076          	movff	tablat,_ECU+17	;volatile
  4617  000DBA  0012               	return	
  4618  000DBC                     l5004:
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;main.c: 343: ECU.INJ_LAG=ReadTable((ECU.POWER - 0x57)<<2,LAG);
  4622  000DBC  5171               	movf	(_ECU+12)& (0+255),w,b	;volatile
  4623  000DBE  0101               	movlb	1	; () banked
  4624  000DC0  6F14               	movwf	??_Get_Lag& (0+255),b
  4625  000DC2  6B15               	clrf	(??_Get_Lag+1)& (0+255),b
  4626  000DC4  90D8               	bcf	status,0,c
  4627  000DC6  3714               	rlcf	??_Get_Lag& (0+255),f,b
  4628  000DC8  3715               	rlcf	(??_Get_Lag+1)& (0+255),f,b
  4629  000DCA  90D8               	bcf	status,0,c
  4630  000DCC  3714               	rlcf	??_Get_Lag& (0+255),f,b
  4631  000DCE  3715               	rlcf	(??_Get_Lag+1)& (0+255),f,b
  4632  000DD0  0EA4               	movlw	164
  4633  000DD2  2514               	addwf	??_Get_Lag& (0+255),w,b
  4634  000DD4  6F04               	movwf	ReadTable@a& (0+255),b
  4635  000DD6  0EFE               	movlw	254
  4636  000DD8  2115               	addwfc	(??_Get_Lag+1)& (0+255),w,b
  4637  000DDA  6F05               	movwf	(ReadTable@a+1)& (0+255),b
  4638  000DDC  0EFF               	movlw	high _LAG
  4639  000DDE  6F07               	movwf	(ReadTable@Massive+1)& (0+255),b
  4640  000DE0  0EE1               	movlw	low _LAG
  4641  000DE2  6F06               	movwf	ReadTable@Massive& (0+255),b
  4642  000DE4  ECC3  F003         	call	_ReadTable	;wreg free
  4643  000DE8  0101               	movlb	1	; () banked
  4644  000DEA  C104  F075         	movff	?_ReadTable,_ECU+16	;volatile
  4645  000DEE  C105  F076         	movff	?_ReadTable+1,_ECU+17	;volatile
  4646  000DF2  0012               	return	
  4647  000DF4                     __end_of_Get_Lag:
  4648                           	opt stack 0
  4649                           tblptru	equ	0xFF8
  4650                           tblptrh	equ	0xFF7
  4651                           tblptrl	equ	0xFF6
  4652                           tablat	equ	0xFF5
  4653                           prodh	equ	0xFF4
  4654                           prodl	equ	0xFF3
  4655                           intcon	equ	0xFF2
  4656                           intcon2	equ	0xFF1
  4657                           intcon3	equ	0xFF0
  4658                           postinc0	equ	0xFEE
  4659                           wreg	equ	0xFE8
  4660                           postdec1	equ	0xFE5
  4661                           fsr1l	equ	0xFE1
  4662                           indf2	equ	0xFDF
  4663                           fsr2h	equ	0xFDA
  4664                           fsr2l	equ	0xFD9
  4665                           status	equ	0xFD8
  4666                           
  4667 ;; *************** function _ReadTable *****************
  4668 ;; Defined at:
  4669 ;;		line 141 in file "D:\DOC\Project\WEGA\WEGA2\Fuel_Calc.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  a               2    4[BANK1 ] unsigned int 
  4672 ;;  Massive         2    6[BANK1 ] PTR const unsigned int 
  4673 ;;		 -> LAG_LPG(10), LAG(10), 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  Index           1   19[BANK1 ] unsigned char 
  4676 ;;  Span            1   18[BANK1 ] unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  2    4[BANK1 ] unsigned int 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : F/1
  4683 ;;		On exit  : F/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4686 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;Total ram usage:       16 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:   12
  4693 ;; This function calls:
  4694 ;;		_IntpResL
  4695 ;; This function is called by:
  4696 ;;		_Get_Lag
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text17
  4701  000786                     __ptext17:
  4702                           	opt stack 0
  4703  000786                     _ReadTable:
  4704                           	opt stack 16
  4705                           
  4706                           ; BSR set to: 1
  4707                           ;Fuel_Calc.c: 143: unsigned char Index,Span;
  4708                           ;Fuel_Calc.c: 144: Span=a&0b00111111;
  4709                           
  4710                           ;incstack = 0
  4711  000786  5104               	movf	ReadTable@a& (0+255),w,b
  4712  000788  0B3F               	andlw	63
  4713  00078A  6F12               	movwf	ReadTable@Span& (0+255),b
  4714                           
  4715                           ;Fuel_Calc.c: 145: Index=a>>6;
  4716  00078C  C104  F108         	movff	ReadTable@a,??_ReadTable
  4717  000790  C105  F109         	movff	ReadTable@a+1,??_ReadTable+1
  4718  000794  0E06               	movlw	6
  4719  000796  6F0A               	movwf	(??_ReadTable+2)& (0+255),b
  4720  000798                     u4905:
  4721  000798  90D8               	bcf	status,0,c
  4722  00079A  3309               	rrcf	(??_ReadTable+1)& (0+255),f,b
  4723  00079C  3308               	rrcf	??_ReadTable& (0+255),f,b
  4724  00079E  2F0A               	decfsz	(??_ReadTable+2)& (0+255),f,b
  4725  0007A0  D7FB               	goto	u4905
  4726  0007A2  5108               	movf	??_ReadTable& (0+255),w,b
  4727  0007A4  6F13               	movwf	ReadTable@Index& (0+255),b
  4728                           
  4729                           ; BSR set to: 1
  4730                           ;Fuel_Calc.c: 146: if (Massive[Index] < Massive[Index+1])
  4731  0007A6  5113               	movf	ReadTable@Index& (0+255),w,b
  4732  0007A8  6F08               	movwf	??_ReadTable& (0+255),b
  4733  0007AA  6B09               	clrf	(??_ReadTable+1)& (0+255),b
  4734  0007AC  90D8               	bcf	status,0,c
  4735  0007AE  3708               	rlcf	??_ReadTable& (0+255),f,b
  4736  0007B0  3709               	rlcf	(??_ReadTable+1)& (0+255),f,b
  4737  0007B2  C106  F10A         	movff	ReadTable@Massive,??_ReadTable+2
  4738  0007B6  C107  F10B         	movff	ReadTable@Massive+1,??_ReadTable+3
  4739  0007BA  5108               	movf	??_ReadTable& (0+255),w,b
  4740  0007BC  270A               	addwf	(??_ReadTable+2)& (0+255),f,b
  4741  0007BE  5109               	movf	(??_ReadTable+1)& (0+255),w,b
  4742  0007C0  230B               	addwfc	(??_ReadTable+3)& (0+255),f,b
  4743  0007C2  0E02               	movlw	2
  4744  0007C4  270A               	addwf	(??_ReadTable+2)& (0+255),f,b
  4745  0007C6  0E00               	movlw	0
  4746  0007C8  230B               	addwfc	(??_ReadTable+3)& (0+255),f,b
  4747  0007CA  C10A  FFF6         	movff	??_ReadTable+2,tblptrl
  4748  0007CE  C10B  FFF7         	movff	??_ReadTable+3,tblptrh
  4749  0007D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4750  0007D2  6AF8               	clrf	tblptru,c
  4751  0007D4                     	endif
  4752  0007D4                     	if	0	;tblptru may be non-zero
  4753  0007D4                     	endif
  4754  0007D4  0009               	tblrd		*+
  4755  0007D6  CFF5 F10C          	movff	tablat,??_ReadTable+4
  4756  0007DA  0009               	tblrd		*+
  4757  0007DC  CFF5 F10D          	movff	tablat,??_ReadTable+5
  4758  0007E0  5113               	movf	ReadTable@Index& (0+255),w,b
  4759  0007E2  0D02               	mullw	2
  4760  0007E4  C106  F10E         	movff	ReadTable@Massive,??_ReadTable+6
  4761  0007E8  C107  F10F         	movff	ReadTable@Massive+1,??_ReadTable+7
  4762  0007EC  50F3               	movf	prodl,w,c
  4763  0007EE  270E               	addwf	(??_ReadTable+6)& (0+255),f,b
  4764  0007F0  50F4               	movf	prodh,w,c
  4765  0007F2  230F               	addwfc	(??_ReadTable+7)& (0+255),f,b
  4766  0007F4  C10E  FFF6         	movff	??_ReadTable+6,tblptrl
  4767  0007F8  C10F  FFF7         	movff	??_ReadTable+7,tblptrh
  4768  0007FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4769  0007FC  6AF8               	clrf	tblptru,c
  4770  0007FE                     	endif
  4771  0007FE                     	if	0	;tblptru may be non-zero
  4772  0007FE                     	endif
  4773  0007FE  0009               	tblrd		*+
  4774  000800  CFF5 F110          	movff	tablat,??_ReadTable+8
  4775  000804  0009               	tblrd		*+
  4776  000806  CFF5 F111          	movff	tablat,??_ReadTable+9
  4777  00080A  510C               	movf	(??_ReadTable+4)& (0+255),w,b
  4778  00080C  5D10               	subwf	(??_ReadTable+8)& (0+255),w,b
  4779  00080E  510D               	movf	(??_ReadTable+5)& (0+255),w,b
  4780  000810  5911               	subwfb	(??_ReadTable+9)& (0+255),w,b
  4781  000812  E23D               	bc	l4612
  4782                           
  4783                           ; BSR set to: 1
  4784                           ;Fuel_Calc.c: 147: {return IntpResL(Massive[Index],Massive[Index+1],Span);}
  4785  000814  5113               	movf	ReadTable@Index& (0+255),w,b
  4786  000816  0D02               	mullw	2
  4787  000818  C106  F108         	movff	ReadTable@Massive,??_ReadTable
  4788  00081C  C107  F109         	movff	ReadTable@Massive+1,??_ReadTable+1
  4789  000820  50F3               	movf	prodl,w,c
  4790  000822  2708               	addwf	??_ReadTable& (0+255),f,b
  4791  000824  50F4               	movf	prodh,w,c
  4792  000826  2309               	addwfc	(??_ReadTable+1)& (0+255),f,b
  4793  000828  C108  FFF6         	movff	??_ReadTable,tblptrl
  4794  00082C  C109  FFF7         	movff	??_ReadTable+1,tblptrh
  4795  000830                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4796  000830  6AF8               	clrf	tblptru,c
  4797  000832                     	endif
  4798  000832                     	if	0	;tblptru may be non-zero
  4799  000832                     	endif
  4800  000832  0009               	tblrd		*+
  4801  000834  CFF5 F0E5          	movff	tablat,IntpResL@Low_d
  4802  000838  000A               	tblrd		*-
  4803  00083A  CFF5 F0E6          	movff	tablat,IntpResL@Low_d+1
  4804  00083E  0101               	movlb	1	; () banked
  4805  000840  5113               	movf	ReadTable@Index& (0+255),w,b
  4806  000842  6F0A               	movwf	(??_ReadTable+2)& (0+255),b
  4807  000844  6B0B               	clrf	(??_ReadTable+3)& (0+255),b
  4808  000846  90D8               	bcf	status,0,c
  4809  000848  370A               	rlcf	(??_ReadTable+2)& (0+255),f,b
  4810  00084A  370B               	rlcf	(??_ReadTable+3)& (0+255),f,b
  4811  00084C  C106  F10C         	movff	ReadTable@Massive,??_ReadTable+4
  4812  000850  C107  F10D         	movff	ReadTable@Massive+1,??_ReadTable+5
  4813  000854  510A               	movf	(??_ReadTable+2)& (0+255),w,b
  4814  000856  270C               	addwf	(??_ReadTable+4)& (0+255),f,b
  4815  000858  510B               	movf	(??_ReadTable+3)& (0+255),w,b
  4816  00085A  230D               	addwfc	(??_ReadTable+5)& (0+255),f,b
  4817  00085C  0E02               	movlw	2
  4818  00085E  270C               	addwf	(??_ReadTable+4)& (0+255),f,b
  4819  000860  0E00               	movlw	0
  4820  000862  230D               	addwfc	(??_ReadTable+5)& (0+255),f,b
  4821  000864  C10C  FFF6         	movff	??_ReadTable+4,tblptrl
  4822  000868  C10D  FFF7         	movff	??_ReadTable+5,tblptrh
  4823  00086C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4824  00086C  6AF8               	clrf	tblptru,c
  4825  00086E                     	endif
  4826  00086E                     	if	0	;tblptru may be non-zero
  4827  00086E                     	endif
  4828  00086E  0009               	tblrd		*+
  4829  000870  0100               	movlb	0	; () banked
  4830  000872  CFF5 F0E7          	movff	tablat,IntpResL@Hi_d
  4831  000876  000A               	tblrd		*-
  4832  000878  CFF5 F0E8          	movff	tablat,IntpResL@Hi_d+1
  4833  00087C  C112  F0E9         	movff	ReadTable@Span,IntpResL@C
  4834  000880  ECA7  F00A         	call	_IntpResL	;wreg free
  4835  000884  C0E5  F104         	movff	?_IntpResL,?_ReadTable
  4836  000888  C0E6  F105         	movff	?_IntpResL+1,?_ReadTable+1
  4837  00088C  0012               	return	
  4838  00088E                     l4612:
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;Fuel_Calc.c: 148: else
  4842                           ;Fuel_Calc.c: 149: {return IntpResL(Massive[Index+1],Massive[Index],0x3F-Span);}
  4843  00088E  5113               	movf	ReadTable@Index& (0+255),w,b
  4844  000890  6F08               	movwf	??_ReadTable& (0+255),b
  4845  000892  6B09               	clrf	(??_ReadTable+1)& (0+255),b
  4846  000894  90D8               	bcf	status,0,c
  4847  000896  3708               	rlcf	??_ReadTable& (0+255),f,b
  4848  000898  3709               	rlcf	(??_ReadTable+1)& (0+255),f,b
  4849  00089A  C106  F10A         	movff	ReadTable@Massive,??_ReadTable+2
  4850  00089E  C107  F10B         	movff	ReadTable@Massive+1,??_ReadTable+3
  4851  0008A2  5108               	movf	??_ReadTable& (0+255),w,b
  4852  0008A4  270A               	addwf	(??_ReadTable+2)& (0+255),f,b
  4853  0008A6  5109               	movf	(??_ReadTable+1)& (0+255),w,b
  4854  0008A8  230B               	addwfc	(??_ReadTable+3)& (0+255),f,b
  4855  0008AA  0E02               	movlw	2
  4856  0008AC  270A               	addwf	(??_ReadTable+2)& (0+255),f,b
  4857  0008AE  0E00               	movlw	0
  4858  0008B0  230B               	addwfc	(??_ReadTable+3)& (0+255),f,b
  4859  0008B2  C10A  FFF6         	movff	??_ReadTable+2,tblptrl
  4860  0008B6  C10B  FFF7         	movff	??_ReadTable+3,tblptrh
  4861  0008BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4862  0008BA  6AF8               	clrf	tblptru,c
  4863  0008BC                     	endif
  4864  0008BC                     	if	0	;tblptru may be non-zero
  4865  0008BC                     	endif
  4866  0008BC  0009               	tblrd		*+
  4867  0008BE  CFF5 F0E5          	movff	tablat,IntpResL@Low_d
  4868  0008C2  000A               	tblrd		*-
  4869  0008C4  CFF5 F0E6          	movff	tablat,IntpResL@Low_d+1
  4870  0008C8  0101               	movlb	1	; () banked
  4871  0008CA  5113               	movf	ReadTable@Index& (0+255),w,b
  4872  0008CC  0D02               	mullw	2
  4873  0008CE  C106  F10C         	movff	ReadTable@Massive,??_ReadTable+4
  4874  0008D2  C107  F10D         	movff	ReadTable@Massive+1,??_ReadTable+5
  4875  0008D6  50F3               	movf	prodl,w,c
  4876  0008D8  270C               	addwf	(??_ReadTable+4)& (0+255),f,b
  4877  0008DA  50F4               	movf	prodh,w,c
  4878  0008DC  230D               	addwfc	(??_ReadTable+5)& (0+255),f,b
  4879  0008DE  C10C  FFF6         	movff	??_ReadTable+4,tblptrl
  4880  0008E2  C10D  FFF7         	movff	??_ReadTable+5,tblptrh
  4881  0008E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4882  0008E6  6AF8               	clrf	tblptru,c
  4883  0008E8                     	endif
  4884  0008E8                     	if	0	;tblptru may be non-zero
  4885  0008E8                     	endif
  4886  0008E8  0009               	tblrd		*+
  4887  0008EA  CFF5 F0E7          	movff	tablat,IntpResL@Hi_d
  4888  0008EE  000A               	tblrd		*-
  4889  0008F0  CFF5 F0E8          	movff	tablat,IntpResL@Hi_d+1
  4890  0008F4  5112               	movf	ReadTable@Span& (0+255),w,b
  4891  0008F6  083F               	sublw	63
  4892  0008F8  0100               	movlb	0	; () banked
  4893  0008FA  6FE9               	movwf	IntpResL@C& (0+255),b
  4894  0008FC  ECA7  F00A         	call	_IntpResL	;wreg free
  4895  000900  C0E5  F104         	movff	?_IntpResL,?_ReadTable
  4896  000904  C0E6  F105         	movff	?_IntpResL+1,?_ReadTable+1
  4897                           
  4898                           ; BSR set to: 0
  4899  000908  0012               	return	
  4900  00090A                     __end_of_ReadTable:
  4901                           	opt stack 0
  4902                           tblptru	equ	0xFF8
  4903                           tblptrh	equ	0xFF7
  4904                           tblptrl	equ	0xFF6
  4905                           tablat	equ	0xFF5
  4906                           prodh	equ	0xFF4
  4907                           prodl	equ	0xFF3
  4908                           intcon	equ	0xFF2
  4909                           intcon2	equ	0xFF1
  4910                           intcon3	equ	0xFF0
  4911                           postinc0	equ	0xFEE
  4912                           wreg	equ	0xFE8
  4913                           postdec1	equ	0xFE5
  4914                           fsr1l	equ	0xFE1
  4915                           indf2	equ	0xFDF
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function _IntpResL *****************
  4921 ;; Defined at:
  4922 ;;		line 182 in file "D:\DOC\Project\WEGA\WEGA2\Fuel_Calc.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  Low_d           2   30[BANK0 ] int 
  4925 ;;  Hi_d            2   32[BANK0 ] int 
  4926 ;;  C               1   34[BANK0 ] unsigned char 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  prom            2   35[BANK0 ] int 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  2   30[BANK0 ] int 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4933 ;; Tracked objects:
  4934 ;;		On entry : F/0
  4935 ;;		On exit  : F/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4938 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;Total ram usage:       11 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:   11
  4945 ;; This function calls:
  4946 ;;		___tmul
  4947 ;; This function is called by:
  4948 ;;		_ReadTable
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           	psect	text18
  4953  00154E                     __ptext18:
  4954                           	opt stack 0
  4955  00154E                     _IntpResL:
  4956                           	opt stack 16
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;Fuel_Calc.c: 184: int prom = (((Hi_d-Low_d)*(short long)(C & 0x3F))>>6);
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;incstack = 0
  4963  00154E  0E06               	movlw	6
  4964  001550  0101               	movlb	1	; () banked
  4965  001552  6F00               	movwf	??_IntpResL& (0+255),b
  4966  001554  0100               	movlb	0	; () banked
  4967  001556  C0E7  F101         	movff	IntpResL@Hi_d,??_IntpResL+1
  4968  00155A  C0E8  F102         	movff	IntpResL@Hi_d+1,??_IntpResL+2
  4969  00155E  51E5               	movf	IntpResL@Low_d& (0+255),w,b
  4970  001560  0101               	movlb	1	; () banked
  4971  001562  5F01               	subwf	(??_IntpResL+1)& (0+255),f,b
  4972  001564  0100               	movlb	0	; () banked
  4973  001566  51E6               	movf	(IntpResL@Low_d+1)& (0+255),w,b
  4974  001568  0101               	movlb	1	; () banked
  4975  00156A  5B02               	subwfb	(??_IntpResL+2)& (0+255),f,b
  4976  00156C  0100               	movlb	0	; () banked
  4977  00156E  C101  F0DA         	movff	??_IntpResL+1,___tmul@multiplier
  4978  001572  C102  F0DB         	movff	??_IntpResL+2,___tmul@multiplier+1
  4979  001576  6BDC               	clrf	(___tmul@multiplier+2)& (0+255),b
  4980  001578  BFDB               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  4981  00157A  07DC               	decf	(___tmul@multiplier+2)& (0+255),f,b
  4982  00157C  51E9               	movf	IntpResL@C& (0+255),w,b
  4983  00157E  0B3F               	andlw	63
  4984  001580  6FDD               	movwf	___tmul@multiplicand& (0+255),b
  4985  001582  6BDE               	clrf	(___tmul@multiplicand+1)& (0+255),b
  4986  001584  6BDF               	clrf	(___tmul@multiplicand+2)& (0+255),b
  4987  001586  ECDD  F00A         	call	___tmul	;wreg free
  4988  00158A  0101               	movlb	1	; () banked
  4989  00158C  2900               	incf	??_IntpResL& (0+255),w,b
  4990  00158E  6F03               	movwf	(??_IntpResL+3)& (0+255),b
  4991  001590  D005               	goto	u4450
  4992  001592                     u4455:
  4993  001592  0100               	movlb	0	; () banked
  4994  001594  35DC               	rlcf	(?___tmul+2)& (0+255),w,b
  4995  001596  33DC               	rrcf	(?___tmul+2)& (0+255),f,b
  4996  001598  33DB               	rrcf	(?___tmul+1)& (0+255),f,b
  4997  00159A  33DA               	rrcf	?___tmul& (0+255),f,b
  4998  00159C                     u4450:
  4999  00159C  0101               	movlb	1	; () banked
  5000  00159E  2F03               	decfsz	(??_IntpResL+3)& (0+255),f,b
  5001  0015A0  D7F8               	goto	u4455
  5002  0015A2  C0DA  F0EA         	movff	?___tmul,IntpResL@prom
  5003  0015A6  C0DB  F0EB         	movff	?___tmul+1,IntpResL@prom+1
  5004                           
  5005                           ; BSR set to: 1
  5006                           ;Fuel_Calc.c: 185: return (Low_d + prom);
  5007  0015AA  0100               	movlb	0	; () banked
  5008  0015AC  51EA               	movf	IntpResL@prom& (0+255),w,b
  5009  0015AE  25E5               	addwf	IntpResL@Low_d& (0+255),w,b
  5010  0015B0  6FE5               	movwf	?_IntpResL& (0+255),b
  5011  0015B2  51EB               	movf	(IntpResL@prom+1)& (0+255),w,b
  5012  0015B4  21E6               	addwfc	(IntpResL@Low_d+1)& (0+255),w,b
  5013  0015B6  6FE6               	movwf	(?_IntpResL+1)& (0+255),b
  5014                           
  5015                           ; BSR set to: 0
  5016  0015B8  0012               	return	
  5017  0015BA                     __end_of_IntpResL:
  5018                           	opt stack 0
  5019                           tblptru	equ	0xFF8
  5020                           tblptrh	equ	0xFF7
  5021                           tblptrl	equ	0xFF6
  5022                           tablat	equ	0xFF5
  5023                           prodh	equ	0xFF4
  5024                           prodl	equ	0xFF3
  5025                           intcon	equ	0xFF2
  5026                           intcon2	equ	0xFF1
  5027                           intcon3	equ	0xFF0
  5028                           postinc0	equ	0xFEE
  5029                           wreg	equ	0xFE8
  5030                           postdec1	equ	0xFE5
  5031                           fsr1l	equ	0xFE1
  5032                           indf2	equ	0xFDF
  5033                           fsr2h	equ	0xFDA
  5034                           fsr2l	equ	0xFD9
  5035                           status	equ	0xFD8
  5036                           
  5037 ;; *************** function _Fuel_Calculate *****************
  5038 ;; Defined at:
  5039 ;;		line 9 in file "D:\DOC\Project\WEGA\WEGA2\Fuel_Calc.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;		None
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  GazPressure     2    1[BANK1 ] int 
  5044 ;;  FClear          1    0        const unsigned char 
  5045 ;;  DTPS            1    0        unsigned char 
  5046 ;;  Injection       3    3[BANK1 ] unsigned um
  5047 ;; Return value:  Size  Location     Type
  5048 ;;		None               void
  5049 ;; Registers used:
  5050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : F/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;Total ram usage:        9 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:   11
  5063 ;; This function calls:
  5064 ;;		___atdiv
  5065 ;;		___tmul
  5066 ;; This function is called by:
  5067 ;;		_main
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text19
  5072  000392                     __ptext19:
  5073                           	opt stack 0
  5074  000392                     _Fuel_Calculate:
  5075                           	opt stack 18
  5076                           
  5077                           ;Fuel_Calc.c: 11: unsigned short long Injection;
  5078                           ;Fuel_Calc.c: 12: if (ECU.Mtr_On==1)
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;incstack = 0
  5082  000392  0100               	movlb	0	; () banked
  5083  000394  A169               	btfss	(_ECU+4)& (0+255),0,b	;volatile
  5084  000396  D0C9               	goto	l563
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;Fuel_Calc.c: 13: {
  5088                           ;Fuel_Calc.c: 14: static unsigned char TPS1;
  5089                           ;Fuel_Calc.c: 15: char DTPS=TPS1=ECU.TPS;TPS1=ECU.TPS;
  5090  000398  516F               	movf	(_ECU+10)& (0+255),w,b	;volatile
  5091  00039A  516F               	movf	(_ECU+10)& (0+255),w,b	;volatile
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;Fuel_Calc.c: 20: if (ECU.AFSTEN)
  5095  00039C  AF69               	btfss	(_ECU+4)& (0+255),7,b	;volatile
  5096  00039E  D006               	goto	l566
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;Fuel_Calc.c: 21: {if (ECU.Accel_ENR-- <= 128){ECU.AFSTEN=0;}}
  5100  0003A0  0E80               	movlw	128
  5101  0003A2  0782               	decf	(_ECU+29)& (0+255),f,b	;volatile
  5102  0003A4  5D82               	subwf	(_ECU+29)& (0+255),w,b	;volatile
  5103  0003A6  E20E               	bc	l568
  5104                           
  5105                           ; BSR set to: 0
  5106  0003A8  9F69               	bcf	(_ECU+4)& (0+255),7,b	;volatile
  5107  0003AA  D00C               	goto	l568
  5108  0003AC                     l566:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;Fuel_Calc.c: 22: else {if (ECU.IAC==1 && ECU.RPM > (1400/25)) {ECU.TIME_INJ=0;ECU.Econ=
      +                          1;return;}
  5112  0003AC  A569               	btfss	(_ECU+4)& (0+255),2,b	;volatile
  5113  0003AE  D009               	goto	l569
  5114                           
  5115                           ; BSR set to: 0
  5116  0003B0  EE20  F072         	lfsr	2,_ECU+13	;volatile
  5117  0003B4  0E38               	movlw	56
  5118  0003B6  64DF               	cpfsgt	indf2,c
  5119  0003B8  D004               	goto	l569
  5120                           
  5121                           ; BSR set to: 0
  5122  0003BA  6B73               	clrf	(_ECU+14)& (0+255),b	;volatile
  5123  0003BC  6B74               	clrf	(_ECU+15)& (0+255),b	;volatile
  5124  0003BE  8B69               	bsf	(_ECU+4)& (0+255),5,b	;volatile
  5125  0003C0  0012               	return	
  5126  0003C2                     l569:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;Fuel_Calc.c: 23: else{ECU.Econ=0;}
  5130  0003C2  9B69               	bcf	(_ECU+4)& (0+255),5,b	;volatile
  5131  0003C4                     l568:
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;Fuel_Calc.c: 24: }
  5135                           ;Fuel_Calc.c: 34: if (ECU.LPG)
  5136  0003C4  A17F               	btfss	(_ECU+26)& (0+255),0,b	;volatile
  5137  0003C6  D049               	goto	l5032
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;Fuel_Calc.c: 35: {
  5141                           ;Fuel_Calc.c: 36: int GazPressure=LPGPressure-AirPressure;
  5142  0003C8  5160               	movf	_AirPressure& (0+255),w,b
  5143  0003CA  5C35               	subwf	_LPGPressure,w,c
  5144  0003CC  0101               	movlb	1	; () banked
  5145  0003CE  6F01               	movwf	Fuel_Calculate@GazPressure& (0+255),b
  5146  0003D0  0100               	movlb	0	; () banked
  5147  0003D2  5161               	movf	(_AirPressure+1)& (0+255),w,b
  5148  0003D4  5836               	subwfb	_LPGPressure+1,w,c
  5149  0003D6  0101               	movlb	1	; () banked
  5150  0003D8  6F02               	movwf	(Fuel_Calculate@GazPressure+1)& (0+255),b
  5151                           
  5152                           ; BSR set to: 1
  5153                           ;Fuel_Calc.c: 37: if (GazPressure < 1) {GazPressure=64;}
  5154  0003DA  5102               	movf	(Fuel_Calculate@GazPressure+1)& (0+255),w,b
  5155  0003DC  0A80               	xorlw	128
  5156  0003DE  6EF3               	movwf	prodl,c
  5157  0003E0  0E80               	movlw	128
  5158  0003E2  5CF3               	subwf	prodl,w,c
  5159  0003E4  0E01               	movlw	1
  5160  0003E6  B4D8               	btfsc	status,2,c
  5161  0003E8  5D01               	subwf	Fuel_Calculate@GazPressure& (0+255),w,b
  5162  0003EA  E203               	bc	l5028
  5163                           
  5164                           ; BSR set to: 1
  5165  0003EC  6B02               	clrf	(Fuel_Calculate@GazPressure+1)& (0+255),b
  5166  0003EE  0E40               	movlw	64
  5167  0003F0  6F01               	movwf	Fuel_Calculate@GazPressure& (0+255),b
  5168  0003F2                     l5028:
  5169                           
  5170                           ; BSR set to: 1
  5171                           ;Fuel_Calc.c: 38: Injection=((unsigned short long)ECU.RqF*AirPressure)>>8;
  5172  0003F2  0100               	movlb	0	; () banked
  5173  0003F4  C077  F0DA         	movff	_ECU+18,___tmul@multiplier	;volatile
  5174  0003F8  C078  F0DB         	movff	_ECU+19,___tmul@multiplier+1	;volatile
  5175  0003FC  6BDC               	clrf	(___tmul@multiplier+2)& (0+255),b
  5176  0003FE  C060  F0DD         	movff	_AirPressure,___tmul@multiplicand
  5177  000402  C061  F0DE         	movff	_AirPressure+1,___tmul@multiplicand+1
  5178  000406  6BDF               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5179  000408  ECDD  F00A         	call	___tmul	;wreg free
  5180  00040C  C0DB  F0DA         	movff	?___tmul+1,?___tmul
  5181  000410  C0DC  F0DB         	movff	?___tmul+2,?___tmul+1
  5182  000414  6BDC               	clrf	(?___tmul+2)& (0+255),b
  5183  000416  C0DA  F103         	movff	?___tmul,Fuel_Calculate@Injection
  5184  00041A  C0DB  F104         	movff	?___tmul+1,Fuel_Calculate@Injection+1
  5185  00041E  C0DC  F105         	movff	?___tmul+2,Fuel_Calculate@Injection+2
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;Fuel_Calc.c: 39: Injection=((signed short long)(Injection<<8)/GazPressure);
  5189  000422  C103  F0E6         	movff	Fuel_Calculate@Injection,??_Fuel_Calculate+1
  5190  000426  C104  F0E7         	movff	Fuel_Calculate@Injection+1,??_Fuel_Calculate+2
  5191  00042A  0100               	movlb	0	; () banked
  5192  00042C  6BE5               	clrf	??_Fuel_Calculate& (0+255),b
  5193  00042E  C0E5  F0DA         	movff	??_Fuel_Calculate,___atdiv@dividend
  5194  000432  C0E6  F0DB         	movff	??_Fuel_Calculate+1,___atdiv@dividend+1
  5195  000436  C0E7  F0DC         	movff	??_Fuel_Calculate+2,___atdiv@dividend+2
  5196  00043A  C101  F0DD         	movff	Fuel_Calculate@GazPressure,___atdiv@divisor
  5197  00043E  C102  F0DE         	movff	Fuel_Calculate@GazPressure+1,___atdiv@divisor+1
  5198  000442  6BDF               	clrf	(___atdiv@divisor+2)& (0+255),b
  5199  000444  BFDE               	btfsc	(___atdiv@divisor+1)& (0+255),7,b
  5200  000446  07DF               	decf	(___atdiv@divisor+2)& (0+255),f,b
  5201  000448  EC38  F008         	call	___atdiv	;wreg free
  5202  00044C  C0DA  F103         	movff	?___atdiv,Fuel_Calculate@Injection
  5203  000450  C0DB  F104         	movff	?___atdiv+1,Fuel_Calculate@Injection+1
  5204  000454  C0DC  F105         	movff	?___atdiv+2,Fuel_Calculate@Injection+2
  5205                           
  5206                           ;Fuel_Calc.c: 40: }
  5207  000458  D034               	goto	l5034
  5208  00045A                     l5032:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;Fuel_Calc.c: 41: else {
  5212                           ;Fuel_Calc.c: 42: Injection=((unsigned short long)ECU.RqF*AirPressure)>>8;
  5213  00045A  C077  F0DA         	movff	_ECU+18,___tmul@multiplier	;volatile
  5214  00045E  C078  F0DB         	movff	_ECU+19,___tmul@multiplier+1	;volatile
  5215  000462  6BDC               	clrf	(___tmul@multiplier+2)& (0+255),b
  5216  000464  C060  F0DD         	movff	_AirPressure,___tmul@multiplicand
  5217  000468  C061  F0DE         	movff	_AirPressure+1,___tmul@multiplicand+1
  5218  00046C  6BDF               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5219  00046E  ECDD  F00A         	call	___tmul	;wreg free
  5220  000472  C0DB  F0DA         	movff	?___tmul+1,?___tmul
  5221  000476  C0DC  F0DB         	movff	?___tmul+2,?___tmul+1
  5222  00047A  6BDC               	clrf	(?___tmul+2)& (0+255),b
  5223  00047C  C0DA  F103         	movff	?___tmul,Fuel_Calculate@Injection
  5224  000480  C0DB  F104         	movff	?___tmul+1,Fuel_Calculate@Injection+1
  5225  000484  C0DC  F105         	movff	?___tmul+2,Fuel_Calculate@Injection+2
  5226                           
  5227                           ;Fuel_Calc.c: 44: Injection=((unsigned short long)Injection*ECU.Accel_ENR)>>7;
  5228  000488  0E07               	movlw	7
  5229  00048A  6FE5               	movwf	??_Fuel_Calculate& (0+255),b
  5230  00048C  5182               	movf	(_ECU+29)& (0+255),w,b	;volatile
  5231  00048E  6FDA               	movwf	___tmul@multiplier& (0+255),b
  5232  000490  6BDB               	clrf	(___tmul@multiplier+1)& (0+255),b
  5233  000492  6BDC               	clrf	(___tmul@multiplier+2)& (0+255),b
  5234  000494  C103  F0DD         	movff	Fuel_Calculate@Injection,___tmul@multiplicand
  5235  000498  C104  F0DE         	movff	Fuel_Calculate@Injection+1,___tmul@multiplicand+1
  5236  00049C  C105  F0DF         	movff	Fuel_Calculate@Injection+2,___tmul@multiplicand+2
  5237  0004A0  ECDD  F00A         	call	___tmul	;wreg free
  5238  0004A4  29E5               	incf	??_Fuel_Calculate& (0+255),w,b
  5239  0004A6  6FE6               	movwf	(??_Fuel_Calculate+1)& (0+255),b
  5240  0004A8  D004               	goto	u5380
  5241  0004AA                     u5385:
  5242  0004AA  90D8               	bcf	status,0,c
  5243  0004AC  33DC               	rrcf	(?___tmul+2)& (0+255),f,b
  5244  0004AE  33DB               	rrcf	(?___tmul+1)& (0+255),f,b
  5245  0004B0  33DA               	rrcf	?___tmul& (0+255),f,b
  5246  0004B2                     u5380:
  5247  0004B2  2FE6               	decfsz	(??_Fuel_Calculate+1)& (0+255),f,b
  5248  0004B4  D7FA               	goto	u5385
  5249  0004B6  C0DA  F103         	movff	?___tmul,Fuel_Calculate@Injection
  5250  0004BA  C0DB  F104         	movff	?___tmul+1,Fuel_Calculate@Injection+1
  5251  0004BE  C0DC  F105         	movff	?___tmul+2,Fuel_Calculate@Injection+2
  5252  0004C2                     l5034:
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;Fuel_Calc.c: 45: }
  5256                           ;Fuel_Calc.c: 59: if (ECU.Accel || ECU.D_Accel || ECU.AFSTEN)
  5257  0004C2  A769               	btfss	(_ECU+4)& (0+255),3,b	;volatile
  5258                           
  5259                           ; BSR set to: 0
  5260  0004C4  B969               	btfsc	(_ECU+4)& (0+255),4,b	;volatile
  5261  0004C6  D002               	goto	l5040
  5262                           
  5263                           ; BSR set to: 0
  5264  0004C8  AF69               	btfss	(_ECU+4)& (0+255),7,b	;volatile
  5265  0004CA  D01D               	goto	l5042
  5266  0004CC                     l5040:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;Fuel_Calc.c: 60: {
  5270                           ;Fuel_Calc.c: 61: Injection=((unsigned short long)Injection*ECU.Accel_ENR)>>7;
  5271  0004CC  0E07               	movlw	7
  5272  0004CE  6FE5               	movwf	??_Fuel_Calculate& (0+255),b
  5273  0004D0  5182               	movf	(_ECU+29)& (0+255),w,b	;volatile
  5274  0004D2  6FDA               	movwf	___tmul@multiplier& (0+255),b
  5275  0004D4  6BDB               	clrf	(___tmul@multiplier+1)& (0+255),b
  5276  0004D6  6BDC               	clrf	(___tmul@multiplier+2)& (0+255),b
  5277  0004D8  C103  F0DD         	movff	Fuel_Calculate@Injection,___tmul@multiplicand
  5278  0004DC  C104  F0DE         	movff	Fuel_Calculate@Injection+1,___tmul@multiplicand+1
  5279  0004E0  C105  F0DF         	movff	Fuel_Calculate@Injection+2,___tmul@multiplicand+2
  5280  0004E4  ECDD  F00A         	call	___tmul	;wreg free
  5281  0004E8  29E5               	incf	??_Fuel_Calculate& (0+255),w,b
  5282  0004EA  6FE6               	movwf	(??_Fuel_Calculate+1)& (0+255),b
  5283  0004EC  D004               	goto	u5420
  5284  0004EE                     u5425:
  5285  0004EE  90D8               	bcf	status,0,c
  5286  0004F0  33DC               	rrcf	(?___tmul+2)& (0+255),f,b
  5287  0004F2  33DB               	rrcf	(?___tmul+1)& (0+255),f,b
  5288  0004F4  33DA               	rrcf	?___tmul& (0+255),f,b
  5289  0004F6                     u5420:
  5290  0004F6  2FE6               	decfsz	(??_Fuel_Calculate+1)& (0+255),f,b
  5291  0004F8  D7FA               	goto	u5425
  5292  0004FA  C0DA  F103         	movff	?___tmul,Fuel_Calculate@Injection
  5293  0004FE  C0DB  F104         	movff	?___tmul+1,Fuel_Calculate@Injection+1
  5294  000502  C0DC  F105         	movff	?___tmul+2,Fuel_Calculate@Injection+2
  5295  000506                     l5042:
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;Fuel_Calc.c: 65: }
  5299                           ;Fuel_Calc.c: 69: if (ECU.Accel || ECU.EMR) {LD2=1;}else{LD2=0;}
  5300  000506  B769               	btfsc	(_ECU+4)& (0+255),3,b	;volatile
  5301  000508  D002               	goto	l580
  5302                           
  5303                           ; BSR set to: 0
  5304  00050A  AD69               	btfss	(_ECU+4)& (0+255),6,b	;volatile
  5305  00050C  D002               	goto	l578
  5306  00050E                     l580:
  5307                           
  5308                           ; BSR set to: 0
  5309  00050E  848C               	bsf	3980,2,c	;volatile
  5310  000510  D001               	goto	l581
  5311  000512                     l578:
  5312                           
  5313                           ; BSR set to: 0
  5314  000512  948C               	bcf	3980,2,c	;volatile
  5315  000514                     l581:
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;Fuel_Calc.c: 70: if (ECU.IAC) {LD1=1;} else {LD1=0;}
  5319  000514  A569               	btfss	(_ECU+4)& (0+255),2,b	;volatile
  5320  000516  D002               	goto	l582
  5321                           
  5322                           ; BSR set to: 0
  5323  000518  828C               	bsf	3980,1,c	;volatile
  5324  00051A  D001               	goto	l583
  5325  00051C                     l582:
  5326                           
  5327                           ; BSR set to: 0
  5328  00051C  928C               	bcf	3980,1,c	;volatile
  5329  00051E                     l583:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;Fuel_Calc.c: 71: if (ECU.Warm) {LD4=1;} else {LD4=0;}
  5333  00051E  A369               	btfss	(_ECU+4)& (0+255),1,b	;volatile
  5334  000520  D002               	goto	l584
  5335                           
  5336                           ; BSR set to: 0
  5337  000522  888C               	bsf	3980,4,c	;volatile
  5338  000524  D035               	goto	l5058
  5339  000526                     l584:
  5340                           
  5341                           ; BSR set to: 0
  5342  000526  988C               	bcf	3980,4,c	;volatile
  5343  000528  D033               	goto	l5058
  5344  00052A                     l563:
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;Fuel_Calc.c: 73: else
  5348                           ;Fuel_Calc.c: 74: {
  5349                           ;Fuel_Calc.c: 78: ECU.EMR=0;
  5350  00052A  9D69               	bcf	(_ECU+4)& (0+255),6,b	;volatile
  5351                           
  5352                           ;Fuel_Calc.c: 79: ECU.AFSTEN=1;
  5353  00052C  8F69               	bsf	(_ECU+4)& (0+255),7,b	;volatile
  5354                           
  5355                           ;Fuel_Calc.c: 80: ECU.Econ=0;
  5356  00052E  9B69               	bcf	(_ECU+4)& (0+255),5,b	;volatile
  5357                           
  5358                           ;Fuel_Calc.c: 81: ECU.Accel_ENR=255;
  5359  000530  6982               	setf	(_ECU+29)& (0+255),b	;volatile
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;Fuel_Calc.c: 83: if(ECU.TPS > FClear)
  5363                           
  5364                           ; BSR set to: 0
  5365  000532  EE20  F06F         	lfsr	2,_ECU+10	;volatile
  5366  000536  0E9F               	movlw	159
  5367  000538  64DF               	cpfsgt	indf2,c
  5368  00053A  D005               	goto	l5056
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;Fuel_Calc.c: 84: {
  5372                           ;Fuel_Calc.c: 85: Injection=0;
  5373  00053C  0101               	movlb	1	; () banked
  5374  00053E  6B03               	clrf	Fuel_Calculate@Injection& (0+255),b
  5375  000540  6B04               	clrf	(Fuel_Calculate@Injection+1)& (0+255),b
  5376  000542  6B05               	clrf	(Fuel_Calculate@Injection+2)& (0+255),b
  5377                           
  5378                           ;Fuel_Calc.c: 86: }
  5379  000544  D025               	goto	l5058
  5380  000546                     l5056:
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;Fuel_Calc.c: 87: else
  5384                           ;Fuel_Calc.c: 88: {
  5385                           ;Fuel_Calc.c: 89: Injection=((((unsigned short long)ECU.COLT*ECU.COLT>>8)*(30000-3000))>
      +                          >8)+3000;
  5386  000546  516D               	movf	(_ECU+8)& (0+255),w,b	;volatile
  5387  000548  036D               	mulwf	(_ECU+8)& (0+255),b	;volatile
  5388  00054A  CFF4 FFF3          	movff	prodh,prodl
  5389  00054E  6AF4               	clrf	prodh,c
  5390  000550  CFF3 F0DA          	movff	prodl,___tmul@multiplier
  5391  000554  CFF4 F0DB          	movff	prodh,___tmul@multiplier+1
  5392  000558  6BDC               	clrf	(___tmul@multiplier+2)& (0+255),b
  5393  00055A  0E78               	movlw	120
  5394  00055C  6FDD               	movwf	___tmul@multiplicand& (0+255),b
  5395  00055E  0E69               	movlw	105
  5396  000560  6FDE               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5397  000562  0E00               	movlw	0
  5398  000564  6BDF               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5399  000566  ECDD  F00A         	call	___tmul	;wreg free
  5400  00056A  C0DB  F0DA         	movff	?___tmul+1,?___tmul
  5401  00056E  C0DC  F0DB         	movff	?___tmul+2,?___tmul+1
  5402  000572  6BDC               	clrf	(?___tmul+2)& (0+255),b
  5403  000574  0EB8               	movlw	184
  5404  000576  25DA               	addwf	?___tmul& (0+255),w,b
  5405  000578  0101               	movlb	1	; () banked
  5406  00057A  6F03               	movwf	Fuel_Calculate@Injection& (0+255),b
  5407  00057C  0E0B               	movlw	11
  5408  00057E  0100               	movlb	0	; () banked
  5409  000580  21DB               	addwfc	(?___tmul+1)& (0+255),w,b
  5410  000582  0101               	movlb	1	; () banked
  5411  000584  6F04               	movwf	(Fuel_Calculate@Injection+1)& (0+255),b
  5412  000586  0E00               	movlw	0
  5413  000588  0100               	movlb	0	; () banked
  5414  00058A  21DC               	addwfc	(?___tmul+2)& (0+255),w,b
  5415  00058C  0101               	movlb	1	; () banked
  5416  00058E  6F05               	movwf	(Fuel_Calculate@Injection+2)& (0+255),b
  5417  000590                     l5058:
  5418                           
  5419                           ;Fuel_Calc.c: 90: }
  5420                           ;Fuel_Calc.c: 91: }
  5421                           ;Fuel_Calc.c: 94: if (ECU.CutOff)
  5422  000590  0100               	movlb	0	; () banked
  5423  000592  AF7F               	btfss	(_ECU+26)& (0+255),7,b	;volatile
  5424  000594  D003               	goto	l589
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;Fuel_Calc.c: 95: ECU.TIME_INJ = 0;
  5428  000596  6B73               	clrf	(_ECU+14)& (0+255),b	;volatile
  5429  000598  6B74               	clrf	(_ECU+15)& (0+255),b	;volatile
  5430  00059A  0012               	return	
  5431  00059C                     l589:
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;Fuel_Calc.c: 96: else
  5435                           ;Fuel_Calc.c: 97: ECU.TIME_INJ=Injection;
  5436  00059C  C103  F073         	movff	Fuel_Calculate@Injection,_ECU+14	;volatile
  5437  0005A0  C104  F074         	movff	Fuel_Calculate@Injection+1,_ECU+15	;volatile
  5438                           
  5439                           ; BSR set to: 0
  5440  0005A4  0012               	return	
  5441  0005A6                     __end_of_Fuel_Calculate:
  5442                           	opt stack 0
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           prodh	equ	0xFF4
  5448                           prodl	equ	0xFF3
  5449                           intcon	equ	0xFF2
  5450                           intcon2	equ	0xFF1
  5451                           intcon3	equ	0xFF0
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           postdec1	equ	0xFE5
  5455                           fsr1l	equ	0xFE1
  5456                           indf2	equ	0xFDF
  5457                           fsr2h	equ	0xFDA
  5458                           fsr2l	equ	0xFD9
  5459                           status	equ	0xFD8
  5460                           
  5461 ;; *************** function ___atdiv *****************
  5462 ;; Defined at:
  5463 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\atdiv.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  dividend        3   19[BANK0 ] m
  5466 ;;  divisor         3   22[BANK0 ] m
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  quotient        3   27[BANK0 ] m
  5469 ;;  sign            1   26[BANK0 ] unsigned char 
  5470 ;;  counter         1   25[BANK0 ] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  3   19[BANK0 ] m
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0
  5475 ;; Tracked objects:
  5476 ;;		On entry : F/0
  5477 ;;		On exit  : F/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5480 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;Total ram usage:       11 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:   10
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_Fuel_Calculate
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text20
  5495  001070                     __ptext20:
  5496                           	opt stack 0
  5497  001070                     ___atdiv:
  5498                           	opt stack 18
  5499                           
  5500                           ; BSR set to: 0
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;incstack = 0
  5504  001070  6BE1               	clrf	___atdiv@sign& (0+255),b
  5505                           
  5506                           ; BSR set to: 0
  5507  001072  51DF               	movf	(___atdiv@divisor+2)& (0+255),w,b
  5508  001074  0A80               	xorlw	128
  5509  001076  0F80               	addlw	128
  5510  001078  E105               	bnz	u5035
  5511  00107A  0E00               	movlw	0
  5512  00107C  5DDE               	subwf	(___atdiv@divisor+1)& (0+255),w,b
  5513  00107E  E102               	bnz	u5035
  5514  001080  0E00               	movlw	0
  5515  001082  5DDD               	subwf	___atdiv@divisor& (0+255),w,b
  5516  001084                     u5035:
  5517  001084  E208               	bc	l4644
  5518                           
  5519                           ; BSR set to: 0
  5520  001086  1FDF               	comf	(___atdiv@divisor+2)& (0+255),f,b
  5521  001088  1FDE               	comf	(___atdiv@divisor+1)& (0+255),f,b
  5522  00108A  6DDD               	negf	___atdiv@divisor& (0+255),b
  5523  00108C  0E00               	movlw	0
  5524  00108E  23DE               	addwfc	(___atdiv@divisor+1)& (0+255),f,b
  5525  001090  23DF               	addwfc	(___atdiv@divisor+2)& (0+255),f,b
  5526                           
  5527                           ; BSR set to: 0
  5528  001092  0E01               	movlw	1
  5529  001094  6FE1               	movwf	___atdiv@sign& (0+255),b
  5530  001096                     l4644:
  5531                           
  5532                           ; BSR set to: 0
  5533  001096  51DC               	movf	(___atdiv@dividend+2)& (0+255),w,b
  5534  001098  0A80               	xorlw	128
  5535  00109A  0F80               	addlw	128
  5536  00109C  E105               	bnz	u5045
  5537  00109E  0E00               	movlw	0
  5538  0010A0  5DDB               	subwf	(___atdiv@dividend+1)& (0+255),w,b
  5539  0010A2  E102               	bnz	u5045
  5540  0010A4  0E00               	movlw	0
  5541  0010A6  5DDA               	subwf	___atdiv@dividend& (0+255),w,b
  5542  0010A8                     u5045:
  5543  0010A8  E208               	bc	l4650
  5544                           
  5545                           ; BSR set to: 0
  5546  0010AA  1FDC               	comf	(___atdiv@dividend+2)& (0+255),f,b
  5547  0010AC  1FDB               	comf	(___atdiv@dividend+1)& (0+255),f,b
  5548  0010AE  6DDA               	negf	___atdiv@dividend& (0+255),b
  5549  0010B0  0E00               	movlw	0
  5550  0010B2  23DB               	addwfc	(___atdiv@dividend+1)& (0+255),f,b
  5551  0010B4  23DC               	addwfc	(___atdiv@dividend+2)& (0+255),f,b
  5552                           
  5553                           ; BSR set to: 0
  5554  0010B6  0E01               	movlw	1
  5555  0010B8  1BE1               	xorwf	___atdiv@sign& (0+255),f,b
  5556  0010BA                     l4650:
  5557                           
  5558                           ; BSR set to: 0
  5559  0010BA  6BE2               	clrf	___atdiv@quotient& (0+255),b
  5560  0010BC  6BE3               	clrf	(___atdiv@quotient+1)& (0+255),b
  5561  0010BE  6BE4               	clrf	(___atdiv@quotient+2)& (0+255),b
  5562                           
  5563                           ; BSR set to: 0
  5564  0010C0  51DD               	movf	___atdiv@divisor& (0+255),w,b
  5565  0010C2  11DE               	iorwf	(___atdiv@divisor+1)& (0+255),w,b
  5566  0010C4  11DF               	iorwf	(___atdiv@divisor+2)& (0+255),w,b
  5567  0010C6  E022               	bz	l4670
  5568                           
  5569                           ; BSR set to: 0
  5570  0010C8  0E01               	movlw	1
  5571  0010CA  6FE0               	movwf	___atdiv@counter& (0+255),b
  5572  0010CC  D005               	goto	l4658
  5573  0010CE                     l4656:
  5574                           
  5575                           ; BSR set to: 0
  5576  0010CE  90D8               	bcf	status,0,c
  5577  0010D0  37DD               	rlcf	___atdiv@divisor& (0+255),f,b
  5578  0010D2  37DE               	rlcf	(___atdiv@divisor+1)& (0+255),f,b
  5579  0010D4  37DF               	rlcf	(___atdiv@divisor+2)& (0+255),f,b
  5580  0010D6  2BE0               	incf	___atdiv@counter& (0+255),f,b
  5581  0010D8                     l4658:
  5582                           
  5583                           ; BSR set to: 0
  5584  0010D8  AFDF               	btfss	(___atdiv@divisor+2)& (0+255),7,b
  5585  0010DA  D7F9               	goto	l4656
  5586  0010DC                     l4660:
  5587                           
  5588                           ; BSR set to: 0
  5589  0010DC  90D8               	bcf	status,0,c
  5590  0010DE  37E2               	rlcf	___atdiv@quotient& (0+255),f,b
  5591  0010E0  37E3               	rlcf	(___atdiv@quotient+1)& (0+255),f,b
  5592  0010E2  37E4               	rlcf	(___atdiv@quotient+2)& (0+255),f,b
  5593                           
  5594                           ; BSR set to: 0
  5595  0010E4  51DD               	movf	___atdiv@divisor& (0+255),w,b
  5596  0010E6  5DDA               	subwf	___atdiv@dividend& (0+255),w,b
  5597  0010E8  51DE               	movf	(___atdiv@divisor+1)& (0+255),w,b
  5598  0010EA  59DB               	subwfb	(___atdiv@dividend+1)& (0+255),w,b
  5599  0010EC  51DF               	movf	(___atdiv@divisor+2)& (0+255),w,b
  5600  0010EE  59DC               	subwfb	(___atdiv@dividend+2)& (0+255),w,b
  5601  0010F0  E307               	bnc	l1141
  5602                           
  5603                           ; BSR set to: 0
  5604  0010F2  51DD               	movf	___atdiv@divisor& (0+255),w,b
  5605  0010F4  5FDA               	subwf	___atdiv@dividend& (0+255),f,b
  5606  0010F6  51DE               	movf	(___atdiv@divisor+1)& (0+255),w,b
  5607  0010F8  5BDB               	subwfb	(___atdiv@dividend+1)& (0+255),f,b
  5608  0010FA  51DF               	movf	(___atdiv@divisor+2)& (0+255),w,b
  5609  0010FC  5BDC               	subwfb	(___atdiv@dividend+2)& (0+255),f,b
  5610                           
  5611                           ; BSR set to: 0
  5612  0010FE  81E2               	bsf	___atdiv@quotient& (0+255),0,b
  5613  001100                     l1141:
  5614                           
  5615                           ; BSR set to: 0
  5616  001100  90D8               	bcf	status,0,c
  5617  001102  33DF               	rrcf	(___atdiv@divisor+2)& (0+255),f,b
  5618  001104  33DE               	rrcf	(___atdiv@divisor+1)& (0+255),f,b
  5619  001106  33DD               	rrcf	___atdiv@divisor& (0+255),f,b
  5620                           
  5621                           ; BSR set to: 0
  5622  001108  2FE0               	decfsz	___atdiv@counter& (0+255),f,b
  5623  00110A  D7E8               	goto	l4660
  5624  00110C                     l4670:
  5625                           
  5626                           ; BSR set to: 0
  5627  00110C  51E1               	movf	___atdiv@sign& (0+255),w,b
  5628  00110E  E006               	bz	l4674
  5629                           
  5630                           ; BSR set to: 0
  5631  001110  1FE4               	comf	(___atdiv@quotient+2)& (0+255),f,b
  5632  001112  1FE3               	comf	(___atdiv@quotient+1)& (0+255),f,b
  5633  001114  6DE2               	negf	___atdiv@quotient& (0+255),b
  5634  001116  0E00               	movlw	0
  5635  001118  23E3               	addwfc	(___atdiv@quotient+1)& (0+255),f,b
  5636  00111A  23E4               	addwfc	(___atdiv@quotient+2)& (0+255),f,b
  5637  00111C                     l4674:
  5638                           
  5639                           ; BSR set to: 0
  5640  00111C  C0E2  F0DA         	movff	___atdiv@quotient,?___atdiv
  5641  001120  C0E3  F0DB         	movff	___atdiv@quotient+1,?___atdiv+1
  5642  001124  C0E4  F0DC         	movff	___atdiv@quotient+2,?___atdiv+2
  5643                           
  5644                           ; BSR set to: 0
  5645  001128  0012               	return	
  5646  00112A                     __end_of___atdiv:
  5647                           	opt stack 0
  5648                           tblptru	equ	0xFF8
  5649                           tblptrh	equ	0xFF7
  5650                           tblptrl	equ	0xFF6
  5651                           tablat	equ	0xFF5
  5652                           prodh	equ	0xFF4
  5653                           prodl	equ	0xFF3
  5654                           intcon	equ	0xFF2
  5655                           intcon2	equ	0xFF1
  5656                           intcon3	equ	0xFF0
  5657                           postinc0	equ	0xFEE
  5658                           wreg	equ	0xFE8
  5659                           postdec1	equ	0xFE5
  5660                           fsr1l	equ	0xFE1
  5661                           indf2	equ	0xFDF
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function _Emul_PND *****************
  5667 ;; Defined at:
  5668 ;;		line 179 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  Vout            2   34[BANK0 ] unsigned int 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;		None               void
  5675 ;; Registers used:
  5676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5677 ;; Tracked objects:
  5678 ;;		On entry : E/0
  5679 ;;		On exit  : F/F
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;Total ram usage:        4 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:   12
  5689 ;; This function calls:
  5690 ;;		_Emul_PND_T
  5691 ;;		_SetDCPWM5
  5692 ;; This function is called by:
  5693 ;;		_main
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text21
  5698  00192E                     __ptext21:
  5699                           	opt stack 0
  5700  00192E                     _Emul_PND:
  5701                           	opt stack 17
  5702                           
  5703                           ;main.c: 181: unsigned int Vout;
  5704                           ;main.c: 183: Vout=Emul_PND_T(ECU.RPM,AirPressure);
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;incstack = 0
  5708  00192E  C060  F0E5         	movff	_AirPressure,Emul_PND_T@MAP
  5709  001932  C061  F0E6         	movff	_AirPressure+1,Emul_PND_T@MAP+1
  5710  001936  0100               	movlb	0	; () banked
  5711  001938  5172               	movf	(_ECU+13)& (0+255),w,b	;volatile
  5712  00193A  ECD3  F002         	call	_Emul_PND_T
  5713  00193E  0100               	movlb	0	; () banked
  5714  001940  6FE9               	movwf	Emul_PND@Vout& (0+255),b
  5715  001942  6BEA               	clrf	(Emul_PND@Vout+1)& (0+255),b
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;main.c: 184: if (Vout < 10) Vout = 10;
  5719  001944  0E0A               	movlw	10
  5720  001946  5DE9               	subwf	Emul_PND@Vout& (0+255),w,b
  5721  001948  0E00               	movlw	0
  5722  00194A  59EA               	subwfb	(Emul_PND@Vout+1)& (0+255),w,b
  5723  00194C  E203               	bc	l4904
  5724                           
  5725                           ; BSR set to: 0
  5726  00194E  6BEA               	clrf	(Emul_PND@Vout+1)& (0+255),b
  5727  001950  0E0A               	movlw	10
  5728  001952  6FE9               	movwf	Emul_PND@Vout& (0+255),b
  5729  001954                     l4904:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;main.c: 185: ECU.UOZ=Vout;
  5733  001954  C0E9  F086         	movff	Emul_PND@Vout,_ECU+33	;volatile
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;main.c: 186: SetDCPWM5((Vout<<2)+2);
  5737  001958  C0E9  F0E7         	movff	Emul_PND@Vout,??_Emul_PND
  5738  00195C  C0EA  F0E8         	movff	Emul_PND@Vout+1,??_Emul_PND+1
  5739  001960  90D8               	bcf	status,0,c
  5740  001962  37E7               	rlcf	??_Emul_PND& (0+255),f,b
  5741  001964  37E8               	rlcf	(??_Emul_PND+1)& (0+255),f,b
  5742  001966  90D8               	bcf	status,0,c
  5743  001968  37E7               	rlcf	??_Emul_PND& (0+255),f,b
  5744  00196A  37E8               	rlcf	(??_Emul_PND+1)& (0+255),f,b
  5745  00196C  0E02               	movlw	2
  5746  00196E  25E7               	addwf	??_Emul_PND& (0+255),w,b
  5747  001970  6FDA               	movwf	SetDCPWM5@dutycycle& (0+255),b
  5748  001972  0E00               	movlw	0
  5749  001974  21E8               	addwfc	(??_Emul_PND+1)& (0+255),w,b
  5750  001976  6FDB               	movwf	(SetDCPWM5@dutycycle+1)& (0+255),b
  5751  001978  EF71  F00D         	goto	_SetDCPWM5	;wreg free
  5752  00197C                     __end_of_Emul_PND:
  5753                           	opt stack 0
  5754                           tblptru	equ	0xFF8
  5755                           tblptrh	equ	0xFF7
  5756                           tblptrl	equ	0xFF6
  5757                           tablat	equ	0xFF5
  5758                           prodh	equ	0xFF4
  5759                           prodl	equ	0xFF3
  5760                           intcon	equ	0xFF2
  5761                           intcon2	equ	0xFF1
  5762                           intcon3	equ	0xFF0
  5763                           postinc0	equ	0xFEE
  5764                           wreg	equ	0xFE8
  5765                           postdec1	equ	0xFE5
  5766                           fsr1l	equ	0xFE1
  5767                           indf2	equ	0xFDF
  5768                           fsr2h	equ	0xFDA
  5769                           fsr2l	equ	0xFD9
  5770                           status	equ	0xFD8
  5771                           
  5772 ;; *************** function _SetDCPWM5 *****************
  5773 ;; Defined at:
  5774 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw5setdc.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  dutycycle       2   19[BANK0 ] unsigned int 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  DCycle          2   23[BANK0 ] struct PWMDC
  5779 ;; Return value:  Size  Location     Type
  5780 ;;		None               void
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0
  5783 ;; Tracked objects:
  5784 ;;		On entry : F/0
  5785 ;;		On exit  : F/F
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5788 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;Total ram usage:        6 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:   10
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_INIT
  5799 ;;		_Emul_PND
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text22
  5804  001AE2                     __ptext22:
  5805                           	opt stack 0
  5806  001AE2                     _SetDCPWM5:
  5807                           	opt stack 18
  5808                           
  5809                           ; BSR set to: 0
  5810                           
  5811                           ; BSR set to: 15
  5812                           ;incstack = 0
  5813  001AE2  C0DA  F0DC         	movff	SetDCPWM5@dutycycle,??_SetDCPWM5
  5814  001AE6  C0DB  F0DD         	movff	SetDCPWM5@dutycycle+1,??_SetDCPWM5+1
  5815  001AEA  0E06               	movlw	6
  5816  001AEC                     u4685:
  5817  001AEC  90D8               	bcf	status,0,c
  5818  001AEE  37DC               	rlcf	??_SetDCPWM5& (0+255),f,b
  5819  001AF0  37DD               	rlcf	(??_SetDCPWM5+1)& (0+255),f,b
  5820  001AF2  2EE8               	decfsz	wreg,f,c
  5821  001AF4  D7FB               	goto	u4685
  5822  001AF6  C0DC  F0DE         	movff	??_SetDCPWM5,SetDCPWM5@DCycle
  5823  001AFA  C0DD  F0DF         	movff	??_SetDCPWM5+1,SetDCPWM5@DCycle+1
  5824                           
  5825                           ; BSR set to: 0
  5826  001AFE  C0DF  FF55         	movff	SetDCPWM5@DCycle+1,3925	;volatile
  5827  001B02  C0DE  F0DC         	movff	SetDCPWM5@DCycle,??_SetDCPWM5
  5828  001B06  90D8               	bcf	status,0,c
  5829  001B08  33DC               	rrcf	??_SetDCPWM5& (0+255),f,b
  5830  001B0A  90D8               	bcf	status,0,c
  5831  001B0C  33DC               	rrcf	??_SetDCPWM5& (0+255),f,b
  5832  001B0E  0E30               	movlw	48
  5833  001B10  17DC               	andwf	??_SetDCPWM5& (0+255),f,b
  5834  001B12  010F               	movlb	15	; () banked
  5835  001B14  5154               	movf	84,w,b	;volatile
  5836  001B16  0BCF               	andlw	207
  5837  001B18  0100               	movlb	0	; () banked
  5838  001B1A  11DC               	iorwf	??_SetDCPWM5& (0+255),w,b
  5839  001B1C  010F               	movlb	15	; () banked
  5840  001B1E  6F54               	movwf	84,b	;volatile
  5841                           
  5842                           ; BSR set to: 15
  5843  001B20  0012               	return	
  5844  001B22                     __end_of_SetDCPWM5:
  5845                           	opt stack 0
  5846                           tblptru	equ	0xFF8
  5847                           tblptrh	equ	0xFF7
  5848                           tblptrl	equ	0xFF6
  5849                           tablat	equ	0xFF5
  5850                           prodh	equ	0xFF4
  5851                           prodl	equ	0xFF3
  5852                           intcon	equ	0xFF2
  5853                           intcon2	equ	0xFF1
  5854                           intcon3	equ	0xFF0
  5855                           postinc0	equ	0xFEE
  5856                           wreg	equ	0xFE8
  5857                           postdec1	equ	0xFE5
  5858                           fsr1l	equ	0xFE1
  5859                           indf2	equ	0xFDF
  5860                           fsr2h	equ	0xFDA
  5861                           fsr2l	equ	0xFD9
  5862                           status	equ	0xFD8
  5863                           
  5864 ;; *************** function _Emul_PND_T *****************
  5865 ;; Defined at:
  5866 ;;		line 46 in file "D:\DOC\Project\WEGA\WEGA2\pnd_emul.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  RPM             1    wreg     unsigned char 
  5869 ;;  MAP             2   30[BANK0 ] int 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  RPM             1    7[BANK1 ] unsigned char 
  5872 ;;  pres            1   13[BANK1 ] char 
  5873 ;;  hidt            1   12[BANK1 ] unsigned char 
  5874 ;;  lowdt           1   11[BANK1 ] unsigned char 
  5875 ;;  column          1   10[BANK1 ] unsigned char 
  5876 ;;  span            1    9[BANK1 ] unsigned char 
  5877 ;;  out             1    8[BANK1 ] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      unsigned char 
  5880 ;; Registers used:
  5881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : F/0
  5884 ;;		On exit  : F/1
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;Total ram usage:       16 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:   11
  5894 ;; This function calls:
  5895 ;;		___tmul
  5896 ;; This function is called by:
  5897 ;;		_Emul_PND
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	text23
  5902  0005A6                     __ptext23:
  5903                           	opt stack 0
  5904  0005A6                     _Emul_PND_T:
  5905                           	opt stack 17
  5906                           
  5907                           ; BSR set to: 15
  5908                           ;incstack = 0
  5909                           ;Emul_PND_T@RPM stored from wreg
  5910  0005A6  0101               	movlb	1	; () banked
  5911  0005A8  6F07               	movwf	Emul_PND_T@RPM& (0+255),b
  5912                           
  5913                           ; BSR set to: 1
  5914                           ;pnd_emul.c: 48: signed char pres; char span,column,out;
  5915                           ;pnd_emul.c: 49: MAP=(MAP*(unsigned short long)320)>>8;
  5916  0005AA  0100               	movlb	0	; () banked
  5917  0005AC  C0E5  F0DA         	movff	Emul_PND_T@MAP,___tmul@multiplier
  5918  0005B0  C0E6  F0DB         	movff	Emul_PND_T@MAP+1,___tmul@multiplier+1
  5919  0005B4  6BDC               	clrf	(___tmul@multiplier+2)& (0+255),b
  5920  0005B6  BFDB               	btfsc	(___tmul@multiplier+1)& (0+255),7,b
  5921  0005B8  07DC               	decf	(___tmul@multiplier+2)& (0+255),f,b
  5922  0005BA  0E40               	movlw	64
  5923  0005BC  6FDD               	movwf	___tmul@multiplicand& (0+255),b
  5924  0005BE  0E01               	movlw	1
  5925  0005C0  6FDE               	movwf	(___tmul@multiplicand+1)& (0+255),b
  5926  0005C2  0E00               	movlw	0
  5927  0005C4  6BDF               	clrf	(___tmul@multiplicand+2)& (0+255),b
  5928  0005C6  ECDD  F00A         	call	___tmul	;wreg free
  5929  0005CA  C0DB  F0DA         	movff	?___tmul+1,?___tmul
  5930  0005CE  C0DC  F0DB         	movff	?___tmul+2,?___tmul+1
  5931  0005D2  6BDC               	clrf	(?___tmul+2)& (0+255),b
  5932  0005D4  C0DA  F0E5         	movff	?___tmul,Emul_PND_T@MAP
  5933  0005D8  C0DB  F0E6         	movff	?___tmul+1,Emul_PND_T@MAP+1
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;pnd_emul.c: 50: MAP=MAP-64;
  5937  0005DC  0EC0               	movlw	192
  5938  0005DE  27E5               	addwf	Emul_PND_T@MAP& (0+255),f,b
  5939  0005E0  0EFF               	movlw	255
  5940  0005E2  23E6               	addwfc	(Emul_PND_T@MAP+1)& (0+255),f,b
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;pnd_emul.c: 51: pres = (MAP>>5);
  5944  0005E4  C0E5  F100         	movff	Emul_PND_T@MAP,??_Emul_PND_T
  5945  0005E8  C0E6  F101         	movff	Emul_PND_T@MAP+1,??_Emul_PND_T+1
  5946  0005EC  0E05               	movlw	5
  5947  0005EE  0101               	movlb	1	; () banked
  5948  0005F0  6F02               	movwf	(??_Emul_PND_T+2)& (0+255),b
  5949  0005F2                     u4715:
  5950  0005F2  3501               	rlcf	(??_Emul_PND_T+1)& (0+255),w,b
  5951  0005F4  3301               	rrcf	(??_Emul_PND_T+1)& (0+255),f,b
  5952  0005F6  3300               	rrcf	??_Emul_PND_T& (0+255),f,b
  5953  0005F8  2F02               	decfsz	(??_Emul_PND_T+2)& (0+255),f,b
  5954  0005FA  D7FB               	goto	u4715
  5955  0005FC  5100               	movf	??_Emul_PND_T& (0+255),w,b
  5956  0005FE  6F0D               	movwf	Emul_PND_T@pres& (0+255),b
  5957                           
  5958                           ; BSR set to: 1
  5959                           ;pnd_emul.c: 52: span=MAP&0b00011111;
  5960  000600  0100               	movlb	0	; () banked
  5961  000602  51E5               	movf	Emul_PND_T@MAP& (0+255),w,b
  5962  000604  0B1F               	andlw	31
  5963  000606  0101               	movlb	1	; () banked
  5964  000608  6F09               	movwf	Emul_PND_T@span& (0+255),b
  5965                           
  5966                           ; BSR set to: 1
  5967                           ;pnd_emul.c: 53: column=RPM2Tabl[RPM];
  5968  00060A  0EC3               	movlw	low _RPM2Tabl
  5969  00060C  2507               	addwf	Emul_PND_T@RPM& (0+255),w,b
  5970  00060E  6EF6               	movwf	tblptrl,c
  5971  000610  6AF7               	clrf	tblptrh,c
  5972  000612  0EFE               	movlw	high _RPM2Tabl
  5973  000614  22F7               	addwfc	tblptrh,f,c
  5974  000616                     	if	1	;There are 3 active tblptr bytes
  5975  000616  6AF8               	clrf	tblptru,c
  5976  000618  0E00               	movlw	low (__mediumconst shr (0+16))
  5977  00061A  22F8               	addwfc	tblptru,f,c
  5978  00061C                     	endif
  5979  00061C  0008               	tblrd		*
  5980  00061E  CFF5 F10A          	movff	tablat,Emul_PND_T@column
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;pnd_emul.c: 54: if (pres < 0)
  5984  000622  AF0D               	btfss	Emul_PND_T@pres& (0+255),7,b
  5985  000624  D00D               	goto	l4514
  5986                           
  5987                           ; BSR set to: 1
  5988  000626  6B09               	clrf	Emul_PND_T@span& (0+255),b
  5989                           
  5990                           ; BSR set to: 1
  5991                           ;pnd_emul.c: 57: return(Ign0[column+(pres<<5)]);
  5992  000628  0EC3               	movlw	low _Ign0
  5993  00062A  250A               	addwf	Emul_PND_T@column& (0+255),w,b
  5994  00062C  6EF6               	movwf	tblptrl,c
  5995  00062E  6AF7               	clrf	tblptrh,c
  5996  000630  0EFB               	movlw	high _Ign0
  5997  000632  22F7               	addwfc	tblptrh,f,c
  5998  000634                     	if	1	;There are 3 active tblptr bytes
  5999  000634  6AF8               	clrf	tblptru,c
  6000  000636  0E00               	movlw	low (__mediumconst shr (0+16))
  6001  000638  22F8               	addwfc	tblptru,f,c
  6002  00063A                     	endif
  6003  00063A  0008               	tblrd		*
  6004  00063C  50F5               	movf	tablat,w,c
  6005  00063E  0012               	return	
  6006  000640                     l4514:
  6007                           
  6008                           ; BSR set to: 1
  6009                           ;pnd_emul.c: 58: }
  6010                           ;pnd_emul.c: 59: if (pres >=7)
  6011  000640  510D               	movf	Emul_PND_T@pres& (0+255),w,b
  6012  000642  0A80               	xorlw	128
  6013  000644  0F79               	addlw	-135
  6014  000646  E316               	bnc	l4520
  6015                           
  6016                           ; BSR set to: 1
  6017                           ;pnd_emul.c: 60: {
  6018                           ;pnd_emul.c: 61: return(Ign0[column+(8<<5)]);
  6019  000648  6B00               	clrf	??_Emul_PND_T& (0+255),b
  6020  00064A  0E01               	movlw	1
  6021  00064C  6F01               	movwf	(??_Emul_PND_T+1)& (0+255),b
  6022  00064E  510A               	movf	Emul_PND_T@column& (0+255),w,b
  6023  000650  6F02               	movwf	(??_Emul_PND_T+2)& (0+255),b
  6024  000652  6B03               	clrf	(??_Emul_PND_T+3)& (0+255),b
  6025  000654  5100               	movf	??_Emul_PND_T& (0+255),w,b
  6026  000656  2702               	addwf	(??_Emul_PND_T+2)& (0+255),f,b
  6027  000658  5101               	movf	(??_Emul_PND_T+1)& (0+255),w,b
  6028  00065A  2303               	addwfc	(??_Emul_PND_T+3)& (0+255),f,b
  6029  00065C  0EC3               	movlw	low _Ign0
  6030  00065E  2502               	addwf	(??_Emul_PND_T+2)& (0+255),w,b
  6031  000660  6EF6               	movwf	tblptrl,c
  6032  000662  0EFB               	movlw	high _Ign0
  6033  000664  2103               	addwfc	(??_Emul_PND_T+3)& (0+255),w,b
  6034  000666  6EF7               	movwf	tblptrh,c
  6035  000668                     	if	1	;There are 3 active tblptr bytes
  6036  000668  6AF8               	clrf	tblptru,c
  6037  00066A  0E00               	movlw	low (__mediumconst shr (0+16))
  6038  00066C  22F8               	addwfc	tblptru,f,c
  6039  00066E                     	endif
  6040  00066E  0008               	tblrd		*
  6041  000670  50F5               	movf	tablat,w,c
  6042  000672  0012               	return	
  6043  000674                     l4520:
  6044                           
  6045                           ; BSR set to: 1
  6046                           ;pnd_emul.c: 62: }
  6047                           ;pnd_emul.c: 63: char lowdt=Ign0[column+(pres<<5)];
  6048  000674  C10D  F100         	movff	Emul_PND_T@pres,??_Emul_PND_T
  6049  000678  6B01               	clrf	(??_Emul_PND_T+1)& (0+255),b
  6050  00067A  BF00               	btfsc	??_Emul_PND_T& (0+255),7,b
  6051  00067C  0701               	decf	(??_Emul_PND_T+1)& (0+255),f,b
  6052  00067E  0E05               	movlw	5
  6053  000680                     u4745:
  6054  000680  90D8               	bcf	status,0,c
  6055  000682  3700               	rlcf	??_Emul_PND_T& (0+255),f,b
  6056  000684  3701               	rlcf	(??_Emul_PND_T+1)& (0+255),f,b
  6057  000686  2EE8               	decfsz	wreg,f,c
  6058  000688  D7FB               	goto	u4745
  6059  00068A  0EC3               	movlw	low _Ign0
  6060  00068C  6F02               	movwf	(??_Emul_PND_T+2)& (0+255),b
  6061  00068E  0EFB               	movlw	high _Ign0
  6062  000690  6F03               	movwf	(??_Emul_PND_T+3)& (0+255),b
  6063  000692  510A               	movf	Emul_PND_T@column& (0+255),w,b
  6064  000694  2702               	addwf	(??_Emul_PND_T+2)& (0+255),f,b
  6065  000696  0E00               	movlw	0
  6066  000698  2303               	addwfc	(??_Emul_PND_T+3)& (0+255),f,b
  6067  00069A  5100               	movf	??_Emul_PND_T& (0+255),w,b
  6068  00069C  2702               	addwf	(??_Emul_PND_T+2)& (0+255),f,b
  6069  00069E  5101               	movf	(??_Emul_PND_T+1)& (0+255),w,b
  6070  0006A0  2303               	addwfc	(??_Emul_PND_T+3)& (0+255),f,b
  6071  0006A2  C102  FFF6         	movff	??_Emul_PND_T+2,tblptrl
  6072  0006A6  C103  FFF7         	movff	??_Emul_PND_T+3,tblptrh
  6073  0006AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6074  0006AA  6AF8               	clrf	tblptru,c
  6075  0006AC                     	endif
  6076  0006AC                     	if	0	;tblptru may be non-zero
  6077  0006AC                     	endif
  6078  0006AC  0008               	tblrd		*
  6079  0006AE  CFF5 F10B          	movff	tablat,Emul_PND_T@lowdt
  6080                           
  6081                           ;pnd_emul.c: 64: char hidt=Ign0[column+((pres+1)<<5)];
  6082  0006B2  C10D  F100         	movff	Emul_PND_T@pres,??_Emul_PND_T
  6083  0006B6  6B01               	clrf	(??_Emul_PND_T+1)& (0+255),b
  6084  0006B8  BF00               	btfsc	??_Emul_PND_T& (0+255),7,b
  6085  0006BA  0701               	decf	(??_Emul_PND_T+1)& (0+255),f,b
  6086  0006BC  0E05               	movlw	5
  6087  0006BE                     u4755:
  6088  0006BE  90D8               	bcf	status,0,c
  6089  0006C0  3700               	rlcf	??_Emul_PND_T& (0+255),f,b
  6090  0006C2  3701               	rlcf	(??_Emul_PND_T+1)& (0+255),f,b
  6091  0006C4  2EE8               	decfsz	wreg,f,c
  6092  0006C6  D7FB               	goto	u4755
  6093  0006C8  0EC3               	movlw	low _Ign0
  6094  0006CA  6F02               	movwf	(??_Emul_PND_T+2)& (0+255),b
  6095  0006CC  0EFB               	movlw	high _Ign0
  6096  0006CE  6F03               	movwf	(??_Emul_PND_T+3)& (0+255),b
  6097  0006D0  5100               	movf	??_Emul_PND_T& (0+255),w,b
  6098  0006D2  2702               	addwf	(??_Emul_PND_T+2)& (0+255),f,b
  6099  0006D4  5101               	movf	(??_Emul_PND_T+1)& (0+255),w,b
  6100  0006D6  2303               	addwfc	(??_Emul_PND_T+3)& (0+255),f,b
  6101  0006D8  510A               	movf	Emul_PND_T@column& (0+255),w,b
  6102  0006DA  2702               	addwf	(??_Emul_PND_T+2)& (0+255),f,b
  6103  0006DC  0E00               	movlw	0
  6104  0006DE  2303               	addwfc	(??_Emul_PND_T+3)& (0+255),f,b
  6105  0006E0  0E20               	movlw	32
  6106  0006E2  2702               	addwf	(??_Emul_PND_T+2)& (0+255),f,b
  6107  0006E4  0E00               	movlw	0
  6108  0006E6  2303               	addwfc	(??_Emul_PND_T+3)& (0+255),f,b
  6109  0006E8  C102  FFF6         	movff	??_Emul_PND_T+2,tblptrl
  6110  0006EC  C103  FFF7         	movff	??_Emul_PND_T+3,tblptrh
  6111  0006F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6112  0006F0  6AF8               	clrf	tblptru,c
  6113  0006F2                     	endif
  6114  0006F2                     	if	0	;tblptru may be non-zero
  6115  0006F2                     	endif
  6116  0006F2  0008               	tblrd		*
  6117  0006F4  CFF5 F10C          	movff	tablat,Emul_PND_T@hidt
  6118                           
  6119                           ; BSR set to: 1
  6120                           ;pnd_emul.c: 65: if (lowdt<hidt)
  6121  0006F8  510C               	movf	Emul_PND_T@hidt& (0+255),w,b
  6122  0006FA  5D0B               	subwf	Emul_PND_T@lowdt& (0+255),w,b
  6123  0006FC  E221               	bc	l4526
  6124                           
  6125                           ; BSR set to: 1
  6126                           ;pnd_emul.c: 66: {out=(lowdt+(((hidt-lowdt)*(int)span)>>5));}
  6127  0006FE  5109               	movf	Emul_PND_T@span& (0+255),w,b
  6128  000700  6F00               	movwf	??_Emul_PND_T& (0+255),b
  6129  000702  6B01               	clrf	(??_Emul_PND_T+1)& (0+255),b
  6130  000704  510B               	movf	Emul_PND_T@lowdt& (0+255),w,b
  6131  000706  C10C  F102         	movff	Emul_PND_T@hidt,??_Emul_PND_T+2
  6132  00070A  6B03               	clrf	(??_Emul_PND_T+3)& (0+255),b
  6133  00070C  5F02               	subwf	(??_Emul_PND_T+2)& (0+255),f,b
  6134  00070E  0E00               	movlw	0
  6135  000710  5B03               	subwfb	(??_Emul_PND_T+3)& (0+255),f,b
  6136  000712  5100               	movf	??_Emul_PND_T& (0+255),w,b
  6137  000714  0302               	mulwf	(??_Emul_PND_T+2)& (0+255),b
  6138  000716  CFF3 F104          	movff	prodl,??_Emul_PND_T+4
  6139  00071A  CFF4 F105          	movff	prodh,??_Emul_PND_T+5
  6140  00071E  0303               	mulwf	(??_Emul_PND_T+3)& (0+255),b
  6141  000720  50F3               	movf	243,w,c
  6142  000722  2705               	addwf	(??_Emul_PND_T+5)& (0+255),f,b
  6143  000724  5101               	movf	(??_Emul_PND_T+1)& (0+255),w,b
  6144  000726  0302               	mulwf	(??_Emul_PND_T+2)& (0+255),b
  6145  000728  50F3               	movf	243,w,c
  6146  00072A  2705               	addwf	(??_Emul_PND_T+5)& (0+255),f,b
  6147  00072C  0E05               	movlw	5
  6148  00072E  6F06               	movwf	(??_Emul_PND_T+6)& (0+255),b
  6149  000730                     u4775:
  6150  000730  3505               	rlcf	(??_Emul_PND_T+5)& (0+255),w,b
  6151  000732  3305               	rrcf	(??_Emul_PND_T+5)& (0+255),f,b
  6152  000734  3304               	rrcf	(??_Emul_PND_T+4)& (0+255),f,b
  6153  000736  2F06               	decfsz	(??_Emul_PND_T+6)& (0+255),f,b
  6154  000738  D7FB               	goto	u4775
  6155  00073A  5104               	movf	(??_Emul_PND_T+4)& (0+255),w,b
  6156  00073C  250B               	addwf	Emul_PND_T@lowdt& (0+255),w,b
  6157  00073E  D020               	goto	L1
  6158  000740                     l4526:
  6159                           
  6160                           ; BSR set to: 1
  6161                           ;pnd_emul.c: 67: else
  6162                           ;pnd_emul.c: 68: {out=(hidt+(((lowdt-hidt)*(int)span)>>5));}
  6163  000740  5109               	movf	Emul_PND_T@span& (0+255),w,b
  6164  000742  6F00               	movwf	??_Emul_PND_T& (0+255),b
  6165  000744  6B01               	clrf	(??_Emul_PND_T+1)& (0+255),b
  6166  000746  510C               	movf	Emul_PND_T@hidt& (0+255),w,b
  6167  000748  C10B  F102         	movff	Emul_PND_T@lowdt,??_Emul_PND_T+2
  6168  00074C  6B03               	clrf	(??_Emul_PND_T+3)& (0+255),b
  6169  00074E  5F02               	subwf	(??_Emul_PND_T+2)& (0+255),f,b
  6170  000750  0E00               	movlw	0
  6171  000752  5B03               	subwfb	(??_Emul_PND_T+3)& (0+255),f,b
  6172  000754  5100               	movf	??_Emul_PND_T& (0+255),w,b
  6173  000756  0302               	mulwf	(??_Emul_PND_T+2)& (0+255),b
  6174  000758  CFF3 F104          	movff	prodl,??_Emul_PND_T+4
  6175  00075C  CFF4 F105          	movff	prodh,??_Emul_PND_T+5
  6176  000760  0303               	mulwf	(??_Emul_PND_T+3)& (0+255),b
  6177  000762  50F3               	movf	243,w,c
  6178  000764  2705               	addwf	(??_Emul_PND_T+5)& (0+255),f,b
  6179  000766  5101               	movf	(??_Emul_PND_T+1)& (0+255),w,b
  6180  000768  0302               	mulwf	(??_Emul_PND_T+2)& (0+255),b
  6181  00076A  50F3               	movf	243,w,c
  6182  00076C  2705               	addwf	(??_Emul_PND_T+5)& (0+255),f,b
  6183  00076E  0E05               	movlw	5
  6184  000770  6F06               	movwf	(??_Emul_PND_T+6)& (0+255),b
  6185  000772                     u4785:
  6186  000772  3505               	rlcf	(??_Emul_PND_T+5)& (0+255),w,b
  6187  000774  3305               	rrcf	(??_Emul_PND_T+5)& (0+255),f,b
  6188  000776  3304               	rrcf	(??_Emul_PND_T+4)& (0+255),f,b
  6189  000778  2F06               	decfsz	(??_Emul_PND_T+6)& (0+255),f,b
  6190  00077A  D7FB               	goto	u4785
  6191  00077C  5104               	movf	(??_Emul_PND_T+4)& (0+255),w,b
  6192  00077E  250C               	addwf	Emul_PND_T@hidt& (0+255),w,b
  6193  000780                     L1:
  6194  000780  6F08               	movwf	Emul_PND_T@out& (0+255),b
  6195                           
  6196                           ; BSR set to: 1
  6197                           ;pnd_emul.c: 69: return(out);
  6198  000782  5108               	movf	Emul_PND_T@out& (0+255),w,b
  6199                           
  6200                           ; BSR set to: 1
  6201  000784  0012               	return	
  6202  000786                     __end_of_Emul_PND_T:
  6203                           	opt stack 0
  6204                           tblptru	equ	0xFF8
  6205                           tblptrh	equ	0xFF7
  6206                           tblptrl	equ	0xFF6
  6207                           tablat	equ	0xFF5
  6208                           prodh	equ	0xFF4
  6209                           prodl	equ	0xFF3
  6210                           intcon	equ	0xFF2
  6211                           intcon2	equ	0xFF1
  6212                           intcon3	equ	0xFF0
  6213                           postinc0	equ	0xFEE
  6214                           wreg	equ	0xFE8
  6215                           postdec1	equ	0xFE5
  6216                           fsr1l	equ	0xFE1
  6217                           indf2	equ	0xFDF
  6218                           fsr2h	equ	0xFDA
  6219                           fsr2l	equ	0xFD9
  6220                           status	equ	0xFD8
  6221                           
  6222 ;; *************** function ___tmul *****************
  6223 ;; Defined at:
  6224 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul24.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  multiplier      3   19[BANK0 ] unsigned um
  6227 ;;  multiplicand    3   22[BANK0 ] unsigned um
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  product         3   27[BANK0 ] unsigned um
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  3   19[BANK0 ] unsigned um
  6232 ;; Registers used:
  6233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6234 ;; Tracked objects:
  6235 ;;		On entry : F/0
  6236 ;;		On exit  : F/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6239 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;Total ram usage:       11 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:   10
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_Fuel_Calculate
  6250 ;;		_IntpResL
  6251 ;;		_Emul_PND_T
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text24
  6256  0015BA                     __ptext24:
  6257                           	opt stack 0
  6258  0015BA                     ___tmul:
  6259                           	opt stack 16
  6260                           
  6261                           ; BSR set to: 0
  6262                           
  6263                           ; BSR set to: 1
  6264                           ;incstack = 0
  6265  0015BA  51DA               	movf	___tmul@multiplier& (0+255),w,b
  6266  0015BC  03DD               	mulwf	___tmul@multiplicand& (0+255),b
  6267  0015BE  CFF3 F0E2          	movff	prodl,___tmul@product
  6268  0015C2  CFF4 F0E3          	movff	prodh,___tmul@product+1
  6269  0015C6  6BE4               	clrf	(___tmul@product+2)& (0+255),b
  6270                           
  6271                           ; BSR set to: 0
  6272  0015C8  51DA               	movf	___tmul@multiplier& (0+255),w,b
  6273  0015CA  03DE               	mulwf	(___tmul@multiplicand+1)& (0+255),b
  6274  0015CC  0EE2               	movlw	___tmul@product& (0+255)
  6275  0015CE  6FE0               	movwf	??___tmul& (0+255),b
  6276  0015D0  6BE1               	clrf	(??___tmul+1)& (0+255),b
  6277  0015D2  29E0               	incf	??___tmul& (0+255),w,b
  6278  0015D4  6ED9               	movwf	fsr2l,c
  6279  0015D6  0E00               	movlw	0
  6280  0015D8  21E1               	addwfc	(??___tmul+1)& (0+255),w,b
  6281  0015DA  6EDA               	movwf	fsr2h,c
  6282  0015DC  50F3               	movf	prodl,w,c
  6283  0015DE  26DE               	addwf	postinc2,f,c
  6284  0015E0  50F4               	movf	prodh,w,c
  6285  0015E2  22DD               	addwfc	postdec2,f,c
  6286                           
  6287                           ; BSR set to: 0
  6288  0015E4  51DB               	movf	(___tmul@multiplier+1)& (0+255),w,b
  6289  0015E6  03DD               	mulwf	___tmul@multiplicand& (0+255),b
  6290  0015E8  0EE2               	movlw	___tmul@product& (0+255)
  6291  0015EA  6FE0               	movwf	??___tmul& (0+255),b
  6292  0015EC  6BE1               	clrf	(??___tmul+1)& (0+255),b
  6293  0015EE  29E0               	incf	??___tmul& (0+255),w,b
  6294  0015F0  6ED9               	movwf	fsr2l,c
  6295  0015F2  0E00               	movlw	0
  6296  0015F4  21E1               	addwfc	(??___tmul+1)& (0+255),w,b
  6297  0015F6  6EDA               	movwf	fsr2h,c
  6298  0015F8  50F3               	movf	prodl,w,c
  6299  0015FA  26DE               	addwf	postinc2,f,c
  6300  0015FC  50F4               	movf	prodh,w,c
  6301  0015FE  22DD               	addwfc	postdec2,f,c
  6302  001600  51DF               	movf	(___tmul@multiplicand+2)& (0+255),w,b
  6303  001602  03DA               	mulwf	___tmul@multiplier& (0+255),b
  6304  001604  50F3               	movf	prodl,w,c
  6305  001606  27E4               	addwf	(___tmul@product+2)& (0+255),f,b
  6306  001608  51DB               	movf	(___tmul@multiplier+1)& (0+255),w,b
  6307  00160A  03DE               	mulwf	(___tmul@multiplicand+1)& (0+255),b
  6308  00160C  50F3               	movf	prodl,w,c
  6309  00160E  27E4               	addwf	(___tmul@product+2)& (0+255),f,b
  6310  001610  51DC               	movf	(___tmul@multiplier+2)& (0+255),w,b
  6311  001612  03DD               	mulwf	___tmul@multiplicand& (0+255),b
  6312  001614  50F3               	movf	prodl,w,c
  6313  001616  27E4               	addwf	(___tmul@product+2)& (0+255),f,b
  6314                           
  6315                           ; BSR set to: 0
  6316  001618  C0E2  F0DA         	movff	___tmul@product,?___tmul
  6317  00161C  C0E3  F0DB         	movff	___tmul@product+1,?___tmul+1
  6318  001620  C0E4  F0DC         	movff	___tmul@product+2,?___tmul+2
  6319                           
  6320                           ; BSR set to: 0
  6321  001624  0012               	return	
  6322  001626                     __end_of___tmul:
  6323                           	opt stack 0
  6324                           tblptru	equ	0xFF8
  6325                           tblptrh	equ	0xFF7
  6326                           tblptrl	equ	0xFF6
  6327                           tablat	equ	0xFF5
  6328                           prodh	equ	0xFF4
  6329                           prodl	equ	0xFF3
  6330                           intcon	equ	0xFF2
  6331                           intcon2	equ	0xFF1
  6332                           intcon3	equ	0xFF0
  6333                           postinc0	equ	0xFEE
  6334                           wreg	equ	0xFE8
  6335                           postdec1	equ	0xFE5
  6336                           fsr1l	equ	0xFE1
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           fsr2h	equ	0xFDA
  6341                           fsr2l	equ	0xFD9
  6342                           status	equ	0xFD8
  6343                           
  6344 ;; *************** function _low_isr *****************
  6345 ;; Defined at:
  6346 ;;		line 441 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;		None               void
  6353 ;; Registers used:
  6354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;Total ram usage:       13 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    9
  6367 ;; This function calls:
  6368 ;;		_ADCread
  6369 ;;		_Set_ADC_MAP
  6370 ;;		_Set_TPS_MAP
  6371 ;;		_Spark2
  6372 ;;		_Sync
  6373 ;;		_TMR0Event
  6374 ;; This function is called by:
  6375 ;;		Interrupt level 1
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	intcodelo
  6380  000018                     __pintcodelo:
  6381                           	opt stack 0
  6382  000018                     _low_isr:
  6383                           	opt stack 16
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;incstack = 0
  6387  000018  CFD8 F01C          	movff	status,??_low_isr
  6388  00001C  CFE8 F01D          	movff	wreg,??_low_isr+1
  6389  000020  CFE0 F01E          	movff	bsr,??_low_isr+2
  6390  000024  CFE1 F01F          	movff	fsr1l,??_low_isr+3
  6391  000028  CFE2 F020          	movff	fsr1h,??_low_isr+4
  6392  00002C  CFD9 F021          	movff	fsr2l,??_low_isr+5
  6393  000030  CFDA F022          	movff	fsr2h,??_low_isr+6
  6394  000034  CFF3 F023          	movff	prodl,??_low_isr+7
  6395  000038  CFF4 F024          	movff	prodh,??_low_isr+8
  6396  00003C  CFF6 F025          	movff	tblptrl,??_low_isr+9
  6397  000040  CFF7 F026          	movff	tblptrh,??_low_isr+10
  6398  000044  CFF8 F027          	movff	tblptru,??_low_isr+11
  6399  000048  CFF5 F028          	movff	tablat,??_low_isr+12
  6400                           
  6401                           ;main.c: 443: if (INT1IF) {INT1IF=0;Spark2();}
  6402  00004C  A0F0               	btfss	intcon3,0,c	;volatile
  6403  00004E  D003               	goto	i1l4260
  6404  000050  90F0               	bcf	intcon3,0,c	;volatile
  6405  000052  ECC7  F00D         	call	_Spark2	;wreg free
  6406  000056                     i1l4260:
  6407                           
  6408                           ;main.c: 445: if (T0IF) {T0IF=0;TMR0Event();}
  6409  000056  A4F2               	btfss	intcon,2,c	;volatile
  6410  000058  D003               	goto	i1l4266
  6411  00005A  94F2               	bcf	intcon,2,c	;volatile
  6412  00005C  ECFA  F006         	call	_TMR0Event	;wreg free
  6413  000060                     i1l4266:
  6414                           
  6415                           ;main.c: 447: if (RCIF) {RCIF=0; if (Flag_Send_data=0){Byte_resieve=RCREG; Flag_UART_rec
      +                          ieved=1;} }
  6416  000060  AA9E               	btfss	3998,5,c	;volatile
  6417  000062  D008               	goto	i1l4274
  6418  000064  9A9E               	bcf	3998,5,c	;volatile
  6419  000066  0100               	movlb	(_Flag_Send_data/(0+8)) shr (0+8)
  6420  000068  9C4B               	bcf	_Flag_Send_data/(0+8),_Flag_Send_data& (0+7),c	;volatile
  6421  00006A  AC4B               	btfss	_Flag_Send_data/(0+8),_Flag_Send_data& (0+7),c	;volatile
  6422  00006C  D003               	goto	i1l4274
  6423  00006E  50AE               	movf	4014,w,c	;volatile
  6424  000070  0100               	movlb	(_Flag_UART_recieved/(0+8)) shr (0+8)
  6425  000072  804C               	bsf	_Flag_UART_recieved/(0+8),_Flag_UART_recieved& (0+7),c	;volatile
  6426  000074                     i1l4274:
  6427                           
  6428                           ;main.c: 449: if (ADIF && ADIE) {ADIF=0;ADCread();}
  6429  000074  BC9E               	btfsc	3998,6,c	;volatile
  6430  000076  AC9D               	btfss	3997,6,c	;volatile
  6431  000078  D003               	goto	i1l4282
  6432  00007A  9C9E               	bcf	3998,6,c	;volatile
  6433  00007C  EC6C  F000         	call	_ADCread	;wreg free
  6434  000080                     i1l4282:
  6435                           
  6436                           ;main.c: 450: if (INT2IF) {INT2IF=0;Sync();}
  6437  000080  A2F0               	btfss	intcon3,1,c	;volatile
  6438  000082  D003               	goto	i1l4288
  6439  000084  92F0               	bcf	intcon3,1,c	;volatile
  6440  000086  ECBE  F00E         	call	_Sync	;wreg free
  6441  00008A                     i1l4288:
  6442                           
  6443                           ;main.c: 451: if (C1IF) {C1IF=0;Set_ADC_MAP();}
  6444  00008A  ACA1               	btfss	4001,6,c	;volatile
  6445  00008C  D003               	goto	i1l4294
  6446  00008E  9CA1               	bcf	4001,6,c	;volatile
  6447  000090  EC77  F00E         	call	_Set_ADC_MAP	;wreg free
  6448  000094                     i1l4294:
  6449                           
  6450                           ;main.c: 452: if (C2IF) {C2IF=0;Set_TPS_MAP();}
  6451  000094  AAA1               	btfss	4001,5,c	;volatile
  6452  000096  D003               	goto	i1l526
  6453  000098  9AA1               	bcf	4001,5,c	;volatile
  6454  00009A  EC6D  F00E         	call	_Set_TPS_MAP	;wreg free
  6455  00009E                     i1l526:
  6456  00009E  C028  FFF5         	movff	??_low_isr+12,tablat
  6457  0000A2  C027  FFF8         	movff	??_low_isr+11,tblptru
  6458  0000A6  C026  FFF7         	movff	??_low_isr+10,tblptrh
  6459  0000AA  C025  FFF6         	movff	??_low_isr+9,tblptrl
  6460  0000AE  C024  FFF4         	movff	??_low_isr+8,prodh
  6461  0000B2  C023  FFF3         	movff	??_low_isr+7,prodl
  6462  0000B6  C022  FFDA         	movff	??_low_isr+6,fsr2h
  6463  0000BA  C021  FFD9         	movff	??_low_isr+5,fsr2l
  6464  0000BE  C020  FFE2         	movff	??_low_isr+4,fsr1h
  6465  0000C2  C01F  FFE1         	movff	??_low_isr+3,fsr1l
  6466  0000C6  C01E  FFE0         	movff	??_low_isr+2,bsr
  6467  0000CA  C01D  FFE8         	movff	??_low_isr+1,wreg
  6468  0000CE  C01C  FFD8         	movff	??_low_isr,status
  6469  0000D2  0010               	retfie	
  6470  0000D4                     __end_of_low_isr:
  6471                           	opt stack 0
  6472                           tblptru	equ	0xFF8
  6473                           tblptrh	equ	0xFF7
  6474                           tblptrl	equ	0xFF6
  6475                           tablat	equ	0xFF5
  6476                           prodh	equ	0xFF4
  6477                           prodl	equ	0xFF3
  6478                           intcon	equ	0xFF2
  6479                           intcon2	equ	0xFF1
  6480                           intcon3	equ	0xFF0
  6481                           postinc0	equ	0xFEE
  6482                           wreg	equ	0xFE8
  6483                           postdec1	equ	0xFE5
  6484                           fsr1h	equ	0xFE2
  6485                           fsr1l	equ	0xFE1
  6486                           bsr	equ	0xFE0
  6487                           indf2	equ	0xFDF
  6488                           postinc2	equ	0xFDE
  6489                           postdec2	equ	0xFDD
  6490                           fsr2h	equ	0xFDA
  6491                           fsr2l	equ	0xFD9
  6492                           status	equ	0xFD8
  6493                           
  6494 ;; *************** function _TMR0Event *****************
  6495 ;; Defined at:
  6496 ;;		line 164 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;		None
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;		None               void
  6503 ;; Registers used:
  6504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : F/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;Total ram usage:        2 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    7
  6517 ;; This function calls:
  6518 ;;		_Motor_stopped
  6519 ;;		_SMA_filter
  6520 ;; This function is called by:
  6521 ;;		_low_isr
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text26
  6526  000DF4                     __ptext26:
  6527                           	opt stack 0
  6528  000DF4                     _TMR0Event:
  6529                           	opt stack 17
  6530                           
  6531                           ;main.c: 165: TMR0H = 0x00;TMR0L = 0x60;
  6532                           
  6533                           ;incstack = 0
  6534  000DF4  6AD7               	clrf	4055,c	;volatile
  6535  000DF6  0E60               	movlw	96
  6536  000DF8  6ED6               	movwf	4054,c	;volatile
  6537                           
  6538                           ;main.c: 166: static int TXdelay, mckc, ADCdelay,STPdelay,Cdelay;
  6539                           ;main.c: 167: if (TXdelay==0){TXdelay=100;Flag_Send_data=1;} else {TXdelay--;}
  6540  000DFA  5030               	movf	TMR0Event@TXdelay+1,w,c
  6541  000DFC  102F               	iorwf	TMR0Event@TXdelay,w,c
  6542  000DFE  E106               	bnz	i1l3706
  6543  000E00  6A30               	clrf	TMR0Event@TXdelay+1,c
  6544  000E02  0E64               	movlw	100
  6545  000E04  6E2F               	movwf	TMR0Event@TXdelay,c
  6546  000E06  0100               	movlb	(_Flag_Send_data/(0+8)) shr (0+8)
  6547  000E08  8C4B               	bsf	_Flag_Send_data/(0+8),_Flag_Send_data& (0+7),c	;volatile
  6548  000E0A  D003               	goto	i1l3708
  6549  000E0C                     i1l3706:
  6550  000E0C  062F               	decf	TMR0Event@TXdelay,f,c
  6551  000E0E  A0D8               	btfss	status,0,c
  6552  000E10  0630               	decf	TMR0Event@TXdelay+1,f,c
  6553  000E12                     i1l3708:
  6554                           
  6555                           ;main.c: 168: if (PUMPCounter>=1600){PUMPCounter=0;LD0=0;Motor_stopped();} else {PUMPCou
      +                          nter++;}
  6556  000E12  0E40               	movlw	64
  6557  000E14  5C39               	subwf	_PUMPCounter,w,c	;volatile
  6558  000E16  0E06               	movlw	6
  6559  000E18  583A               	subwfb	_PUMPCounter+1,w,c	;volatile
  6560  000E1A  E306               	bnc	i1l3714
  6561  000E1C  6A39               	clrf	_PUMPCounter,c	;volatile
  6562  000E1E  6A3A               	clrf	_PUMPCounter+1,c	;volatile
  6563  000E20  908C               	bcf	3980,0,c	;volatile
  6564  000E22  ECB0  F00D         	call	_Motor_stopped	;wreg free
  6565  000E26  D002               	goto	i1l3716
  6566  000E28                     i1l3714:
  6567  000E28  4A39               	infsnz	_PUMPCounter,f,c	;volatile
  6568  000E2A  2A3A               	incf	_PUMPCounter+1,f,c	;volatile
  6569  000E2C                     i1l3716:
  6570                           
  6571                           ;main.c: 169: if (STPdelay<=0){Flag_IAC=1;STPdelay=3;} else {STPdelay--;}
  6572  000E2C  502E               	movf	TMR0Event@STPdelay+1,w,c
  6573  000E2E  0A80               	xorlw	128
  6574  000E30  6EF3               	movwf	prodl,c
  6575  000E32  0E80               	movlw	128
  6576  000E34  5CF3               	subwf	prodl,w,c
  6577  000E36  0E01               	movlw	1
  6578  000E38  B4D8               	btfsc	status,2,c
  6579  000E3A  5C2D               	subwf	TMR0Event@STPdelay,w,c
  6580  000E3C  E205               	bc	i1l3722
  6581  000E3E  864B               	bsf	_Flag_IAC/(0+8),_Flag_IAC& (0+7),c	;volatile
  6582  000E40  6A2E               	clrf	TMR0Event@STPdelay+1,c
  6583  000E42  0E03               	movlw	3
  6584  000E44  6E2D               	movwf	TMR0Event@STPdelay,c
  6585  000E46  D003               	goto	i1l3724
  6586  000E48                     i1l3722:
  6587  000E48  062D               	decf	TMR0Event@STPdelay,f,c
  6588  000E4A  A0D8               	btfss	status,0,c
  6589  000E4C  062E               	decf	TMR0Event@STPdelay+1,f,c
  6590  000E4E                     i1l3724:
  6591                           
  6592                           ;main.c: 170: if (ADCdelay<=0){Flag_setADC_chenal=1;ADCdelay=15;} else {ADCdelay--;}
  6593  000E4E  502A               	movf	TMR0Event@ADCdelay+1,w,c
  6594  000E50  0A80               	xorlw	128
  6595  000E52  6EF3               	movwf	prodl,c
  6596  000E54  0E80               	movlw	128
  6597  000E56  5CF3               	subwf	prodl,w,c
  6598  000E58  0E01               	movlw	1
  6599  000E5A  B4D8               	btfsc	status,2,c
  6600  000E5C  5C29               	subwf	TMR0Event@ADCdelay,w,c
  6601  000E5E  E205               	bc	i1l3730
  6602  000E60  824C               	bsf	_Flag_setADC_chenal/(0+8),_Flag_setADC_chenal& (0+7),c	;volatile
  6603  000E62  6A2A               	clrf	TMR0Event@ADCdelay+1,c
  6604  000E64  0E0F               	movlw	15
  6605  000E66  6E29               	movwf	TMR0Event@ADCdelay,c
  6606  000E68  D003               	goto	i1l3732
  6607  000E6A                     i1l3730:
  6608  000E6A  0629               	decf	TMR0Event@ADCdelay,f,c
  6609  000E6C  A0D8               	btfss	status,0,c
  6610  000E6E  062A               	decf	TMR0Event@ADCdelay+1,f,c
  6611  000E70                     i1l3732:
  6612                           
  6613                           ;main.c: 171: if (mckc<=0){Flag_Sec_Clock=1;mckc=784;} else {mckc--;}
  6614  000E70  5032               	movf	TMR0Event@mckc+1,w,c
  6615  000E72  0A80               	xorlw	128
  6616  000E74  6EF3               	movwf	prodl,c
  6617  000E76  0E80               	movlw	128
  6618  000E78  5CF3               	subwf	prodl,w,c
  6619  000E7A  0E01               	movlw	1
  6620  000E7C  B4D8               	btfsc	status,2,c
  6621  000E7E  5C31               	subwf	TMR0Event@mckc,w,c
  6622  000E80  E206               	bc	i1l3738
  6623  000E82  8A4B               	bsf	_Flag_Sec_Clock/(0+8),_Flag_Sec_Clock& (0+7),c	;volatile
  6624  000E84  0E03               	movlw	3
  6625  000E86  6E32               	movwf	TMR0Event@mckc+1,c
  6626  000E88  0E10               	movlw	16
  6627  000E8A  6E31               	movwf	TMR0Event@mckc,c
  6628  000E8C  D003               	goto	i1l3740
  6629  000E8E                     i1l3738:
  6630  000E8E  0631               	decf	TMR0Event@mckc,f,c
  6631  000E90  A0D8               	btfss	status,0,c
  6632  000E92  0632               	decf	TMR0Event@mckc+1,f,c
  6633  000E94                     i1l3740:
  6634                           
  6635                           ;main.c: 172: if (Cdelay<=0){Flag_Corr_equal=1;Cdelay=50;} else {Cdelay--;}
  6636  000E94  502C               	movf	TMR0Event@Cdelay+1,w,c
  6637  000E96  0A80               	xorlw	128
  6638  000E98  6EF3               	movwf	prodl,c
  6639  000E9A  0E80               	movlw	128
  6640  000E9C  5CF3               	subwf	prodl,w,c
  6641  000E9E  0E01               	movlw	1
  6642  000EA0  B4D8               	btfsc	status,2,c
  6643  000EA2  5C2B               	subwf	TMR0Event@Cdelay,w,c
  6644  000EA4  E205               	bc	i1l3746
  6645  000EA6  804B               	bsf	_Flag_Corr_equal/(0+8),_Flag_Corr_equal& (0+7),c	;volatile
  6646  000EA8  6A2C               	clrf	TMR0Event@Cdelay+1,c
  6647  000EAA  0E32               	movlw	50
  6648  000EAC  6E2B               	movwf	TMR0Event@Cdelay,c
  6649  000EAE  D003               	goto	i1l3748
  6650  000EB0                     i1l3746:
  6651  000EB0  062B               	decf	TMR0Event@Cdelay,f,c
  6652  000EB2  A0D8               	btfss	status,0,c
  6653  000EB4  062C               	decf	TMR0Event@Cdelay+1,f,c
  6654  000EB6                     i1l3748:
  6655                           
  6656                           ;main.c: 173: ECU.reserv2=SMA_filter(LoadCounter,Load_array)>>1;LoadCounter=0;
  6657  000EB6  C037  F003         	movff	_LoadCounter,SMA_filter@a	;volatile
  6658  000EBA  C038  F004         	movff	_LoadCounter+1,SMA_filter@a+1	;volatile
  6659  000EBE  0100               	movlb	0	; () banked
  6660  000EC0  0EAF               	movlw	low _Load_array
  6661  000EC2  6E05               	movwf	SMA_filter@Massive,c
  6662  000EC4  EC95  F008         	call	_SMA_filter	;wreg free
  6663  000EC8  3404               	rlcf	?_SMA_filter+1,w,c
  6664  000ECA  3004               	rrcf	?_SMA_filter+1,w,c
  6665  000ECC  6E0B               	movwf	(??_TMR0Event+1)& (0+255),c
  6666  000ECE  3003               	rrcf	?_SMA_filter,w,c
  6667  000ED0  6E0A               	movwf	??_TMR0Event& (0+255),c
  6668  000ED2  500A               	movf	??_TMR0Event,w,c
  6669  000ED4  6F84               	movwf	(_ECU+31)& (0+255),b	;volatile
  6670                           
  6671                           ; BSR set to: 0
  6672  000ED6  6A37               	clrf	_LoadCounter,c	;volatile
  6673  000ED8  6A38               	clrf	_LoadCounter+1,c	;volatile
  6674                           
  6675                           ; BSR set to: 0
  6676  000EDA  0012               	return	
  6677  000EDC                     __end_of_TMR0Event:
  6678                           	opt stack 0
  6679                           tblptru	equ	0xFF8
  6680                           tblptrh	equ	0xFF7
  6681                           tblptrl	equ	0xFF6
  6682                           tablat	equ	0xFF5
  6683                           prodh	equ	0xFF4
  6684                           prodl	equ	0xFF3
  6685                           intcon	equ	0xFF2
  6686                           intcon2	equ	0xFF1
  6687                           intcon3	equ	0xFF0
  6688                           postinc0	equ	0xFEE
  6689                           wreg	equ	0xFE8
  6690                           postdec1	equ	0xFE5
  6691                           fsr1h	equ	0xFE2
  6692                           fsr1l	equ	0xFE1
  6693                           bsr	equ	0xFE0
  6694                           indf2	equ	0xFDF
  6695                           postinc2	equ	0xFDE
  6696                           postdec2	equ	0xFDD
  6697                           fsr2h	equ	0xFDA
  6698                           fsr2l	equ	0xFD9
  6699                           status	equ	0xFD8
  6700                           
  6701 ;; *************** function _Motor_stopped *****************
  6702 ;; Defined at:
  6703 ;;		line 152 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;		None
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;		None               void
  6710 ;; Registers used:
  6711 ;;		None
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;Total ram usage:        0 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:    6
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_TMR0Event
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text27
  6732  001B60                     __ptext27:
  6733                           	opt stack 0
  6734  001B60                     _Motor_stopped:
  6735                           	opt stack 17
  6736                           
  6737                           ;main.c: 154: ECU.RPM=0;ECU.Mtr_On=0;ECU.AFSTEN=1;Flag_Speed_equal=0;
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;incstack = 0
  6741  001B60  0100               	movlb	0	; () banked
  6742  001B62  6B72               	clrf	(_ECU+13)& (0+255),b	;volatile
  6743  001B64  9169               	bcf	(_ECU+4)& (0+255),0,b	;volatile
  6744  001B66  8F69               	bsf	(_ECU+4)& (0+255),7,b	;volatile
  6745  001B68  9E4B               	bcf	_Flag_Speed_equal/(0+8),_Flag_Speed_equal& (0+7),c	;volatile
  6746                           
  6747                           ;main.c: 155: ECU.Accel=0;ECU.D_Accel=0;ECU.Econ=0;ECU.EMR=0;
  6748  001B6A  9769               	bcf	(_ECU+4)& (0+255),3,b	;volatile
  6749  001B6C  9969               	bcf	(_ECU+4)& (0+255),4,b	;volatile
  6750  001B6E  9B69               	bcf	(_ECU+4)& (0+255),5,b	;volatile
  6751  001B70  9D69               	bcf	(_ECU+4)& (0+255),6,b	;volatile
  6752                           
  6753                           ;main.c: 156: LD2=0;ECU.SeqINJ=0;
  6754  001B72  948C               	bcf	3980,2,c	;volatile
  6755  001B74  957F               	bcf	(_ECU+26)& (0+255),2,b	;volatile
  6756                           
  6757                           ;main.c: 157: LC0=0;LC1=0;LC2=0;LC3=0;LC4=0;LC5=0;
  6758  001B76  908B               	bcf	3979,0,c	;volatile
  6759  001B78  928B               	bcf	3979,1,c	;volatile
  6760  001B7A  948B               	bcf	3979,2,c	;volatile
  6761  001B7C  968B               	bcf	3979,3,c	;volatile
  6762  001B7E  988B               	bcf	3979,4,c	;volatile
  6763  001B80  9A8B               	bcf	3979,5,c	;volatile
  6764                           
  6765                           ;main.c: 158: LD3=0;
  6766  001B82  968C               	bcf	3980,3,c	;volatile
  6767                           
  6768                           ;main.c: 159: if (ECU.Mtr_On){ECU.COMP=1;}
  6769  001B84  B169               	btfsc	(_ECU+4)& (0+255),0,b	;volatile
  6770                           
  6771                           ; BSR set to: 0
  6772  001B86  876A               	bsf	(_ECU+5)& (0+255),3,b	;volatile
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;main.c: 160: Flag_Init_Pos=1;
  6776  001B88  0100               	movlb	(_Flag_Init_Pos/(0+8)) shr (0+8)
  6777  001B8A  884B               	bsf	_Flag_Init_Pos/(0+8),_Flag_Init_Pos& (0+7),c	;volatile
  6778  001B8C  0012               	return	
  6779  001B8E                     __end_of_Motor_stopped:
  6780                           	opt stack 0
  6781                           tblptru	equ	0xFF8
  6782                           tblptrh	equ	0xFF7
  6783                           tblptrl	equ	0xFF6
  6784                           tablat	equ	0xFF5
  6785                           prodh	equ	0xFF4
  6786                           prodl	equ	0xFF3
  6787                           intcon	equ	0xFF2
  6788                           intcon2	equ	0xFF1
  6789                           intcon3	equ	0xFF0
  6790                           postinc0	equ	0xFEE
  6791                           wreg	equ	0xFE8
  6792                           postdec1	equ	0xFE5
  6793                           fsr1h	equ	0xFE2
  6794                           fsr1l	equ	0xFE1
  6795                           bsr	equ	0xFE0
  6796                           indf2	equ	0xFDF
  6797                           postinc2	equ	0xFDE
  6798                           postdec2	equ	0xFDD
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function _Sync *****************
  6804 ;; Defined at:
  6805 ;;		line 322 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;		None
  6810 ;; Return value:  Size  Location     Type
  6811 ;;		None               void
  6812 ;; Registers used:
  6813 ;;		None
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;Total ram usage:        0 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    6
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_low_isr
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text28
  6834  001D7C                     __ptext28:
  6835                           	opt stack 0
  6836  001D7C                     _Sync:
  6837                           	opt stack 18
  6838                           
  6839                           ;incstack = 0
  6840  001D7C  0012               	return	
  6841  001D7E                     __end_of_Sync:
  6842                           	opt stack 0
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           intcon	equ	0xFF2
  6850                           intcon2	equ	0xFF1
  6851                           intcon3	equ	0xFF0
  6852                           postinc0	equ	0xFEE
  6853                           wreg	equ	0xFE8
  6854                           postdec1	equ	0xFE5
  6855                           fsr1h	equ	0xFE2
  6856                           fsr1l	equ	0xFE1
  6857                           bsr	equ	0xFE0
  6858                           indf2	equ	0xFDF
  6859                           postinc2	equ	0xFDE
  6860                           postdec2	equ	0xFDD
  6861                           fsr2h	equ	0xFDA
  6862                           fsr2l	equ	0xFD9
  6863                           status	equ	0xFD8
  6864                           
  6865 ;; *************** function _Spark2 *****************
  6866 ;; Defined at:
  6867 ;;		line 318 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;		None
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;		None
  6872 ;; Return value:  Size  Location     Type
  6873 ;;		None               void
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;Total ram usage:        0 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    7
  6888 ;; This function calls:
  6889 ;;		_OpenECompare3
  6890 ;;		___lwdiv
  6891 ;; This function is called by:
  6892 ;;		_low_isr
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text29
  6897  001B8E                     __ptext29:
  6898                           	opt stack 0
  6899  001B8E                     _Spark2:
  6900                           	opt stack 17
  6901                           
  6902                           ;main.c: 320: if (ECU.Mtr_On==0) {LD3=1;} else {OpenECompare3(0b11111010&0b11001111&0b11
      +                          111111, TMR1+(TMRC/10));}
  6903                           
  6904                           ;incstack = 0
  6905  001B8E  0100               	movlb	0	; () banked
  6906  001B90  B169               	btfsc	(_ECU+4)& (0+255),0,b	;volatile
  6907  001B92  D002               	goto	i1l3922
  6908                           
  6909                           ; BSR set to: 0
  6910  001B94  868C               	bsf	3980,3,c	;volatile
  6911  001B96  0012               	return	
  6912  001B98                     i1l3922:
  6913                           
  6914                           ; BSR set to: 0
  6915  001B98  C03B  F001         	movff	_TMRC,___lwdiv@dividend	;volatile
  6916  001B9C  C03C  F002         	movff	_TMRC+1,___lwdiv@dividend+1	;volatile
  6917  001BA0  6A04               	clrf	___lwdiv@divisor+1,c
  6918  001BA2  0E0A               	movlw	10
  6919  001BA4  6E03               	movwf	___lwdiv@divisor,c
  6920  001BA6  ECBE  F00C         	call	___lwdiv	;wreg free
  6921  001BAA  50CE               	movf	4046,w,c	;volatile
  6922  001BAC  2401               	addwf	?___lwdiv,w,c
  6923  001BAE  6E08               	movwf	OpenECompare3@period,c
  6924  001BB0  50CF               	movf	4047,w,c	;volatile
  6925  001BB2  2002               	addwfc	?___lwdiv+1,w,c
  6926  001BB4  6E09               	movwf	OpenECompare3@period+1,c
  6927  001BB6  0ECA               	movlw	202
  6928  001BB8  EF37  F009         	goto	_OpenECompare3
  6929  001BBC                     __end_of_Spark2:
  6930                           	opt stack 0
  6931                           tblptru	equ	0xFF8
  6932                           tblptrh	equ	0xFF7
  6933                           tblptrl	equ	0xFF6
  6934                           tablat	equ	0xFF5
  6935                           prodh	equ	0xFF4
  6936                           prodl	equ	0xFF3
  6937                           intcon	equ	0xFF2
  6938                           intcon2	equ	0xFF1
  6939                           intcon3	equ	0xFF0
  6940                           postinc0	equ	0xFEE
  6941                           wreg	equ	0xFE8
  6942                           postdec1	equ	0xFE5
  6943                           fsr1h	equ	0xFE2
  6944                           fsr1l	equ	0xFE1
  6945                           bsr	equ	0xFE0
  6946                           indf2	equ	0xFDF
  6947                           postinc2	equ	0xFDE
  6948                           postdec2	equ	0xFDD
  6949                           fsr2h	equ	0xFDA
  6950                           fsr2l	equ	0xFD9
  6951                           status	equ	0xFD8
  6952                           
  6953 ;; *************** function ___lwdiv *****************
  6954 ;; Defined at:
  6955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  dividend        2    0[COMRAM] unsigned int 
  6958 ;;  divisor         2    2[COMRAM] unsigned int 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  quotient        2    4[COMRAM] unsigned int 
  6961 ;;  counter         1    6[COMRAM] unsigned char 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  2    0[COMRAM] unsigned int 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0
  6966 ;; Tracked objects:
  6967 ;;		On entry : F/0
  6968 ;;		On exit  : F/0
  6969 ;;		Unchanged: F/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6972 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;Total ram usage:        7 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    6
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_Spark2
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text30
  6986  00197C                     __ptext30:
  6987                           	opt stack 0
  6988  00197C                     ___lwdiv:
  6989                           	opt stack 17
  6990                           
  6991                           ; BSR set to: 0
  6992                           
  6993                           ;incstack = 0
  6994  00197C  6A05               	clrf	___lwdiv@quotient,c
  6995  00197E  6A06               	clrf	___lwdiv@quotient+1,c
  6996                           
  6997                           ; BSR set to: 0
  6998  001980  5004               	movf	___lwdiv@divisor+1,w,c
  6999  001982  1003               	iorwf	___lwdiv@divisor,w,c
  7000  001984  E01B               	bz	i1l1491
  7001                           
  7002                           ; BSR set to: 0
  7003  001986  0E01               	movlw	1
  7004  001988  6E07               	movwf	___lwdiv@counter,c
  7005  00198A  D004               	goto	i1l3454
  7006  00198C                     i1l3452:
  7007                           
  7008                           ; BSR set to: 0
  7009  00198C  90D8               	bcf	status,0,c
  7010  00198E  3603               	rlcf	___lwdiv@divisor,f,c
  7011  001990  3604               	rlcf	___lwdiv@divisor+1,f,c
  7012  001992  2A07               	incf	___lwdiv@counter,f,c
  7013  001994                     i1l3454:
  7014                           
  7015                           ; BSR set to: 0
  7016  001994  AE04               	btfss	___lwdiv@divisor+1,7,c
  7017  001996  D7FA               	goto	i1l3452
  7018  001998                     i1l3456:
  7019                           
  7020                           ; BSR set to: 0
  7021  001998  90D8               	bcf	status,0,c
  7022  00199A  3605               	rlcf	___lwdiv@quotient,f,c
  7023  00199C  3606               	rlcf	___lwdiv@quotient+1,f,c
  7024                           
  7025                           ; BSR set to: 0
  7026  00199E  5003               	movf	___lwdiv@divisor,w,c
  7027  0019A0  5C01               	subwf	___lwdiv@dividend,w,c
  7028  0019A2  5004               	movf	___lwdiv@divisor+1,w,c
  7029  0019A4  5802               	subwfb	___lwdiv@dividend+1,w,c
  7030  0019A6  E305               	bnc	i1l3464
  7031                           
  7032                           ; BSR set to: 0
  7033  0019A8  5003               	movf	___lwdiv@divisor,w,c
  7034  0019AA  5E01               	subwf	___lwdiv@dividend,f,c
  7035  0019AC  5004               	movf	___lwdiv@divisor+1,w,c
  7036  0019AE  5A02               	subwfb	___lwdiv@dividend+1,f,c
  7037                           
  7038                           ; BSR set to: 0
  7039  0019B0  8005               	bsf	___lwdiv@quotient,0,c
  7040  0019B2                     i1l3464:
  7041                           
  7042                           ; BSR set to: 0
  7043  0019B2  90D8               	bcf	status,0,c
  7044  0019B4  3204               	rrcf	___lwdiv@divisor+1,f,c
  7045  0019B6  3203               	rrcf	___lwdiv@divisor,f,c
  7046                           
  7047                           ; BSR set to: 0
  7048  0019B8  2E07               	decfsz	___lwdiv@counter,f,c
  7049  0019BA  D7EE               	goto	i1l3456
  7050  0019BC                     i1l1491:
  7051                           
  7052                           ; BSR set to: 0
  7053  0019BC  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7054  0019C0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7055                           
  7056                           ; BSR set to: 0
  7057  0019C4  0012               	return	
  7058  0019C6                     __end_of___lwdiv:
  7059                           	opt stack 0
  7060                           tblptru	equ	0xFF8
  7061                           tblptrh	equ	0xFF7
  7062                           tblptrl	equ	0xFF6
  7063                           tablat	equ	0xFF5
  7064                           prodh	equ	0xFF4
  7065                           prodl	equ	0xFF3
  7066                           intcon	equ	0xFF2
  7067                           intcon2	equ	0xFF1
  7068                           intcon3	equ	0xFF0
  7069                           postinc0	equ	0xFEE
  7070                           wreg	equ	0xFE8
  7071                           postdec1	equ	0xFE5
  7072                           fsr1h	equ	0xFE2
  7073                           fsr1l	equ	0xFE1
  7074                           bsr	equ	0xFE0
  7075                           indf2	equ	0xFDF
  7076                           postinc2	equ	0xFDE
  7077                           postdec2	equ	0xFDD
  7078                           fsr2h	equ	0xFDA
  7079                           fsr2l	equ	0xFD9
  7080                           status	equ	0xFD8
  7081                           
  7082 ;; *************** function _OpenECompare3 *****************
  7083 ;; Defined at:
  7084 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\CMP\em3open.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  config          1    wreg     unsigned char 
  7087 ;;  period          2    7[COMRAM] unsigned int 
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;  config          1   12[COMRAM] unsigned char 
  7090 ;; Return value:  Size  Location     Type
  7091 ;;		None               void
  7092 ;; Registers used:
  7093 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7094 ;; Tracked objects:
  7095 ;;		On entry : F/0
  7096 ;;		On exit  : F/F
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;Total ram usage:        6 bytes
  7104 ;; Hardware stack levels used:    1
  7105 ;; Hardware stack levels required when called:    6
  7106 ;; This function calls:
  7107 ;;		Nothing
  7108 ;; This function is called by:
  7109 ;;		_Spark2
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text31
  7114  00126E                     __ptext31:
  7115                           	opt stack 0
  7116  00126E                     _OpenECompare3:
  7117                           	opt stack 17
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;incstack = 0
  7121                           ;OpenECompare3@config stored from wreg
  7122  00126E  6E0D               	movwf	OpenECompare3@config,c
  7123                           
  7124                           ; BSR set to: 0
  7125  001270  0E05               	movlw	5
  7126  001272  6EF6               	movwf	tblptrl,c
  7127  001274                     	if	1	;There is more than 1 active tblptr byte
  7128  001274  6AF7               	clrf	tblptrh,c
  7129  001276                     	endif
  7130  001276                     	if	1	;There are 3 active tblptr bytes
  7131  001276  0E30               	movlw	48
  7132  001278  6EF8               	movwf	tblptru,c
  7133  00127A                     	endif
  7134  00127A  0008               	tblrd		*
  7135  00127C  CFF5 F00A          	movff	tablat,??_OpenECompare3
  7136  001280  A00A               	btfss	??_OpenECompare3,0,c
  7137  001282  D01B               	goto	i1l926
  7138                           
  7139                           ; BSR set to: 0
  7140  001284  CF66 F00A          	movff	3942,??_OpenECompare3	;volatile
  7141  001288  0E0F               	movlw	15
  7142  00128A  160A               	andwf	??_OpenECompare3,f,c
  7143  00128C  500A               	movf	??_OpenECompare3,w,c
  7144  00128E  0A0A               	xorlw	10
  7145  001290  E002               	bz	i1l3352
  7146                           
  7147                           ; BSR set to: 0
  7148  001292  9A93               	bcf	3987,5,c	;volatile
  7149  001294  D012               	goto	i1l926
  7150  001296                     i1l3352:
  7151                           
  7152                           ; BSR set to: 0
  7153  001296  0E05               	movlw	5
  7154  001298  6EF6               	movwf	tblptrl,c
  7155  00129A                     	if	1	;There is more than 1 active tblptr byte
  7156  00129A  6AF7               	clrf	tblptrh,c
  7157  00129C                     	endif
  7158  00129C                     	if	1	;There are 3 active tblptr bytes
  7159  00129C  0E30               	movlw	48
  7160  00129E  6EF8               	movwf	tblptru,c
  7161  0012A0                     	endif
  7162  0012A0  0008               	tblrd		*
  7163  0012A2  CFF5 F00A          	movff	tablat,??_OpenECompare3
  7164  0012A6  A40A               	btfss	??_OpenECompare3,2,c
  7165  0012A8  D008               	goto	i1l926
  7166                           
  7167                           ; BSR set to: 0
  7168  0012AA  CF66 F00A          	movff	3942,??_OpenECompare3	;volatile
  7169  0012AE  0E0F               	movlw	15
  7170  0012B0  160A               	andwf	??_OpenECompare3,f,c
  7171  0012B2  500A               	movf	??_OpenECompare3,w,c
  7172  0012B4  0A0A               	xorlw	10
  7173  0012B6  A4D8               	btfss	status,2,c
  7174                           
  7175                           ; BSR set to: 0
  7176  0012B8  9096               	bcf	3990,0,c	;volatile
  7177  0012BA                     i1l926:
  7178                           
  7179                           ; BSR set to: 0
  7180  0012BA  C008  FF5E         	movff	OpenECompare3@period,3934	;volatile
  7181                           
  7182                           ; BSR set to: 0
  7183  0012BE  C009  F00A         	movff	OpenECompare3@period+1,??_OpenECompare3
  7184  0012C2  C00A  F00B         	movff	??_OpenECompare3,??_OpenECompare3+1
  7185  0012C6  6A0C               	clrf	(??_OpenECompare3+2)& (0+255),c
  7186  0012C8  500B               	movf	??_OpenECompare3+1,w,c
  7187  0012CA  010F               	movlb	15	; () banked
  7188  0012CC  6F5F               	movwf	95,b	;volatile
  7189                           
  7190                           ; BSR set to: 15
  7191  0012CE  500D               	movf	OpenECompare3@config,w,c
  7192  0012D0  0B0F               	andlw	15
  7193  0012D2  6F5D               	movwf	93,b	;volatile
  7194                           
  7195                           ; BSR set to: 15
  7196  0012D4  0E3F               	movlw	63
  7197  0012D6  1749               	andwf	73,f,b	;volatile
  7198                           
  7199                           ; BSR set to: 15
  7200  0012D8  C00D  F00A         	movff	OpenECompare3@config,??_OpenECompare3
  7201  0012DC  0E30               	movlw	48
  7202  0012DE  160A               	andwf	??_OpenECompare3,f,c
  7203  0012E0  90D8               	bcf	status,0,c
  7204  0012E2  360A               	rlcf	??_OpenECompare3,f,c
  7205  0012E4  90D8               	bcf	status,0,c
  7206  0012E6  340A               	rlcf	??_OpenECompare3,w,c
  7207  0012E8  1349               	iorwf	73,f,b	;volatile
  7208                           
  7209                           ; BSR set to: 15
  7210  0012EA  AE0D               	btfss	OpenECompare3@config,7,c
  7211  0012EC  0012               	return	
  7212                           
  7213                           ; BSR set to: 15
  7214  0012EE  907B               	bcf	3963,0,c	;volatile
  7215  0012F0  807A               	bsf	3962,0,c	;volatile
  7216                           
  7217                           ; BSR set to: 15
  7218  0012F2  0012               	return	
  7219  0012F4                     __end_of_OpenECompare3:
  7220                           	opt stack 0
  7221                           tblptru	equ	0xFF8
  7222                           tblptrh	equ	0xFF7
  7223                           tblptrl	equ	0xFF6
  7224                           tablat	equ	0xFF5
  7225                           prodh	equ	0xFF4
  7226                           prodl	equ	0xFF3
  7227                           intcon	equ	0xFF2
  7228                           intcon2	equ	0xFF1
  7229                           intcon3	equ	0xFF0
  7230                           postinc0	equ	0xFEE
  7231                           wreg	equ	0xFE8
  7232                           postdec1	equ	0xFE5
  7233                           fsr1h	equ	0xFE2
  7234                           fsr1l	equ	0xFE1
  7235                           bsr	equ	0xFE0
  7236                           indf2	equ	0xFDF
  7237                           postinc2	equ	0xFDE
  7238                           postdec2	equ	0xFDD
  7239                           fsr2h	equ	0xFDA
  7240                           fsr2l	equ	0xFD9
  7241                           status	equ	0xFD8
  7242                           
  7243 ;; *************** function _Set_TPS_MAP *****************
  7244 ;; Defined at:
  7245 ;;		line 359 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;		None
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;		None
  7250 ;; Return value:  Size  Location     Type
  7251 ;;		None               void
  7252 ;; Registers used:
  7253 ;;		wreg, status,2, status,0, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7263 ;;Total ram usage:        0 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    7
  7266 ;; This function calls:
  7267 ;;		i1_ConvertADC
  7268 ;;		i1_SetChanADC
  7269 ;; This function is called by:
  7270 ;;		_low_isr
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text32
  7275  001CDA                     __ptext32:
  7276                           	opt stack 0
  7277  001CDA                     _Set_TPS_MAP:
  7278                           	opt stack 17
  7279                           
  7280                           ;main.c: 361: SetChanADC(0b10000111);
  7281                           
  7282                           ; BSR set to: 15
  7283                           ;incstack = 0
  7284  001CDA  0E87               	movlw	135
  7285  001CDC  EC81  F00E         	call	i1_SetChanADC
  7286                           
  7287                           ;main.c: 362: ADIF=0;
  7288  001CE0  9C9E               	bcf	3998,6,c	;volatile
  7289                           
  7290                           ;main.c: 363: _delay((unsigned long)((20)*(64000000/4000000.0)));
  7291  001CE2  0E6A               	movlw	106
  7292  001CE4                     i1u595_27:
  7293  001CE4  2EE8               	decfsz	wreg,f,c
  7294  001CE6  D7FE               	goto	i1u595_27
  7295  001CE8  D000               	nop2		;nop
  7296                           
  7297                           ;main.c: 364: ConvertADC();
  7298  001CEA  EFBC  F00E         	goto	i1_ConvertADC	;wreg free
  7299  001CEE                     __end_of_Set_TPS_MAP:
  7300                           	opt stack 0
  7301                           tblptru	equ	0xFF8
  7302                           tblptrh	equ	0xFF7
  7303                           tblptrl	equ	0xFF6
  7304                           tablat	equ	0xFF5
  7305                           prodh	equ	0xFF4
  7306                           prodl	equ	0xFF3
  7307                           intcon	equ	0xFF2
  7308                           intcon2	equ	0xFF1
  7309                           intcon3	equ	0xFF0
  7310                           postinc0	equ	0xFEE
  7311                           wreg	equ	0xFE8
  7312                           postdec1	equ	0xFE5
  7313                           fsr1h	equ	0xFE2
  7314                           fsr1l	equ	0xFE1
  7315                           bsr	equ	0xFE0
  7316                           indf2	equ	0xFDF
  7317                           postinc2	equ	0xFDE
  7318                           postdec2	equ	0xFDD
  7319                           fsr2h	equ	0xFDA
  7320                           fsr2l	equ	0xFD9
  7321                           status	equ	0xFD8
  7322                           
  7323 ;; *************** function _Set_ADC_MAP *****************
  7324 ;; Defined at:
  7325 ;;		line 352 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;		None
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;		None               void
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0, cstack
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;Total ram usage:        0 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    7
  7346 ;; This function calls:
  7347 ;;		i1_ConvertADC
  7348 ;;		i1_SetChanADC
  7349 ;; This function is called by:
  7350 ;;		_low_isr
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text33
  7355  001CEE                     __ptext33:
  7356                           	opt stack 0
  7357  001CEE                     _Set_ADC_MAP:
  7358                           	opt stack 17
  7359                           
  7360                           ;main.c: 354: SetChanADC(0b10000011);
  7361                           
  7362                           ;incstack = 0
  7363  001CEE  0E83               	movlw	131
  7364  001CF0  EC81  F00E         	call	i1_SetChanADC
  7365                           
  7366                           ;main.c: 355: ADIF=0;
  7367  001CF4  9C9E               	bcf	3998,6,c	;volatile
  7368                           
  7369                           ;main.c: 356: _delay((unsigned long)((20)*(64000000/4000000.0)));
  7370  001CF6  0E6A               	movlw	106
  7371  001CF8                     i1u596_27:
  7372  001CF8  2EE8               	decfsz	wreg,f,c
  7373  001CFA  D7FE               	goto	i1u596_27
  7374  001CFC  D000               	nop2		;nop
  7375                           
  7376                           ;main.c: 357: ConvertADC();
  7377  001CFE  EFBC  F00E         	goto	i1_ConvertADC	;wreg free
  7378  001D02                     __end_of_Set_ADC_MAP:
  7379                           	opt stack 0
  7380                           tblptru	equ	0xFF8
  7381                           tblptrh	equ	0xFF7
  7382                           tblptrl	equ	0xFF6
  7383                           tablat	equ	0xFF5
  7384                           prodh	equ	0xFF4
  7385                           prodl	equ	0xFF3
  7386                           intcon	equ	0xFF2
  7387                           intcon2	equ	0xFF1
  7388                           intcon3	equ	0xFF0
  7389                           postinc0	equ	0xFEE
  7390                           wreg	equ	0xFE8
  7391                           postdec1	equ	0xFE5
  7392                           fsr1h	equ	0xFE2
  7393                           fsr1l	equ	0xFE1
  7394                           bsr	equ	0xFE0
  7395                           indf2	equ	0xFDF
  7396                           postinc2	equ	0xFDE
  7397                           postdec2	equ	0xFDD
  7398                           fsr2h	equ	0xFDA
  7399                           fsr2l	equ	0xFD9
  7400                           status	equ	0xFD8
  7401                           
  7402 ;; *************** function i1_SetChanADC *****************
  7403 ;; Defined at:
  7404 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcsetch.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  channel         1    wreg     unsigned char 
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  channel         1    1[COMRAM] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;		None               void
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7422 ;;Total ram usage:        2 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:    6
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_Set_ADC_MAP
  7429 ;;		_Set_TPS_MAP
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text34
  7434  001D02                     __ptext34:
  7435                           	opt stack 0
  7436  001D02                     i1_SetChanADC:
  7437                           	opt stack 17
  7438                           
  7439                           ;incstack = 0
  7440                           ;i1SetChanADC@channel stored from wreg
  7441  001D02  6E02               	movwf	i1SetChanADC@channel,c
  7442  001D04  C002  F001         	movff	i1SetChanADC@channel,??i1_SetChanADC
  7443  001D08  0E7C               	movlw	124
  7444  001D0A  1601               	andwf	??i1_SetChanADC,f,c
  7445  001D0C  50C2               	movf	4034,w,c	;volatile
  7446  001D0E  0B83               	andlw	131
  7447  001D10  1001               	iorwf	??i1_SetChanADC,w,c
  7448  001D12  6EC2               	movwf	4034,c	;volatile
  7449  001D14  0012               	return	
  7450  001D16                     __end_ofi1_SetChanADC:
  7451                           	opt stack 0
  7452                           tblptru	equ	0xFF8
  7453                           tblptrh	equ	0xFF7
  7454                           tblptrl	equ	0xFF6
  7455                           tablat	equ	0xFF5
  7456                           prodh	equ	0xFF4
  7457                           prodl	equ	0xFF3
  7458                           intcon	equ	0xFF2
  7459                           intcon2	equ	0xFF1
  7460                           intcon3	equ	0xFF0
  7461                           postinc0	equ	0xFEE
  7462                           wreg	equ	0xFE8
  7463                           postdec1	equ	0xFE5
  7464                           fsr1h	equ	0xFE2
  7465                           fsr1l	equ	0xFE1
  7466                           bsr	equ	0xFE0
  7467                           indf2	equ	0xFDF
  7468                           postinc2	equ	0xFDE
  7469                           postdec2	equ	0xFDD
  7470                           fsr2h	equ	0xFDA
  7471                           fsr2l	equ	0xFD9
  7472                           status	equ	0xFD8
  7473                           
  7474 ;; *************** function i1_ConvertADC *****************
  7475 ;; Defined at:
  7476 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcconv.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;		None
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;		None               void
  7483 ;; Registers used:
  7484 ;;		None
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;Total ram usage:        0 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    6
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_Set_ADC_MAP
  7501 ;;		_Set_TPS_MAP
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           	psect	text35
  7506  001D78                     __ptext35:
  7507                           	opt stack 0
  7508  001D78                     i1_ConvertADC:
  7509                           	opt stack 17
  7510                           
  7511                           ;incstack = 0
  7512  001D78  82C2               	bsf	4034,1,c	;volatile
  7513  001D7A  0012               	return	
  7514  001D7C                     __end_ofi1_ConvertADC:
  7515                           	opt stack 0
  7516                           tblptru	equ	0xFF8
  7517                           tblptrh	equ	0xFF7
  7518                           tblptrl	equ	0xFF6
  7519                           tablat	equ	0xFF5
  7520                           prodh	equ	0xFF4
  7521                           prodl	equ	0xFF3
  7522                           intcon	equ	0xFF2
  7523                           intcon2	equ	0xFF1
  7524                           intcon3	equ	0xFF0
  7525                           postinc0	equ	0xFEE
  7526                           wreg	equ	0xFE8
  7527                           postdec1	equ	0xFE5
  7528                           fsr1h	equ	0xFE2
  7529                           fsr1l	equ	0xFE1
  7530                           bsr	equ	0xFE0
  7531                           indf2	equ	0xFDF
  7532                           postinc2	equ	0xFDE
  7533                           postdec2	equ	0xFDD
  7534                           fsr2h	equ	0xFDA
  7535                           fsr2l	equ	0xFD9
  7536                           status	equ	0xFD8
  7537                           
  7538 ;; *************** function _ADCread *****************
  7539 ;; Defined at:
  7540 ;;		line 238 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  EGRD_CURR       2   25[COMRAM] int 
  7545 ;;  ADCPressure     2   23[COMRAM] int 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;		None               void
  7548 ;; Registers used:
  7549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;Total ram usage:       10 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    8
  7562 ;; This function calls:
  7563 ;;		_EX_filter
  7564 ;;		_GetColt
  7565 ;;		_ReadADC
  7566 ;;		_SMA_filter
  7567 ;;		i1___tmul
  7568 ;; This function is called by:
  7569 ;;		_low_isr
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           	psect	text36
  7574  0000D8                     __ptext36:
  7575                           	opt stack 0
  7576  0000D8                     _ADCread:
  7577                           	opt stack 16
  7578                           
  7579                           ;main.c: 240: if ((ADCON0&0b01111100) == (0b10000011&0b01111100))
  7580                           
  7581                           ;incstack = 0
  7582  0000D8  CFC2 F012          	movff	4034,??_ADCread	;volatile
  7583  0000DC  0E7C               	movlw	124
  7584  0000DE  1612               	andwf	??_ADCread,f,c
  7585  0000E0  E151               	bnz	i1l3828
  7586                           
  7587                           ;main.c: 241: {
  7588                           ;main.c: 242: int ADCPressure=EX_filter(ReadADC(),MAP_array);
  7589  0000E2  ECAB  F00E         	call	_ReadADC	;wreg free
  7590  0000E6  C001  F003         	movff	?_ReadADC,EX_filter@a
  7591  0000EA  C002  F004         	movff	?_ReadADC+1,EX_filter@a+1
  7592  0000EE  0E3F               	movlw	low _MAP_array
  7593  0000F0  6E05               	movwf	EX_filter@Massive,c
  7594  0000F2  ECF1  F005         	call	_EX_filter	;wreg free
  7595  0000F6  C003  F018         	movff	?_EX_filter,ADCread@ADCPressure
  7596  0000FA  C004  F019         	movff	?_EX_filter+1,ADCread@ADCPressure+1
  7597                           
  7598                           ;main.c: 243: if (ADCPressure<0x14 || ADCPressure>0x3C0){ECU.MAP_ERR=1;}else{ECU.MAP_ERR
      +                          =0;}
  7599  0000FE  5019               	movf	ADCread@ADCPressure+1,w,c
  7600  000100  0A80               	xorlw	128
  7601  000102  0F80               	addlw	-128
  7602  000104  0E14               	movlw	20
  7603  000106  B4D8               	btfsc	status,2,c
  7604  000108  5C18               	subwf	ADCread@ADCPressure,w,c
  7605  00010A  E307               	bnc	i1l409
  7606  00010C  5019               	movf	ADCread@ADCPressure+1,w,c
  7607  00010E  0A80               	xorlw	128
  7608  000110  0F7D               	addlw	-131
  7609  000112  0EC1               	movlw	193
  7610  000114  B4D8               	btfsc	status,2,c
  7611  000116  5C18               	subwf	ADCread@ADCPressure,w,c
  7612  000118  E303               	bnc	i1l407
  7613  00011A                     i1l409:
  7614  00011A  0100               	movlb	0	; () banked
  7615  00011C  8B6A               	bsf	(_ECU+5)& (0+255),5,b	;volatile
  7616  00011E  D002               	goto	i1l3818
  7617  000120                     i1l407:
  7618  000120  0100               	movlb	0	; () banked
  7619  000122  9B6A               	bcf	(_ECU+5)& (0+255),5,b	;volatile
  7620  000124                     i1l3818:
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;main.c: 244: AirPressure=((ADCPressure+95)*(unsigned short long)285)>>10;
  7624  000124  0E0A               	movlw	10
  7625  000126  6E12               	movwf	??_ADCread& (0+255),c
  7626  000128  0E5F               	movlw	95
  7627  00012A  2418               	addwf	ADCread@ADCPressure,w,c
  7628  00012C  6E13               	movwf	(??_ADCread+1)& (0+255),c
  7629  00012E  0E00               	movlw	0
  7630  000130  2019               	addwfc	ADCread@ADCPressure+1,w,c
  7631  000132  6E14               	movwf	(??_ADCread+2)& (0+255),c
  7632  000134  C013  F001         	movff	??_ADCread+1,i1___tmul@multiplier
  7633  000138  C014  F002         	movff	??_ADCread+2,i1___tmul@multiplier+1
  7634  00013C  6A03               	clrf	i1___tmul@multiplier+2,c
  7635  00013E  BE02               	btfsc	i1___tmul@multiplier+1,7,c
  7636  000140  0603               	decf	i1___tmul@multiplier+2,f,c
  7637  000142  0E1D               	movlw	29
  7638  000144  6E04               	movwf	i1___tmul@multiplicand,c
  7639  000146  0E01               	movlw	1
  7640  000148  6E05               	movwf	i1___tmul@multiplicand+1,c
  7641  00014A  0E00               	movlw	0
  7642  00014C  6A06               	clrf	i1___tmul@multiplicand+2,c
  7643  00014E  EC6F  F00A         	call	i1___tmul	;wreg free
  7644  000152  2812               	incf	??_ADCread,w,c
  7645  000154  6E15               	movwf	(??_ADCread+3)& (0+255),c
  7646  000156  D004               	goto	i1u341_20
  7647  000158                     i1u341_25:
  7648  000158  90D8               	bcf	status,0,c
  7649  00015A  3203               	rrcf	?i1___tmul+2,f,c
  7650  00015C  3202               	rrcf	?i1___tmul+1,f,c
  7651  00015E  3201               	rrcf	?i1___tmul,f,c
  7652  000160                     i1u341_20:
  7653  000160  2E15               	decfsz	(??_ADCread+3)& (0+255),f,c
  7654  000162  D7FA               	goto	i1u341_25
  7655  000164  C001  F060         	movff	?i1___tmul,_AirPressure
  7656  000168  C002  F061         	movff	?i1___tmul+1,_AirPressure+1
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;main.c: 245: ECU.APressure=AirPressure>>1;
  7660  00016C  90D8               	bcf	status,0,c
  7661  00016E  3161               	rrcf	(_AirPressure+1)& (0+255),w,b
  7662  000170  6E13               	movwf	(??_ADCread+1)& (0+255),c
  7663  000172  3160               	rrcf	_AirPressure& (0+255),w,b
  7664  000174  6E12               	movwf	??_ADCread& (0+255),c
  7665  000176  5012               	movf	??_ADCread,w,c
  7666  000178  6F6E               	movwf	(_ECU+9)& (0+255),b	;volatile
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;main.c: 246: Flag_FuelEq=1;
  7670  00017A  844B               	bsf	_Flag_FuelEq/(0+8),_Flag_FuelEq& (0+7),c	;volatile
  7671                           
  7672                           ;main.c: 247: if(ECU.Mtr_On==0){C2IF=1;}
  7673  00017C  0100               	movlb	0	; () banked
  7674  00017E  A169               	btfss	(_ECU+4)& (0+255),0,b	;volatile
  7675                           
  7676                           ; BSR set to: 0
  7677  000180  8AA1               	bsf	4001,5,c	;volatile
  7678  000182  0012               	return	
  7679  000184                     i1l3828:
  7680                           
  7681                           ;main.c: 249: }
  7682                           ;main.c: 250: if ((ADCON0&0b01111100) == (0b10000111&0b01111100))
  7683  000184  CFC2 F012          	movff	4034,??_ADCread	;volatile
  7684  000188  0E7C               	movlw	124
  7685  00018A  1612               	andwf	??_ADCread,f,c
  7686  00018C  5012               	movf	??_ADCread,w,c
  7687  00018E  0A04               	xorlw	4
  7688  000190  E114               	bnz	i1l3836
  7689                           
  7690                           ;main.c: 251: {
  7691                           ;main.c: 252: ECU.TPS=ReadADC()>>2;
  7692  000192  ECAB  F00E         	call	_ReadADC	;wreg free
  7693  000196  3402               	rlcf	?_ReadADC+1,w,c
  7694  000198  3202               	rrcf	?_ReadADC+1,f,c
  7695  00019A  3201               	rrcf	?_ReadADC,f,c
  7696  00019C  3402               	rlcf	?_ReadADC+1,w,c
  7697  00019E  3202               	rrcf	?_ReadADC+1,f,c
  7698  0001A0  3201               	rrcf	?_ReadADC,f,c
  7699  0001A2  5001               	movf	?_ReadADC,w,c
  7700  0001A4  0100               	movlb	0	; () banked
  7701  0001A6  6F6F               	movwf	(_ECU+10)& (0+255),b	;volatile
  7702                           
  7703                           ; BSR set to: 0
  7704  0001A8  0E1F               	movlw	31
  7705  0001AA  5D6F               	subwf	(_ECU+10)& (0+255),w,b	;volatile
  7706  0001AC  E203               	bc	i1l414
  7707                           
  7708                           ; BSR set to: 0
  7709  0001AE  8569               	bsf	(_ECU+4)& (0+255),2,b	;volatile
  7710  0001B0  828C               	bsf	3980,1,c	;volatile
  7711  0001B2  0012               	return	
  7712  0001B4                     i1l414:
  7713                           
  7714                           ; BSR set to: 0
  7715  0001B4  9569               	bcf	(_ECU+4)& (0+255),2,b	;volatile
  7716  0001B6  928C               	bcf	3980,1,c	;volatile
  7717  0001B8  0012               	return	
  7718  0001BA                     i1l3836:
  7719                           
  7720                           ;main.c: 255: }
  7721                           ;main.c: 256: if ((ADCON0&0b01111100) == (0b10001011&0b01111100))
  7722  0001BA  CFC2 F012          	movff	4034,??_ADCread	;volatile
  7723  0001BE  0E7C               	movlw	124
  7724  0001C0  1612               	andwf	??_ADCread,f,c
  7725  0001C2  5012               	movf	??_ADCread,w,c
  7726  0001C4  0A08               	xorlw	8
  7727  0001C6  E102               	bnz	i1l3842
  7728                           
  7729                           ;main.c: 257: {GetColt();return;}
  7730  0001C8  EF6E  F007         	goto	_GetColt	;wreg free
  7731  0001CC                     i1l3842:
  7732                           
  7733                           ;main.c: 258: if ((ADCON0&0b01111100) == (0b10010011&0b01111100))
  7734  0001CC  CFC2 F012          	movff	4034,??_ADCread	;volatile
  7735  0001D0  0E7C               	movlw	124
  7736  0001D2  1612               	andwf	??_ADCread,f,c
  7737  0001D4  5012               	movf	??_ADCread,w,c
  7738  0001D6  0A10               	xorlw	16
  7739  0001D8  E11A               	bnz	i1l3850
  7740                           
  7741                           ;main.c: 259: {
  7742                           ;main.c: 260: ECU.POWER=SMA_filter(ReadADC(),PWR_array)>>2;
  7743  0001DA  ECAB  F00E         	call	_ReadADC	;wreg free
  7744  0001DE  C001  F003         	movff	?_ReadADC,SMA_filter@a
  7745  0001E2  C002  F004         	movff	?_ReadADC+1,SMA_filter@a+1
  7746  0001E6  0100               	movlb	0	; () banked
  7747  0001E8  0EBB               	movlw	low _PWR_array
  7748  0001EA  6E05               	movwf	SMA_filter@Massive,c
  7749  0001EC  EC95  F008         	call	_SMA_filter	;wreg free
  7750  0001F0  3404               	rlcf	?_SMA_filter+1,w,c
  7751  0001F2  3204               	rrcf	?_SMA_filter+1,f,c
  7752  0001F4  3203               	rrcf	?_SMA_filter,f,c
  7753  0001F6  3404               	rlcf	?_SMA_filter+1,w,c
  7754  0001F8  3204               	rrcf	?_SMA_filter+1,f,c
  7755  0001FA  3203               	rrcf	?_SMA_filter,f,c
  7756  0001FC  5003               	movf	?_SMA_filter,w,c
  7757  0001FE  6F71               	movwf	(_ECU+12)& (0+255),b	;volatile
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;main.c: 261: if (ECU.POWER<24){LD5=1;}else{LD5=0;}
  7761  000200  0E18               	movlw	24
  7762  000202  5D71               	subwf	(_ECU+12)& (0+255),w,b	;volatile
  7763  000204  E202               	bc	i1l418
  7764                           
  7765                           ; BSR set to: 0
  7766  000206  8A8C               	bsf	3980,5,c	;volatile
  7767  000208  0012               	return	
  7768  00020A                     i1l418:
  7769                           
  7770                           ; BSR set to: 0
  7771  00020A  9A8C               	bcf	3980,5,c	;volatile
  7772  00020C  0012               	return	
  7773  00020E                     i1l3850:
  7774                           
  7775                           ;main.c: 263: }
  7776                           ;main.c: 264: if ((ADCON0&0b01111100) == (0b10001111&0b01111100))
  7777  00020E  CFC2 F012          	movff	4034,??_ADCread	;volatile
  7778  000212  0E7C               	movlw	124
  7779  000214  1612               	andwf	??_ADCread,f,c
  7780  000216  5012               	movf	??_ADCread,w,c
  7781  000218  0A0C               	xorlw	12
  7782  00021A  E149               	bnz	i1l3862
  7783                           
  7784                           ;main.c: 265: {
  7785                           ;main.c: 266: ADC=SMA_filter(ReadADC(),IAT_array);
  7786  00021C  ECAB  F00E         	call	_ReadADC	;wreg free
  7787  000220  C001  F003         	movff	?_ReadADC,SMA_filter@a
  7788  000224  C002  F004         	movff	?_ReadADC+1,SMA_filter@a+1
  7789  000228  0100               	movlb	0	; () banked
  7790  00022A  0EA3               	movlw	low _IAT_array
  7791  00022C  6E05               	movwf	SMA_filter@Massive,c
  7792  00022E  EC95  F008         	call	_SMA_filter	;wreg free
  7793  000232  C003  F033         	movff	?_SMA_filter,_ADC	;volatile
  7794  000236  C004  F034         	movff	?_SMA_filter+1,_ADC+1	;volatile
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;main.c: 267: ECU.reserv2=ADC>>2;
  7798  00023A  C033  F012         	movff	_ADC,??_ADCread	;volatile
  7799  00023E  C034  F013         	movff	_ADC+1,??_ADCread+1	;volatile
  7800  000242  90D8               	bcf	status,0,c
  7801  000244  3213               	rrcf	??_ADCread+1,f,c
  7802  000246  3212               	rrcf	??_ADCread,f,c
  7803  000248  90D8               	bcf	status,0,c
  7804  00024A  3213               	rrcf	??_ADCread+1,f,c
  7805  00024C  3212               	rrcf	??_ADCread,f,c
  7806  00024E  5012               	movf	??_ADCread,w,c
  7807  000250  6F84               	movwf	(_ECU+31)& (0+255),b	;volatile
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;main.c: 268: ECU.IAT=ADC>>1;
  7811  000252  90D8               	bcf	status,0,c
  7812  000254  3034               	rrcf	_ADC+1,w,c	;volatile
  7813  000256  6E13               	movwf	(??_ADCread+1)& (0+255),c
  7814  000258  3033               	rrcf	_ADC,w,c	;volatile
  7815  00025A  6E12               	movwf	??_ADCread& (0+255),c
  7816  00025C  5012               	movf	??_ADCread,w,c
  7817  00025E  6F87               	movwf	(_ECU+34)& (0+255),b	;volatile
  7818                           
  7819                           ;main.c: 269: LPGPressure=((ADC+40)*(unsigned short long)640)/1024;
  7820  000260  0E0A               	movlw	10
  7821  000262  6E12               	movwf	??_ADCread& (0+255),c
  7822  000264  0E28               	movlw	40
  7823  000266  2433               	addwf	_ADC,w,c	;volatile
  7824  000268  6E13               	movwf	(??_ADCread+1)& (0+255),c
  7825  00026A  0E00               	movlw	0
  7826  00026C  2034               	addwfc	_ADC+1,w,c	;volatile
  7827  00026E  6E14               	movwf	(??_ADCread+2)& (0+255),c
  7828  000270  C013  F001         	movff	??_ADCread+1,i1___tmul@multiplier
  7829  000274  C014  F002         	movff	??_ADCread+2,i1___tmul@multiplier+1
  7830  000278  6A03               	clrf	i1___tmul@multiplier+2,c
  7831  00027A  0E80               	movlw	128
  7832  00027C  6E04               	movwf	i1___tmul@multiplicand,c
  7833  00027E  0E02               	movlw	2
  7834  000280  6E05               	movwf	i1___tmul@multiplicand+1,c
  7835  000282  0E00               	movlw	0
  7836  000284  6A06               	clrf	i1___tmul@multiplicand+2,c
  7837  000286  EC6F  F00A         	call	i1___tmul	;wreg free
  7838  00028A  2812               	incf	??_ADCread,w,c
  7839  00028C  6E15               	movwf	(??_ADCread+3)& (0+255),c
  7840  00028E  D004               	goto	i1u349_20
  7841  000290                     i1u349_25:
  7842  000290  90D8               	bcf	status,0,c
  7843  000292  3203               	rrcf	?i1___tmul+2,f,c
  7844  000294  3202               	rrcf	?i1___tmul+1,f,c
  7845  000296  3201               	rrcf	?i1___tmul,f,c
  7846  000298                     i1u349_20:
  7847  000298  2E15               	decfsz	(??_ADCread+3)& (0+255),f,c
  7848  00029A  D7FA               	goto	i1u349_25
  7849  00029C  C001  F035         	movff	?i1___tmul,_LPGPressure
  7850  0002A0  C002  F036         	movff	?i1___tmul+1,_LPGPressure+1
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;main.c: 270: ECU.RCO=LPGPressure;
  7854  0002A4  C035  F079         	movff	_LPGPressure,_ECU+20	;volatile
  7855  0002A8  C036  F07A         	movff	_LPGPressure+1,_ECU+21	;volatile
  7856  0002AC  0012               	return	
  7857  0002AE                     i1l3862:
  7858                           
  7859                           ;main.c: 272: }
  7860                           ;main.c: 273: if ((ADCON0&0b01111100) == (0b10010111&0b01111100))
  7861  0002AE  CFC2 F012          	movff	4034,??_ADCread	;volatile
  7862  0002B2  0E7C               	movlw	124
  7863  0002B4  1612               	andwf	??_ADCread,f,c
  7864  0002B6  5012               	movf	??_ADCread,w,c
  7865  0002B8  0A14               	xorlw	20
  7866  0002BA  E129               	bnz	i1l3880
  7867                           
  7868                           ;main.c: 274: {
  7869                           ;main.c: 275: ADC=ReadADC();
  7870  0002BC  ECAB  F00E         	call	_ReadADC	;wreg free
  7871  0002C0  C001  F033         	movff	?_ReadADC,_ADC	;volatile
  7872  0002C4  C002  F034         	movff	?_ReadADC+1,_ADC+1	;volatile
  7873                           
  7874                           ;main.c: 276: if (ADC > 203 || ADC < 12) {ECU.O2S=127;ECU.Lambda_ERR=1;return;}
  7875  0002C8  0ECC               	movlw	204
  7876  0002CA  5C33               	subwf	_ADC,w,c	;volatile
  7877  0002CC  0E00               	movlw	0
  7878  0002CE  5834               	subwfb	_ADC+1,w,c	;volatile
  7879  0002D0  E205               	bc	i1l3870
  7880  0002D2  0E0C               	movlw	12
  7881  0002D4  5C33               	subwf	_ADC,w,c	;volatile
  7882  0002D6  0E00               	movlw	0
  7883  0002D8  5834               	subwfb	_ADC+1,w,c	;volatile
  7884  0002DA  E205               	bc	i1l3876
  7885  0002DC                     i1l3870:
  7886  0002DC  0E7F               	movlw	127
  7887  0002DE  0100               	movlb	0	; () banked
  7888  0002E0  6F70               	movwf	(_ECU+11)& (0+255),b	;volatile
  7889                           
  7890                           ; BSR set to: 0
  7891  0002E2  8D6A               	bsf	(_ECU+5)& (0+255),6,b	;volatile
  7892  0002E4  0C7F               	retlw	127
  7893  0002E6                     i1l3876:
  7894                           
  7895                           ;main.c: 277: ECU.O2S=Lambda[ADC&0xFF];
  7896  0002E6  0EFF               	movlw	255
  7897  0002E8  1433               	andwf	_ADC,w,c	;volatile
  7898  0002EA  6E12               	movwf	??_ADCread& (0+255),c
  7899  0002EC  0E00               	movlw	0
  7900  0002EE  1434               	andwf	_ADC+1,w,c	;volatile
  7901  0002F0  6E13               	movwf	(??_ADCread+1)& (0+255),c
  7902  0002F2  0EC3               	movlw	low _Lambda
  7903  0002F4  2412               	addwf	??_ADCread,w,c
  7904  0002F6  6EF6               	movwf	tblptrl,c
  7905  0002F8  0EFD               	movlw	high _Lambda
  7906  0002FA  2013               	addwfc	??_ADCread+1,w,c
  7907  0002FC  6EF7               	movwf	tblptrh,c
  7908  0002FE                     	if	1	;There are 3 active tblptr bytes
  7909  0002FE  6AF8               	clrf	tblptru,c
  7910  000300  0E00               	movlw	low (__mediumconst shr (0+16))
  7911  000302  22F8               	addwfc	tblptru,f,c
  7912  000304                     	endif
  7913  000304  0008               	tblrd		*
  7914  000306  0100               	movlb	0	; () banked
  7915  000308  CFF5 F070          	movff	tablat,_ECU+11	;volatile
  7916  00030C  0012               	return	
  7917  00030E                     i1l3880:
  7918                           
  7919                           ;main.c: 279: }
  7920                           ;main.c: 280: if ((ADCON0&0b01111100) == (0b11100111&0b01111100))
  7921  00030E  CFC2 F012          	movff	4034,??_ADCread	;volatile
  7922  000312  0E7C               	movlw	124
  7923  000314  1612               	andwf	??_ADCread,f,c
  7924  000316  5012               	movf	??_ADCread,w,c
  7925  000318  0A64               	xorlw	100
  7926  00031A  A4D8               	btfss	status,2,c
  7927  00031C  0012               	return	
  7928                           
  7929                           ;main.c: 281: {
  7930                           ;main.c: 282: int EGRD_CURR=EX_filter(ReadADC(),EXT_array);
  7931  00031E  ECAB  F00E         	call	_ReadADC	;wreg free
  7932  000322  C001  F003         	movff	?_ReadADC,EX_filter@a
  7933  000326  C002  F004         	movff	?_ReadADC+1,EX_filter@a+1
  7934  00032A  0100               	movlb	0	; () banked
  7935  00032C  0E97               	movlw	low _EXT_array
  7936  00032E  6E05               	movwf	EX_filter@Massive,c
  7937  000330  ECF1  F005         	call	_EX_filter	;wreg free
  7938  000334  C003  F01A         	movff	?_EX_filter,ADCread@EGRD_CURR
  7939  000338  C004  F01B         	movff	?_EX_filter+1,ADCread@EGRD_CURR+1
  7940                           
  7941                           ;main.c: 283: if (EGRD_CURR < 254) EGRD_CURR=254;
  7942  00033C  501B               	movf	ADCread@EGRD_CURR+1,w,c
  7943  00033E  0A80               	xorlw	128
  7944  000340  6EF3               	movwf	prodl,c
  7945  000342  0E80               	movlw	128
  7946  000344  5CF3               	subwf	prodl,w,c
  7947  000346  0EFE               	movlw	254
  7948  000348  B4D8               	btfsc	status,2,c
  7949  00034A  5C1A               	subwf	ADCread@EGRD_CURR,w,c
  7950  00034C  E203               	bc	i1l3888
  7951  00034E  6A1B               	clrf	ADCread@EGRD_CURR+1,c
  7952  000350  0EFE               	movlw	254
  7953  000352  6E1A               	movwf	ADCread@EGRD_CURR,c
  7954  000354                     i1l3888:
  7955                           
  7956                           ;main.c: 284: if (EGRD_CURR > 764) EGRD_CURR=764;
  7957  000354  501B               	movf	ADCread@EGRD_CURR+1,w,c
  7958  000356  0A80               	xorlw	128
  7959  000358  0F7E               	addlw	-130
  7960  00035A  0EFD               	movlw	253
  7961  00035C  B4D8               	btfsc	status,2,c
  7962  00035E  5C1A               	subwf	ADCread@EGRD_CURR,w,c
  7963  000360  E304               	bnc	i1l3892
  7964  000362  0E02               	movlw	2
  7965  000364  6E1B               	movwf	ADCread@EGRD_CURR+1,c
  7966  000366  0EFC               	movlw	252
  7967  000368  6E1A               	movwf	ADCread@EGRD_CURR,c
  7968  00036A                     i1l3892:
  7969                           
  7970                           ;main.c: 285: ECU.WARM_12=(EGRD_CURR-254)>>1;
  7971  00036A  0E02               	movlw	2
  7972  00036C  6E12               	movwf	??_ADCread& (0+255),c
  7973  00036E  6813               	setf	(??_ADCread+1)& (0+255),c
  7974  000370  C01A  F014         	movff	ADCread@EGRD_CURR,??_ADCread+2
  7975  000374  C01B  F015         	movff	ADCread@EGRD_CURR+1,??_ADCread+3
  7976  000378  5012               	movf	??_ADCread,w,c
  7977  00037A  2614               	addwf	??_ADCread+2,f,c
  7978  00037C  5013               	movf	??_ADCread+1,w,c
  7979  00037E  2215               	addwfc	??_ADCread+3,f,c
  7980  000380  3415               	rlcf	??_ADCread+3,w,c
  7981  000382  3015               	rrcf	??_ADCread+3,w,c
  7982  000384  6E17               	movwf	(??_ADCread+5)& (0+255),c
  7983  000386  3014               	rrcf	??_ADCread+2,w,c
  7984  000388  6E16               	movwf	(??_ADCread+4)& (0+255),c
  7985  00038A  5016               	movf	??_ADCread+4,w,c
  7986  00038C  0100               	movlb	0	; () banked
  7987  00038E  6F83               	movwf	(_ECU+30)& (0+255),b	;volatile
  7988  000390  0012               	return	
  7989  000392                     __end_of_ADCread:
  7990                           	opt stack 0
  7991                           tblptru	equ	0xFF8
  7992                           tblptrh	equ	0xFF7
  7993                           tblptrl	equ	0xFF6
  7994                           tablat	equ	0xFF5
  7995                           prodh	equ	0xFF4
  7996                           prodl	equ	0xFF3
  7997                           intcon	equ	0xFF2
  7998                           intcon2	equ	0xFF1
  7999                           intcon3	equ	0xFF0
  8000                           postinc0	equ	0xFEE
  8001                           wreg	equ	0xFE8
  8002                           postdec1	equ	0xFE5
  8003                           fsr1h	equ	0xFE2
  8004                           fsr1l	equ	0xFE1
  8005                           bsr	equ	0xFE0
  8006                           indf2	equ	0xFDF
  8007                           postinc2	equ	0xFDE
  8008                           postdec2	equ	0xFDD
  8009                           fsr2h	equ	0xFDA
  8010                           fsr2l	equ	0xFD9
  8011                           status	equ	0xFD8
  8012                           
  8013 ;; *************** function i1___tmul *****************
  8014 ;; Defined at:
  8015 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul24.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  multiplier      3    0[COMRAM] unsigned um
  8018 ;;  multiplicand    3    3[COMRAM] unsigned um
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  __tmul          3    8[COMRAM] unsigned um
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  3    0[COMRAM] unsigned um
  8023 ;; Registers used:
  8024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8025 ;; Tracked objects:
  8026 ;;		On entry : F/0
  8027 ;;		On exit  : F/0
  8028 ;;		Unchanged: F/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8030 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8031 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8033 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8034 ;;Total ram usage:       11 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    6
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_ADCread
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           	psect	text37
  8045  0014DE                     __ptext37:
  8046                           	opt stack 0
  8047  0014DE                     i1___tmul:
  8048                           	opt stack 17
  8049                           
  8050                           ; BSR set to: 0
  8051                           
  8052                           ;incstack = 0
  8053  0014DE  5001               	movf	i1___tmul@multiplier,w,c
  8054  0014E0  0204               	mulwf	i1___tmul@multiplicand,c
  8055  0014E2  CFF3 F009          	movff	prodl,i1___tmul@product
  8056  0014E6  CFF4 F00A          	movff	prodh,i1___tmul@product+1
  8057  0014EA  6A0B               	clrf	i1___tmul@product+2,c
  8058                           
  8059                           ; BSR set to: 0
  8060  0014EC  5001               	movf	i1___tmul@multiplier,w,c
  8061  0014EE  0205               	mulwf	i1___tmul@multiplicand+1,c
  8062  0014F0  0E09               	movlw	low i1___tmul@product
  8063  0014F2  6E07               	movwf	??i1___tmul& (0+255),c
  8064  0014F4  0E00               	movlw	high i1___tmul@product
  8065  0014F6  6E08               	movwf	(??i1___tmul+1)& (0+255),c
  8066  0014F8  2807               	incf	??i1___tmul,w,c
  8067  0014FA  6ED9               	movwf	fsr2l,c
  8068  0014FC  0E00               	movlw	0
  8069  0014FE  2008               	addwfc	??i1___tmul+1,w,c
  8070  001500  6EDA               	movwf	fsr2h,c
  8071  001502  50F3               	movf	prodl,w,c
  8072  001504  26DE               	addwf	postinc2,f,c
  8073  001506  50F4               	movf	prodh,w,c
  8074  001508  22DD               	addwfc	postdec2,f,c
  8075                           
  8076                           ; BSR set to: 0
  8077  00150A  5002               	movf	i1___tmul@multiplier+1,w,c
  8078  00150C  0204               	mulwf	i1___tmul@multiplicand,c
  8079  00150E  0E09               	movlw	low i1___tmul@product
  8080  001510  6E07               	movwf	??i1___tmul& (0+255),c
  8081  001512  0E00               	movlw	high i1___tmul@product
  8082  001514  6E08               	movwf	(??i1___tmul+1)& (0+255),c
  8083  001516  2807               	incf	??i1___tmul,w,c
  8084  001518  6ED9               	movwf	fsr2l,c
  8085  00151A  0E00               	movlw	0
  8086  00151C  2008               	addwfc	??i1___tmul+1,w,c
  8087  00151E  6EDA               	movwf	fsr2h,c
  8088  001520  50F3               	movf	prodl,w,c
  8089  001522  26DE               	addwf	postinc2,f,c
  8090  001524  50F4               	movf	prodh,w,c
  8091  001526  22DD               	addwfc	postdec2,f,c
  8092  001528  5006               	movf	i1___tmul@multiplicand+2,w,c
  8093  00152A  0201               	mulwf	i1___tmul@multiplier,c
  8094  00152C  50F3               	movf	prodl,w,c
  8095  00152E  260B               	addwf	i1___tmul@product+2,f,c
  8096  001530  5002               	movf	i1___tmul@multiplier+1,w,c
  8097  001532  0205               	mulwf	i1___tmul@multiplicand+1,c
  8098  001534  50F3               	movf	prodl,w,c
  8099  001536  260B               	addwf	i1___tmul@product+2,f,c
  8100  001538  5003               	movf	i1___tmul@multiplier+2,w,c
  8101  00153A  0204               	mulwf	i1___tmul@multiplicand,c
  8102  00153C  50F3               	movf	prodl,w,c
  8103  00153E  260B               	addwf	i1___tmul@product+2,f,c
  8104                           
  8105                           ; BSR set to: 0
  8106  001540  C009  F001         	movff	i1___tmul@product,?i1___tmul
  8107  001544  C00A  F002         	movff	i1___tmul@product+1,?i1___tmul+1
  8108  001548  C00B  F003         	movff	i1___tmul@product+2,?i1___tmul+2
  8109                           
  8110                           ; BSR set to: 0
  8111  00154C  0012               	return	
  8112  00154E                     __end_ofi1___tmul:
  8113                           	opt stack 0
  8114                           tblptru	equ	0xFF8
  8115                           tblptrh	equ	0xFF7
  8116                           tblptrl	equ	0xFF6
  8117                           tablat	equ	0xFF5
  8118                           prodh	equ	0xFF4
  8119                           prodl	equ	0xFF3
  8120                           intcon	equ	0xFF2
  8121                           intcon2	equ	0xFF1
  8122                           intcon3	equ	0xFF0
  8123                           postinc0	equ	0xFEE
  8124                           wreg	equ	0xFE8
  8125                           postdec1	equ	0xFE5
  8126                           fsr1h	equ	0xFE2
  8127                           fsr1l	equ	0xFE1
  8128                           bsr	equ	0xFE0
  8129                           indf2	equ	0xFDF
  8130                           postinc2	equ	0xFDE
  8131                           postdec2	equ	0xFDD
  8132                           fsr2h	equ	0xFDA
  8133                           fsr2l	equ	0xFD9
  8134                           status	equ	0xFD8
  8135                           
  8136 ;; *************** function _GetColt *****************
  8137 ;; Defined at:
  8138 ;;		line 210 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;  CLT_DATA        2   15[COMRAM] unsigned int 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;		None               void
  8145 ;; Registers used:
  8146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : F/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;Total ram usage:        8 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:    7
  8159 ;; This function calls:
  8160 ;;		_ReadADC
  8161 ;;		_SMA_filter
  8162 ;; This function is called by:
  8163 ;;		_ADCread
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           	psect	text38
  8168  000EDC                     __ptext38:
  8169                           	opt stack 0
  8170  000EDC                     _GetColt:
  8171                           	opt stack 16
  8172                           
  8173                           ;main.c: 214: unsigned int CLT_DATA=SMA_filter(ReadADC(),CLT_array);
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;incstack = 0
  8177  000EDC  ECAB  F00E         	call	_ReadADC	;wreg free
  8178  000EE0  C001  F003         	movff	?_ReadADC,SMA_filter@a
  8179  000EE4  C002  F004         	movff	?_ReadADC+1,SMA_filter@a+1
  8180  000EE8  0100               	movlb	0	; () banked
  8181  000EEA  0E8B               	movlw	low _CLT_array
  8182  000EEC  6E05               	movwf	SMA_filter@Massive,c
  8183  000EEE  EC95  F008         	call	_SMA_filter	;wreg free
  8184  000EF2  C003  F010         	movff	?_SMA_filter,GetColt@CLT_DATA
  8185  000EF6  C004  F011         	movff	?_SMA_filter+1,GetColt@CLT_DATA+1
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;main.c: 215: if (CLT_DATA>0x1D4 && CLT_DATA<0x3D3)
  8189  000EFA  0ED5               	movlw	213
  8190  000EFC  5C10               	subwf	GetColt@CLT_DATA,w,c
  8191  000EFE  0E01               	movlw	1
  8192  000F00  5811               	subwfb	GetColt@CLT_DATA+1,w,c
  8193  000F02  E332               	bnc	i1l392
  8194                           
  8195                           ; BSR set to: 0
  8196  000F04  0ED3               	movlw	211
  8197  000F06  5C10               	subwf	GetColt@CLT_DATA,w,c
  8198  000F08  0E03               	movlw	3
  8199  000F0A  5811               	subwfb	GetColt@CLT_DATA+1,w,c
  8200  000F0C  E22D               	bc	i1l392
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;main.c: 216: {
  8204                           ;main.c: 217: ECU.CLT_ERR=0;
  8205  000F0E  996A               	bcf	(_ECU+5)& (0+255),4,b	;volatile
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;main.c: 218: ECU.ColtF=(CLT_DATA-0x1D4)>>1;
  8209  000F10  0E2C               	movlw	44
  8210  000F12  6E0A               	movwf	??_GetColt& (0+255),c
  8211  000F14  0EFE               	movlw	254
  8212  000F16  6E0B               	movwf	(??_GetColt+1)& (0+255),c
  8213  000F18  C010  F00C         	movff	GetColt@CLT_DATA,??_GetColt+2
  8214  000F1C  C011  F00D         	movff	GetColt@CLT_DATA+1,??_GetColt+3
  8215  000F20  500A               	movf	??_GetColt,w,c
  8216  000F22  260C               	addwf	??_GetColt+2,f,c
  8217  000F24  500B               	movf	??_GetColt+1,w,c
  8218  000F26  220D               	addwfc	??_GetColt+3,f,c
  8219  000F28  90D8               	bcf	status,0,c
  8220  000F2A  300D               	rrcf	??_GetColt+3,w,c
  8221  000F2C  6E0F               	movwf	(??_GetColt+5)& (0+255),c
  8222  000F2E  300C               	rrcf	??_GetColt+2,w,c
  8223  000F30  6E0E               	movwf	(??_GetColt+4)& (0+255),c
  8224  000F32  500E               	movf	??_GetColt+4,w,c
  8225  000F34  6F6C               	movwf	(_ECU+7)& (0+255),b	;volatile
  8226                           
  8227                           ;main.c: 219: if ((CLT_DATA-0x1D4)>0xFF)
  8228  000F36  0E2C               	movlw	44
  8229  000F38  6E0A               	movwf	??_GetColt& (0+255),c
  8230  000F3A  0EFE               	movlw	254
  8231  000F3C  6E0B               	movwf	(??_GetColt+1)& (0+255),c
  8232  000F3E  C010  F00C         	movff	GetColt@CLT_DATA,??_GetColt+2
  8233  000F42  C011  F00D         	movff	GetColt@CLT_DATA+1,??_GetColt+3
  8234  000F46  500A               	movf	??_GetColt,w,c
  8235  000F48  260C               	addwf	??_GetColt+2,f,c
  8236  000F4A  500B               	movf	??_GetColt+1,w,c
  8237  000F4C  220D               	addwfc	??_GetColt+3,f,c
  8238  000F4E  0E00               	movlw	0
  8239  000F50  5C0C               	subwf	??_GetColt+2,w,c
  8240  000F52  0E01               	movlw	1
  8241  000F54  580D               	subwfb	??_GetColt+3,w,c
  8242  000F56  E303               	bnc	i1l3226
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;main.c: 220: {ECU.COLT=0;ECU.Warm=0;}
  8246  000F58  6B6D               	clrf	(_ECU+8)& (0+255),b	;volatile
  8247  000F5A  9369               	bcf	(_ECU+4)& (0+255),1,b	;volatile
  8248  000F5C  0012               	return	
  8249  000F5E                     i1l3226:
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;main.c: 221: else
  8253                           ;main.c: 222: {ECU.COLT=0xFF-(CLT_DATA-0x1D4);ECU.Warm=1;}
  8254  000F5E  5010               	movf	GetColt@CLT_DATA,w,c
  8255  000F60  08D3               	sublw	211
  8256  000F62  6F6D               	movwf	(_ECU+8)& (0+255),b	;volatile
  8257                           
  8258                           ; BSR set to: 0
  8259  000F64  8369               	bsf	(_ECU+4)& (0+255),1,b	;volatile
  8260  000F66  0012               	return	
  8261  000F68                     i1l392:
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;main.c: 224: else {
  8265                           ;main.c: 226: if (ECU.CLT_ERR==0 && ECU.Mtr_On==1) {ECU.Warm=0;ECU.COLT=0;}
  8266  000F68  A96A               	btfss	(_ECU+5)& (0+255),4,b	;volatile
  8267                           
  8268                           ; BSR set to: 0
  8269  000F6A  A169               	btfss	(_ECU+4)& (0+255),0,b	;volatile
  8270  000F6C  D002               	goto	i1l396
  8271                           
  8272                           ; BSR set to: 0
  8273  000F6E  9369               	bcf	(_ECU+4)& (0+255),1,b	;volatile
  8274  000F70  6B6D               	clrf	(_ECU+8)& (0+255),b	;volatile
  8275  000F72                     i1l396:
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;main.c: 227: if (ECU.CLT_ERR==0 && ECU.Mtr_On==0) {ECU.Warm=1;ECU.COLT=164;}
  8279  000F72  A96A               	btfss	(_ECU+5)& (0+255),4,b	;volatile
  8280                           
  8281                           ; BSR set to: 0
  8282  000F74  B169               	btfsc	(_ECU+4)& (0+255),0,b	;volatile
  8283  000F76  D003               	goto	i1l3240
  8284                           
  8285                           ; BSR set to: 0
  8286  000F78  8369               	bsf	(_ECU+4)& (0+255),1,b	;volatile
  8287                           
  8288                           ; BSR set to: 0
  8289  000F7A  0EA4               	movlw	164
  8290  000F7C  6F6D               	movwf	(_ECU+8)& (0+255),b	;volatile
  8291  000F7E                     i1l3240:
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;main.c: 228: ECU.CLT_ERR=1;
  8295  000F7E  896A               	bsf	(_ECU+5)& (0+255),4,b	;volatile
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;main.c: 229: if (CLT_DATA<0x1D4){ECU.ColtF=0;}else{ECU.ColtF=0xFF;}
  8299  000F80  0ED4               	movlw	212
  8300  000F82  5C10               	subwf	GetColt@CLT_DATA,w,c
  8301  000F84  0E01               	movlw	1
  8302  000F86  5811               	subwfb	GetColt@CLT_DATA+1,w,c
  8303  000F88  E202               	bc	i1l398
  8304                           
  8305                           ; BSR set to: 0
  8306  000F8A  6B6C               	clrf	(_ECU+7)& (0+255),b	;volatile
  8307  000F8C  D001               	goto	i1l399
  8308  000F8E                     i1l398:
  8309                           
  8310                           ; BSR set to: 0
  8311  000F8E  696C               	setf	(_ECU+7)& (0+255),b	;volatile
  8312  000F90                     i1l399:
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;main.c: 230: if (Flag_FiveSeconds==1)
  8316  000F90  A24B               	btfss	_Flag_FiveSeconds/(0+8),_Flag_FiveSeconds& (0+7),c	;volatile
  8317  000F92  D007               	goto	i1l3254
  8318                           
  8319                           ;main.c: 231: {
  8320                           ;main.c: 232: Flag_FiveSeconds=0;
  8321  000F94  924B               	bcf	_Flag_FiveSeconds/(0+8),_Flag_FiveSeconds& (0+7),c	;volatile
  8322                           
  8323                           ;main.c: 233: if (ECU.COLT>0 && ECU.Mtr_On==1)ECU.COLT--;
  8324  000F96  0100               	movlb	0	; () banked
  8325  000F98  516D               	movf	(_ECU+8)& (0+255),w,b	;volatile
  8326  000F9A  A4D8               	btfss	status,2,c
  8327                           
  8328                           ; BSR set to: 0
  8329  000F9C  A169               	btfss	(_ECU+4)& (0+255),0,b	;volatile
  8330  000F9E  D001               	goto	i1l3254
  8331                           
  8332                           ; BSR set to: 0
  8333  000FA0  076D               	decf	(_ECU+8)& (0+255),f,b	;volatile
  8334  000FA2                     i1l3254:
  8335                           
  8336                           ;main.c: 234: }
  8337                           ;main.c: 235: if (ECU.COLT==0 && ECU.Mtr_On){ECU.Warm=0;}
  8338  000FA2  0100               	movlb	0	; () banked
  8339  000FA4  676D               	tstfsz	(_ECU+8)& (0+255),b	;volatile
  8340  000FA6  0012               	return	
  8341                           
  8342                           ; BSR set to: 0
  8343  000FA8  B169               	btfsc	(_ECU+4)& (0+255),0,b	;volatile
  8344                           
  8345                           ; BSR set to: 0
  8346  000FAA  9369               	bcf	(_ECU+4)& (0+255),1,b	;volatile
  8347                           
  8348                           ; BSR set to: 0
  8349  000FAC  0012               	return	
  8350  000FAE                     __end_of_GetColt:
  8351                           	opt stack 0
  8352                           tblptru	equ	0xFF8
  8353                           tblptrh	equ	0xFF7
  8354                           tblptrl	equ	0xFF6
  8355                           tablat	equ	0xFF5
  8356                           prodh	equ	0xFF4
  8357                           prodl	equ	0xFF3
  8358                           intcon	equ	0xFF2
  8359                           intcon2	equ	0xFF1
  8360                           intcon3	equ	0xFF0
  8361                           postinc0	equ	0xFEE
  8362                           wreg	equ	0xFE8
  8363                           postdec1	equ	0xFE5
  8364                           fsr1h	equ	0xFE2
  8365                           fsr1l	equ	0xFE1
  8366                           bsr	equ	0xFE0
  8367                           indf2	equ	0xFDF
  8368                           postinc2	equ	0xFDE
  8369                           postdec2	equ	0xFDD
  8370                           fsr2h	equ	0xFDA
  8371                           fsr2l	equ	0xFD9
  8372                           status	equ	0xFD8
  8373                           
  8374 ;; *************** function _SMA_filter *****************
  8375 ;; Defined at:
  8376 ;;		line 188 in file "D:\DOC\Project\WEGA\WEGA2\Fuel_Calc.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;  a               2    2[COMRAM] unsigned int 
  8379 ;;  Massive         1    4[COMRAM] PTR unsigned int 
  8380 ;;		 -> IAT_array(12), PWR_array(12), CLT_array(12), Load_array(12), 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  j               1    8[COMRAM] unsigned char 
  8383 ;;  n               1    7[COMRAM] unsigned char 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  2    2[COMRAM] int 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8388 ;; Tracked objects:
  8389 ;;		On entry : F/0
  8390 ;;		On exit  : F/0
  8391 ;;		Unchanged: F/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8393 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8394 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8395 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8397 ;;Total ram usage:        7 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:    6
  8400 ;; This function calls:
  8401 ;;		Nothing
  8402 ;; This function is called by:
  8403 ;;		_TMR0Event
  8404 ;;		_GetColt
  8405 ;;		_ADCread
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text39
  8410  00112A                     __ptext39:
  8411                           	opt stack 0
  8412  00112A                     _SMA_filter:
  8413                           	opt stack 17
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;Fuel_Calc.c: 190: char n=Massive[4]&0x3;
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;incstack = 0
  8420  00112A  5005               	movf	SMA_filter@Massive,w,c
  8421  00112C  6ED9               	movwf	fsr2l,c
  8422  00112E  6ADA               	clrf	fsr2h,c
  8423  001130  0E08               	movlw	8
  8424  001132  26D9               	addwf	fsr2l,f,c
  8425  001134  50DF               	movf	indf2,w,c
  8426  001136  0B03               	andlw	3
  8427  001138  6E08               	movwf	SMA_filter@n,c
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;Fuel_Calc.c: 191: Massive[n]=a;
  8431  00113A  5008               	movf	SMA_filter@n,w,c
  8432  00113C  0D02               	mullw	2
  8433  00113E  5005               	movf	SMA_filter@Massive,w,c
  8434  001140  24F3               	addwf	prodl,w,c
  8435  001142  6ED9               	movwf	fsr2l,c
  8436  001144  6ADA               	clrf	fsr2h,c
  8437  001146  C003  FFDE         	movff	SMA_filter@a,postinc2
  8438  00114A  C004  FFDD         	movff	SMA_filter@a+1,postdec2
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;Fuel_Calc.c: 192: Massive[4]=(n+1)&0x3;
  8442  00114E  2808               	incf	SMA_filter@n,w,c
  8443  001150  0B03               	andlw	3
  8444  001152  6E06               	movwf	??_SMA_filter& (0+255),c
  8445  001154  6A07               	clrf	(??_SMA_filter+1)& (0+255),c
  8446  001156  5005               	movf	SMA_filter@Massive,w,c
  8447  001158  6ED9               	movwf	fsr2l,c
  8448  00115A  6ADA               	clrf	fsr2h,c
  8449  00115C  0E08               	movlw	8
  8450  00115E  26D9               	addwf	fsr2l,f,c
  8451  001160  C006  FFDE         	movff	??_SMA_filter,postinc2
  8452  001164  C007  FFDD         	movff	??_SMA_filter+1,postdec2
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;Fuel_Calc.c: 193: if (Massive[5] < 4) {Massive[5]++;return (a);}
  8456  001168  5005               	movf	SMA_filter@Massive,w,c
  8457  00116A  6ED9               	movwf	fsr2l,c
  8458  00116C  6ADA               	clrf	fsr2h,c
  8459  00116E  0E0A               	movlw	10
  8460  001170  26D9               	addwf	fsr2l,f,c
  8461  001172  CFDE F006          	movff	postinc2,??_SMA_filter
  8462  001176  CFDD F007          	movff	postdec2,??_SMA_filter+1
  8463  00117A  0E04               	movlw	4
  8464  00117C  5C06               	subwf	??_SMA_filter,w,c
  8465  00117E  0E00               	movlw	0
  8466  001180  5807               	subwfb	??_SMA_filter+1,w,c
  8467  001182  E20D               	bc	i1l628
  8468                           
  8469                           ; BSR set to: 0
  8470  001184  5005               	movf	SMA_filter@Massive,w,c
  8471  001186  6ED9               	movwf	fsr2l,c
  8472  001188  6ADA               	clrf	fsr2h,c
  8473  00118A  0E0A               	movlw	10
  8474  00118C  26D9               	addwf	fsr2l,f,c
  8475  00118E  2ADE               	incf	postinc2,f,c
  8476  001190  0E00               	movlw	0
  8477  001192  22DD               	addwfc	postdec2,f,c
  8478                           
  8479                           ; BSR set to: 0
  8480  001194  C003  F003         	movff	SMA_filter@a,?_SMA_filter
  8481  001198  C004  F004         	movff	SMA_filter@a+1,?_SMA_filter+1
  8482  00119C  0C00               	retlw	0
  8483  00119E                     i1l628:
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;Fuel_Calc.c: 194: a=0;
  8487  00119E  6A03               	clrf	SMA_filter@a,c
  8488  0011A0  6A04               	clrf	SMA_filter@a+1,c
  8489                           
  8490                           ;Fuel_Calc.c: 195: for(char j=0;j<4;j++){a=a+Massive[j];}
  8491  0011A2  6A09               	clrf	SMA_filter@j,c
  8492  0011A4                     i1l3016:
  8493                           
  8494                           ; BSR set to: 0
  8495  0011A4  5009               	movf	SMA_filter@j,w,c
  8496  0011A6  0D02               	mullw	2
  8497  0011A8  5005               	movf	SMA_filter@Massive,w,c
  8498  0011AA  24F3               	addwf	prodl,w,c
  8499  0011AC  6ED9               	movwf	fsr2l,c
  8500  0011AE  6ADA               	clrf	fsr2h,c
  8501  0011B0  50DE               	movf	postinc2,w,c
  8502  0011B2  2603               	addwf	SMA_filter@a,f,c
  8503  0011B4  50DD               	movf	postdec2,w,c
  8504  0011B6  2204               	addwfc	SMA_filter@a+1,f,c
  8505                           
  8506                           ; BSR set to: 0
  8507  0011B8  2A09               	incf	SMA_filter@j,f,c
  8508                           
  8509                           ; BSR set to: 0
  8510  0011BA  0E03               	movlw	3
  8511  0011BC  6409               	cpfsgt	SMA_filter@j,c
  8512  0011BE  D7F2               	goto	i1l3016
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;Fuel_Calc.c: 197: return (unsigned int)a>>2;
  8516  0011C0  C003  F006         	movff	SMA_filter@a,??_SMA_filter
  8517  0011C4  C004  F007         	movff	SMA_filter@a+1,??_SMA_filter+1
  8518  0011C8  90D8               	bcf	status,0,c
  8519  0011CA  3207               	rrcf	??_SMA_filter+1,f,c
  8520  0011CC  3206               	rrcf	??_SMA_filter,f,c
  8521  0011CE  90D8               	bcf	status,0,c
  8522  0011D0  3207               	rrcf	??_SMA_filter+1,f,c
  8523  0011D2  3206               	rrcf	??_SMA_filter,f,c
  8524  0011D4  C006  F003         	movff	??_SMA_filter,?_SMA_filter
  8525  0011D8  C007  F004         	movff	??_SMA_filter+1,?_SMA_filter+1
  8526                           
  8527                           ; BSR set to: 0
  8528  0011DC  0C03               	retlw	3
  8529  0011DE                     __end_of_SMA_filter:
  8530                           	opt stack 0
  8531                           tblptru	equ	0xFF8
  8532                           tblptrh	equ	0xFF7
  8533                           tblptrl	equ	0xFF6
  8534                           tablat	equ	0xFF5
  8535                           prodh	equ	0xFF4
  8536                           prodl	equ	0xFF3
  8537                           intcon	equ	0xFF2
  8538                           intcon2	equ	0xFF1
  8539                           intcon3	equ	0xFF0
  8540                           postinc0	equ	0xFEE
  8541                           wreg	equ	0xFE8
  8542                           postdec1	equ	0xFE5
  8543                           fsr1h	equ	0xFE2
  8544                           fsr1l	equ	0xFE1
  8545                           bsr	equ	0xFE0
  8546                           indf2	equ	0xFDF
  8547                           postinc2	equ	0xFDE
  8548                           postdec2	equ	0xFDD
  8549                           fsr2h	equ	0xFDA
  8550                           fsr2l	equ	0xFD9
  8551                           status	equ	0xFD8
  8552                           
  8553 ;; *************** function _ReadADC *****************
  8554 ;; Defined at:
  8555 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcread.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  2    0[COMRAM] int 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;Total ram usage:        2 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    6
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_GetColt
  8580 ;;		_ADCread
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text40
  8585  001D56                     __ptext40:
  8586                           	opt stack 0
  8587  001D56                     _ReadADC:
  8588                           	opt stack 17
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;incstack = 0
  8592  001D56  50C4               	movf	4036,w,c	;volatile
  8593  001D58  6E02               	movwf	?_ReadADC+1,c
  8594  001D5A  50C3               	movf	4035,w,c	;volatile
  8595  001D5C  6E01               	movwf	?_ReadADC,c
  8596  001D5E  0012               	return	
  8597  001D60                     __end_of_ReadADC:
  8598                           	opt stack 0
  8599                           tblptru	equ	0xFF8
  8600                           tblptrh	equ	0xFF7
  8601                           tblptrl	equ	0xFF6
  8602                           tablat	equ	0xFF5
  8603                           prodh	equ	0xFF4
  8604                           prodl	equ	0xFF3
  8605                           intcon	equ	0xFF2
  8606                           intcon2	equ	0xFF1
  8607                           intcon3	equ	0xFF0
  8608                           postinc0	equ	0xFEE
  8609                           wreg	equ	0xFE8
  8610                           postdec1	equ	0xFE5
  8611                           fsr1h	equ	0xFE2
  8612                           fsr1l	equ	0xFE1
  8613                           bsr	equ	0xFE0
  8614                           indf2	equ	0xFDF
  8615                           postinc2	equ	0xFDE
  8616                           postdec2	equ	0xFDD
  8617                           fsr2h	equ	0xFDA
  8618                           fsr2l	equ	0xFD9
  8619                           status	equ	0xFD8
  8620                           
  8621 ;; *************** function _EX_filter *****************
  8622 ;; Defined at:
  8623 ;;		line 200 in file "D:\DOC\Project\WEGA\WEGA2\Fuel_Calc.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  a               2    2[COMRAM] unsigned int 
  8626 ;;  Massive         1    4[COMRAM] PTR unsigned int 
  8627 ;;		 -> EXT_array(12), MAP_array(12), 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  n               2    9[COMRAM] unsigned int 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  2    2[COMRAM] int 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8639 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;Total ram usage:        9 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    6
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_ADCread
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           	psect	text41
  8654  000BE2                     __ptext41:
  8655                           	opt stack 0
  8656  000BE2                     _EX_filter:
  8657                           	opt stack 17
  8658                           
  8659                           ;Fuel_Calc.c: 202: unsigned int n;
  8660                           ;Fuel_Calc.c: 203: Massive[3] = Massive[2];
  8661                           
  8662                           ;incstack = 0
  8663  000BE2  5005               	movf	EX_filter@Massive,w,c
  8664  000BE4  6ED9               	movwf	fsr2l,c
  8665  000BE6  6ADA               	clrf	fsr2h,c
  8666  000BE8  0E04               	movlw	4
  8667  000BEA  26D9               	addwf	fsr2l,f,c
  8668  000BEC  5005               	movf	EX_filter@Massive,w,c
  8669  000BEE  6EE1               	movwf	fsr1l,c
  8670  000BF0  6AE2               	clrf	fsr1h,c
  8671  000BF2  0E06               	movlw	6
  8672  000BF4  26E1               	addwf	fsr1l,f,c
  8673  000BF6  CFDE FFE6          	movff	postinc2,postinc1
  8674  000BFA  CFDD FFE5          	movff	postdec2,postdec1
  8675                           
  8676                           ;Fuel_Calc.c: 204: Massive[2] = Massive[1];
  8677  000BFE  5005               	movf	EX_filter@Massive,w,c
  8678  000C00  6ED9               	movwf	fsr2l,c
  8679  000C02  6ADA               	clrf	fsr2h,c
  8680  000C04  0E02               	movlw	2
  8681  000C06  26D9               	addwf	fsr2l,f,c
  8682  000C08  5005               	movf	EX_filter@Massive,w,c
  8683  000C0A  6EE1               	movwf	fsr1l,c
  8684  000C0C  6AE2               	clrf	fsr1h,c
  8685  000C0E  0E04               	movlw	4
  8686  000C10  26E1               	addwf	fsr1l,f,c
  8687  000C12  CFDE FFE6          	movff	postinc2,postinc1
  8688  000C16  CFDD FFE5          	movff	postdec2,postdec1
  8689                           
  8690                           ;Fuel_Calc.c: 205: Massive[1] = Massive[0];
  8691  000C1A  5005               	movf	EX_filter@Massive,w,c
  8692  000C1C  6ED9               	movwf	fsr2l,c
  8693  000C1E  6ADA               	clrf	fsr2h,c
  8694  000C20  5005               	movf	EX_filter@Massive,w,c
  8695  000C22  6EE1               	movwf	fsr1l,c
  8696  000C24  6AE2               	clrf	fsr1h,c
  8697  000C26  0E02               	movlw	2
  8698  000C28  26E1               	addwf	fsr1l,f,c
  8699  000C2A  CFDE FFE6          	movff	postinc2,postinc1
  8700  000C2E  CFDD FFE5          	movff	postdec2,postdec1
  8701                           
  8702                           ;Fuel_Calc.c: 206: Massive[0] = a;
  8703  000C32  5005               	movf	EX_filter@Massive,w,c
  8704  000C34  6ED9               	movwf	fsr2l,c
  8705  000C36  6ADA               	clrf	fsr2h,c
  8706  000C38  C003  FFDE         	movff	EX_filter@a,postinc2
  8707  000C3C  C004  FFDD         	movff	EX_filter@a+1,postdec2
  8708                           
  8709                           ;Fuel_Calc.c: 207: if (Massive[5] < 4) {Massive[5]++;return (a);}
  8710  000C40  5005               	movf	EX_filter@Massive,w,c
  8711  000C42  6ED9               	movwf	fsr2l,c
  8712  000C44  6ADA               	clrf	fsr2h,c
  8713  000C46  0E0A               	movlw	10
  8714  000C48  26D9               	addwf	fsr2l,f,c
  8715  000C4A  CFDE F006          	movff	postinc2,??_EX_filter
  8716  000C4E  CFDD F007          	movff	postdec2,??_EX_filter+1
  8717  000C52  0E04               	movlw	4
  8718  000C54  5C06               	subwf	??_EX_filter,w,c
  8719  000C56  0E00               	movlw	0
  8720  000C58  5807               	subwfb	??_EX_filter+1,w,c
  8721  000C5A  E20D               	bc	i1l3272
  8722  000C5C  5005               	movf	EX_filter@Massive,w,c
  8723  000C5E  6ED9               	movwf	fsr2l,c
  8724  000C60  6ADA               	clrf	fsr2h,c
  8725  000C62  0E0A               	movlw	10
  8726  000C64  26D9               	addwf	fsr2l,f,c
  8727  000C66  2ADE               	incf	postinc2,f,c
  8728  000C68  0E00               	movlw	0
  8729  000C6A  22DD               	addwfc	postdec2,f,c
  8730  000C6C  C003  F003         	movff	EX_filter@a,?_EX_filter
  8731  000C70  C004  F004         	movff	EX_filter@a+1,?_EX_filter+1
  8732  000C74  0C00               	retlw	0
  8733  000C76                     i1l3272:
  8734                           
  8735                           ;Fuel_Calc.c: 208: n = (Massive[3] + Massive[2])>>1;
  8736  000C76  5005               	movf	EX_filter@Massive,w,c
  8737  000C78  6ED9               	movwf	fsr2l,c
  8738  000C7A  6ADA               	clrf	fsr2h,c
  8739  000C7C  0E04               	movlw	4
  8740  000C7E  26D9               	addwf	fsr2l,f,c
  8741  000C80  CFDE F006          	movff	postinc2,??_EX_filter
  8742  000C84  CFDD F007          	movff	postdec2,??_EX_filter+1
  8743  000C88  5005               	movf	EX_filter@Massive,w,c
  8744  000C8A  6ED9               	movwf	fsr2l,c
  8745  000C8C  6ADA               	clrf	fsr2h,c
  8746  000C8E  0E06               	movlw	6
  8747  000C90  26D9               	addwf	fsr2l,f,c
  8748  000C92  CFDE F008          	movff	postinc2,??_EX_filter+2
  8749  000C96  CFDD F009          	movff	postdec2,??_EX_filter+3
  8750  000C9A  5006               	movf	??_EX_filter,w,c
  8751  000C9C  2608               	addwf	??_EX_filter+2,f,c
  8752  000C9E  5007               	movf	??_EX_filter+1,w,c
  8753  000CA0  2209               	addwfc	??_EX_filter+3,f,c
  8754  000CA2  90D8               	bcf	status,0,c
  8755  000CA4  3009               	rrcf	??_EX_filter+3,w,c
  8756  000CA6  6E0B               	movwf	EX_filter@n+1,c
  8757  000CA8  3008               	rrcf	??_EX_filter+2,w,c
  8758  000CAA  6E0A               	movwf	EX_filter@n,c
  8759                           
  8760                           ;Fuel_Calc.c: 209: n = (n + Massive[1])>>1;
  8761  000CAC  5005               	movf	EX_filter@Massive,w,c
  8762  000CAE  6ED9               	movwf	fsr2l,c
  8763  000CB0  6ADA               	clrf	fsr2h,c
  8764  000CB2  0E02               	movlw	2
  8765  000CB4  26D9               	addwf	fsr2l,f,c
  8766  000CB6  CFDE F006          	movff	postinc2,??_EX_filter
  8767  000CBA  CFDD F007          	movff	postdec2,??_EX_filter+1
  8768  000CBE  500A               	movf	EX_filter@n,w,c
  8769  000CC0  2606               	addwf	??_EX_filter,f,c
  8770  000CC2  500B               	movf	EX_filter@n+1,w,c
  8771  000CC4  2207               	addwfc	??_EX_filter+1,f,c
  8772  000CC6  90D8               	bcf	status,0,c
  8773  000CC8  3007               	rrcf	??_EX_filter+1,w,c
  8774  000CCA  6E0B               	movwf	EX_filter@n+1,c
  8775  000CCC  3006               	rrcf	??_EX_filter,w,c
  8776  000CCE  6E0A               	movwf	EX_filter@n,c
  8777                           
  8778                           ;Fuel_Calc.c: 210: n = (n + Massive[0])>>1;
  8779  000CD0  5005               	movf	EX_filter@Massive,w,c
  8780  000CD2  6ED9               	movwf	fsr2l,c
  8781  000CD4  6ADA               	clrf	fsr2h,c
  8782  000CD6  CFDE F006          	movff	postinc2,??_EX_filter
  8783  000CDA  CFDD F007          	movff	postdec2,??_EX_filter+1
  8784  000CDE  500A               	movf	EX_filter@n,w,c
  8785  000CE0  2606               	addwf	??_EX_filter,f,c
  8786  000CE2  500B               	movf	EX_filter@n+1,w,c
  8787  000CE4  2207               	addwfc	??_EX_filter+1,f,c
  8788  000CE6  90D8               	bcf	status,0,c
  8789  000CE8  3007               	rrcf	??_EX_filter+1,w,c
  8790  000CEA  6E0B               	movwf	EX_filter@n+1,c
  8791  000CEC  3006               	rrcf	??_EX_filter,w,c
  8792  000CEE  6E0A               	movwf	EX_filter@n,c
  8793                           
  8794                           ;Fuel_Calc.c: 212: return (n);
  8795  000CF0  C00A  F003         	movff	EX_filter@n,?_EX_filter
  8796  000CF4  C00B  F004         	movff	EX_filter@n+1,?_EX_filter+1
  8797  000CF8  0012               	return	
  8798  000CFA                     __end_of_EX_filter:
  8799                           	opt stack 0
  8800                           tblptru	equ	0xFF8
  8801                           tblptrh	equ	0xFF7
  8802                           tblptrl	equ	0xFF6
  8803                           tablat	equ	0xFF5
  8804                           prodh	equ	0xFF4
  8805                           prodl	equ	0xFF3
  8806                           intcon	equ	0xFF2
  8807                           intcon2	equ	0xFF1
  8808                           intcon3	equ	0xFF0
  8809                           postinc0	equ	0xFEE
  8810                           wreg	equ	0xFE8
  8811                           postinc1	equ	0xFE6
  8812                           postdec1	equ	0xFE5
  8813                           fsr1h	equ	0xFE2
  8814                           fsr1l	equ	0xFE1
  8815                           bsr	equ	0xFE0
  8816                           indf2	equ	0xFDF
  8817                           postinc2	equ	0xFDE
  8818                           postdec2	equ	0xFDD
  8819                           fsr2h	equ	0xFDA
  8820                           fsr2l	equ	0xFD9
  8821                           status	equ	0xFD8
  8822                           
  8823 ;; *************** function _high_isr *****************
  8824 ;; Defined at:
  8825 ;;		line 426 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;		None               void
  8832 ;; Registers used:
  8833 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8841 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8842 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8843 ;;Total ram usage:        5 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:    5
  8846 ;; This function calls:
  8847 ;;		_CCP1Event
  8848 ;;		_CCP2Event
  8849 ;;		_CCP3Event
  8850 ;;		_SPARKEvent
  8851 ;;		_TMR1Event
  8852 ;;		i2_Spark2
  8853 ;; This function is called by:
  8854 ;;		Interrupt level 2
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	intcode
  8859  000008                     __pintcode:
  8860                           	opt stack 0
  8861  000008                     _high_isr:
  8862                           	opt stack 16
  8863                           
  8864                           ;incstack = 0
  8865  000008  CFF3 F0D5          	movff	prodl,??_high_isr
  8866  00000C  CFF6 F0D6          	movff	tblptrl,??_high_isr+1
  8867  000010  CFF7 F0D7          	movff	tblptrh,??_high_isr+2
  8868  000014  EF3D  F00C         	goto	int_func
  8869                           tblptru	equ	0xFF8
  8870                           tblptrh	equ	0xFF7
  8871                           tblptrl	equ	0xFF6
  8872                           tablat	equ	0xFF5
  8873                           prodh	equ	0xFF4
  8874                           prodl	equ	0xFF3
  8875                           intcon	equ	0xFF2
  8876                           intcon2	equ	0xFF1
  8877                           intcon3	equ	0xFF0
  8878                           postinc0	equ	0xFEE
  8879                           wreg	equ	0xFE8
  8880                           postinc1	equ	0xFE6
  8881                           postdec1	equ	0xFE5
  8882                           fsr1h	equ	0xFE2
  8883                           fsr1l	equ	0xFE1
  8884                           bsr	equ	0xFE0
  8885                           indf2	equ	0xFDF
  8886                           postinc2	equ	0xFDE
  8887                           postdec2	equ	0xFDD
  8888                           fsr2h	equ	0xFDA
  8889                           fsr2l	equ	0xFD9
  8890                           status	equ	0xFD8
  8891                           
  8892                           	psect	intcode_body
  8893  00187A                     __pintcode_body:
  8894                           	opt stack 16
  8895  00187A                     int_func:
  8896                           	opt stack 16
  8897  00187A  CFF8 F0D8          	movff	tblptru,??_high_isr+3
  8898  00187E  CFF5 F0D9          	movff	tablat,??_high_isr+4
  8899                           
  8900                           ;main.c: 429: if (INT0IF) {INT0IF=0;SPARKEvent();}
  8901  001882  A2F2               	btfss	intcon,1,c	;volatile
  8902  001884  D003               	goto	i2l5260
  8903  001886  92F2               	bcf	intcon,1,c	;volatile
  8904  001888  EC91  F00D         	call	_SPARKEvent	;wreg free
  8905  00188C                     i2l5260:
  8906                           
  8907                           ;main.c: 431: if (TMR1IF) {TMR1IF=0;TMR1Event();}
  8908  00188C  A09E               	btfss	3998,0,c	;volatile
  8909  00188E  D003               	goto	i2l5266
  8910  001890  909E               	bcf	3998,0,c	;volatile
  8911  001892  ECA4  F00E         	call	_TMR1Event	;wreg free
  8912  001896                     i2l5266:
  8913                           
  8914                           ;main.c: 433: if (INT1IF) {INT1IF=0;Spark2();}
  8915  001896  A0F0               	btfss	intcon3,0,c	;volatile
  8916  001898  D003               	goto	i2l5272
  8917  00189A  90F0               	bcf	intcon3,0,c	;volatile
  8918  00189C  ECDE  F00D         	call	i2_Spark2	;wreg free
  8919  0018A0                     i2l5272:
  8920                           
  8921                           ;main.c: 435: if (CCP1IF) {CCP1IF=0;CCP1Event();}
  8922  0018A0  A49E               	btfss	3998,2,c	;volatile
  8923  0018A2  D003               	goto	i2l5278
  8924  0018A4  949E               	bcf	3998,2,c	;volatile
  8925  0018A6  ECB7  F00E         	call	_CCP1Event	;wreg free
  8926  0018AA                     i2l5278:
  8927                           
  8928                           ;main.c: 436: if (CCP2IF) {CCP2IF=0;CCP2Event();}
  8929  0018AA  A0A1               	btfss	4001,0,c	;volatile
  8930  0018AC  D003               	goto	i2l5284
  8931  0018AE  90A1               	bcf	4001,0,c	;volatile
  8932  0018B0  ECB4  F00E         	call	_CCP2Event	;wreg free
  8933  0018B4                     i2l5284:
  8934                           
  8935                           ;main.c: 437: if (CCP3IF) {CCP3IF=0;CCP3Event();}
  8936  0018B4  A07B               	btfss	3963,0,c	;volatile
  8937  0018B6  D003               	goto	i2l515
  8938  0018B8  907B               	bcf	3963,0,c	;volatile
  8939  0018BA  ECB0  F00E         	call	_CCP3Event	;wreg free
  8940  0018BE                     i2l515:
  8941  0018BE  C0D9  FFF5         	movff	??_high_isr+4,tablat
  8942  0018C2  C0D8  FFF8         	movff	??_high_isr+3,tblptru
  8943  0018C6  C0D7  FFF7         	movff	??_high_isr+2,tblptrh
  8944  0018CA  C0D6  FFF6         	movff	??_high_isr+1,tblptrl
  8945  0018CE  C0D5  FFF3         	movff	??_high_isr,prodl
  8946  0018D2  0011               	retfie		f
  8947  0018D4                     __end_of_high_isr:
  8948                           	opt stack 0
  8949                           tblptru	equ	0xFF8
  8950                           tblptrh	equ	0xFF7
  8951                           tblptrl	equ	0xFF6
  8952                           tablat	equ	0xFF5
  8953                           prodh	equ	0xFF4
  8954                           prodl	equ	0xFF3
  8955                           intcon	equ	0xFF2
  8956                           intcon2	equ	0xFF1
  8957                           intcon3	equ	0xFF0
  8958                           postinc0	equ	0xFEE
  8959                           wreg	equ	0xFE8
  8960                           postinc1	equ	0xFE6
  8961                           postdec1	equ	0xFE5
  8962                           fsr1h	equ	0xFE2
  8963                           fsr1l	equ	0xFE1
  8964                           bsr	equ	0xFE0
  8965                           indf2	equ	0xFDF
  8966                           postinc2	equ	0xFDE
  8967                           postdec2	equ	0xFDD
  8968                           fsr2h	equ	0xFDA
  8969                           fsr2l	equ	0xFD9
  8970                           status	equ	0xFD8
  8971                           
  8972 ;; *************** function i2_Spark2 *****************
  8973 ;; Defined at:
  8974 ;;		line 318 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;		None
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;		None               void
  8981 ;; Registers used:
  8982 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : F/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8992 ;;Total ram usage:        0 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:    1
  8995 ;; This function calls:
  8996 ;;		i2_OpenECompare3
  8997 ;;		i2___lwdiv
  8998 ;; This function is called by:
  8999 ;;		_high_isr
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text43
  9004  001BBC                     __ptext43:
  9005                           	opt stack 0
  9006  001BBC                     i2_Spark2:
  9007                           	opt stack 19
  9008                           
  9009                           ;main.c: 320: if (ECU.Mtr_On==0) {LD3=1;} else {OpenECompare3(0b11111010&0b11001111&0b11
      +                          111111, TMR1+(TMRC/10));}
  9010                           
  9011                           ;incstack = 0
  9012  001BBC  0100               	movlb	0	; () banked
  9013  001BBE  B169               	btfsc	(_ECU+4)& (0+255),0,b	;volatile
  9014  001BC0  D002               	goto	i2l5144
  9015                           
  9016                           ; BSR set to: 0
  9017  001BC2  868C               	bsf	3980,3,c	;volatile
  9018  001BC4  0012               	return	
  9019  001BC6                     i2l5144:
  9020                           
  9021                           ; BSR set to: 0
  9022  001BC6  C03B  F0C7         	movff	_TMRC,i2___lwdiv@dividend	;volatile
  9023  001BCA  C03C  F0C8         	movff	_TMRC+1,i2___lwdiv@dividend+1	;volatile
  9024  001BCE  6BCA               	clrf	(i2___lwdiv@divisor+1)& (0+255),b
  9025  001BD0  0E0A               	movlw	10
  9026  001BD2  6FC9               	movwf	i2___lwdiv@divisor& (0+255),b
  9027  001BD4  ECE3  F00C         	call	i2___lwdiv	;wreg free
  9028  001BD8  50CE               	movf	4046,w,c	;volatile
  9029  001BDA  25C7               	addwf	?i2___lwdiv& (0+255),w,b
  9030  001BDC  6FCE               	movwf	i2OpenECompare3@period& (0+255),b
  9031  001BDE  50CF               	movf	4047,w,c	;volatile
  9032  001BE0  21C8               	addwfc	(?i2___lwdiv+1)& (0+255),w,b
  9033  001BE2  6FCF               	movwf	(i2OpenECompare3@period+1)& (0+255),b
  9034  001BE4  0ECA               	movlw	202
  9035  001BE6  EFEF  F008         	goto	i2_OpenECompare3
  9036  001BEA                     __end_ofi2_Spark2:
  9037                           	opt stack 0
  9038                           tblptru	equ	0xFF8
  9039                           tblptrh	equ	0xFF7
  9040                           tblptrl	equ	0xFF6
  9041                           tablat	equ	0xFF5
  9042                           prodh	equ	0xFF4
  9043                           prodl	equ	0xFF3
  9044                           intcon	equ	0xFF2
  9045                           intcon2	equ	0xFF1
  9046                           intcon3	equ	0xFF0
  9047                           postinc0	equ	0xFEE
  9048                           wreg	equ	0xFE8
  9049                           postinc1	equ	0xFE6
  9050                           postdec1	equ	0xFE5
  9051                           fsr1h	equ	0xFE2
  9052                           fsr1l	equ	0xFE1
  9053                           bsr	equ	0xFE0
  9054                           indf2	equ	0xFDF
  9055                           postinc2	equ	0xFDE
  9056                           postdec2	equ	0xFDD
  9057                           fsr2h	equ	0xFDA
  9058                           fsr2l	equ	0xFD9
  9059                           status	equ	0xFD8
  9060                           
  9061 ;; *************** function i2___lwdiv *****************
  9062 ;; Defined at:
  9063 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  dividend        2    0[BANK0 ] unsigned int 
  9066 ;;  divisor         2    2[BANK0 ] unsigned int 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;  __lwdiv         2    5[BANK0 ] unsigned int 
  9069 ;;  __lwdiv         1    4[BANK0 ] unsigned char 
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  2    0[BANK0 ] unsigned int 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0
  9074 ;; Tracked objects:
  9075 ;;		On entry : F/0
  9076 ;;		On exit  : F/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9079 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9080 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;Total ram usage:        7 bytes
  9084 ;; Hardware stack levels used:    1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		i2_Spark2
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text44
  9093  0019C6                     __ptext44:
  9094                           	opt stack 0
  9095  0019C6                     i2___lwdiv:
  9096                           	opt stack 19
  9097                           
  9098                           ; BSR set to: 0
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;incstack = 0
  9102  0019C6  6BCC               	clrf	i2___lwdiv@quotient& (0+255),b
  9103  0019C8  6BCD               	clrf	(i2___lwdiv@quotient+1)& (0+255),b
  9104                           
  9105                           ; BSR set to: 0
  9106  0019CA  51CA               	movf	(i2___lwdiv@divisor+1)& (0+255),w,b
  9107  0019CC  11C9               	iorwf	i2___lwdiv@divisor& (0+255),w,b
  9108  0019CE  E01B               	bz	i2l1491
  9109                           
  9110                           ; BSR set to: 0
  9111  0019D0  0E01               	movlw	1
  9112  0019D2  6FCB               	movwf	i2___lwdiv@counter& (0+255),b
  9113  0019D4  D004               	goto	i2l4714
  9114  0019D6                     i2l4712:
  9115                           
  9116                           ; BSR set to: 0
  9117  0019D6  90D8               	bcf	status,0,c
  9118  0019D8  37C9               	rlcf	i2___lwdiv@divisor& (0+255),f,b
  9119  0019DA  37CA               	rlcf	(i2___lwdiv@divisor+1)& (0+255),f,b
  9120  0019DC  2BCB               	incf	i2___lwdiv@counter& (0+255),f,b
  9121  0019DE                     i2l4714:
  9122                           
  9123                           ; BSR set to: 0
  9124  0019DE  AFCA               	btfss	(i2___lwdiv@divisor+1)& (0+255),7,b
  9125  0019E0  D7FA               	goto	i2l4712
  9126  0019E2                     i2l4716:
  9127                           
  9128                           ; BSR set to: 0
  9129  0019E2  90D8               	bcf	status,0,c
  9130  0019E4  37CC               	rlcf	i2___lwdiv@quotient& (0+255),f,b
  9131  0019E6  37CD               	rlcf	(i2___lwdiv@quotient+1)& (0+255),f,b
  9132                           
  9133                           ; BSR set to: 0
  9134  0019E8  51C9               	movf	i2___lwdiv@divisor& (0+255),w,b
  9135  0019EA  5DC7               	subwf	i2___lwdiv@dividend& (0+255),w,b
  9136  0019EC  51CA               	movf	(i2___lwdiv@divisor+1)& (0+255),w,b
  9137  0019EE  59C8               	subwfb	(i2___lwdiv@dividend+1)& (0+255),w,b
  9138  0019F0  E305               	bnc	i2l4724
  9139                           
  9140                           ; BSR set to: 0
  9141  0019F2  51C9               	movf	i2___lwdiv@divisor& (0+255),w,b
  9142  0019F4  5FC7               	subwf	i2___lwdiv@dividend& (0+255),f,b
  9143  0019F6  51CA               	movf	(i2___lwdiv@divisor+1)& (0+255),w,b
  9144  0019F8  5BC8               	subwfb	(i2___lwdiv@dividend+1)& (0+255),f,b
  9145                           
  9146                           ; BSR set to: 0
  9147  0019FA  81CC               	bsf	i2___lwdiv@quotient& (0+255),0,b
  9148  0019FC                     i2l4724:
  9149                           
  9150                           ; BSR set to: 0
  9151  0019FC  90D8               	bcf	status,0,c
  9152  0019FE  33CA               	rrcf	(i2___lwdiv@divisor+1)& (0+255),f,b
  9153  001A00  33C9               	rrcf	i2___lwdiv@divisor& (0+255),f,b
  9154                           
  9155                           ; BSR set to: 0
  9156  001A02  2FCB               	decfsz	i2___lwdiv@counter& (0+255),f,b
  9157  001A04  D7EE               	goto	i2l4716
  9158  001A06                     i2l1491:
  9159                           
  9160                           ; BSR set to: 0
  9161  001A06  C0CC  F0C7         	movff	i2___lwdiv@quotient,?i2___lwdiv
  9162  001A0A  C0CD  F0C8         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  9163                           
  9164                           ; BSR set to: 0
  9165  001A0E  0012               	return	
  9166  001A10                     __end_ofi2___lwdiv:
  9167                           	opt stack 0
  9168                           tblptru	equ	0xFF8
  9169                           tblptrh	equ	0xFF7
  9170                           tblptrl	equ	0xFF6
  9171                           tablat	equ	0xFF5
  9172                           prodh	equ	0xFF4
  9173                           prodl	equ	0xFF3
  9174                           intcon	equ	0xFF2
  9175                           intcon2	equ	0xFF1
  9176                           intcon3	equ	0xFF0
  9177                           postinc0	equ	0xFEE
  9178                           wreg	equ	0xFE8
  9179                           postinc1	equ	0xFE6
  9180                           postdec1	equ	0xFE5
  9181                           fsr1h	equ	0xFE2
  9182                           fsr1l	equ	0xFE1
  9183                           bsr	equ	0xFE0
  9184                           indf2	equ	0xFDF
  9185                           postinc2	equ	0xFDE
  9186                           postdec2	equ	0xFDD
  9187                           fsr2h	equ	0xFDA
  9188                           fsr2l	equ	0xFD9
  9189                           status	equ	0xFD8
  9190                           
  9191 ;; *************** function i2_OpenECompare3 *****************
  9192 ;; Defined at:
  9193 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\CMP\em3open.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  config          1    wreg     unsigned char 
  9196 ;;  period          2    7[BANK0 ] unsigned int 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  config          1   12[BANK0 ] unsigned char 
  9199 ;; Return value:  Size  Location     Type
  9200 ;;		None               void
  9201 ;; Registers used:
  9202 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9203 ;; Tracked objects:
  9204 ;;		On entry : F/0
  9205 ;;		On exit  : F/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;Total ram usage:        6 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; This function calls:
  9215 ;;		Nothing
  9216 ;; This function is called by:
  9217 ;;		i2_Spark2
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           	psect	text45
  9222  0011DE                     __ptext45:
  9223                           	opt stack 0
  9224  0011DE                     i2_OpenECompare3:
  9225                           	opt stack 19
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;incstack = 0
  9229                           ;i2OpenECompare3@config stored from wreg
  9230  0011DE  6FD3               	movwf	i2OpenECompare3@config& (0+255),b
  9231                           
  9232                           ; BSR set to: 0
  9233  0011E0  0E05               	movlw	5
  9234  0011E2  6EF6               	movwf	tblptrl,c
  9235  0011E4                     	if	1	;There is more than 1 active tblptr byte
  9236  0011E4  6AF7               	clrf	tblptrh,c
  9237  0011E6                     	endif
  9238  0011E6                     	if	1	;There are 3 active tblptr bytes
  9239  0011E6  0E30               	movlw	48
  9240  0011E8  6EF8               	movwf	tblptru,c
  9241  0011EA                     	endif
  9242  0011EA  0008               	tblrd		*
  9243  0011EC  CFF5 F0D0          	movff	tablat,??i2_OpenECompare3
  9244  0011F0  A1D0               	btfss	??i2_OpenECompare3& (0+255),0,b
  9245  0011F2  D01B               	goto	i2l926
  9246                           
  9247                           ; BSR set to: 0
  9248  0011F4  CF66 F0D0          	movff	3942,??i2_OpenECompare3	;volatile
  9249  0011F8  0E0F               	movlw	15
  9250  0011FA  17D0               	andwf	??i2_OpenECompare3& (0+255),f,b
  9251  0011FC  51D0               	movf	??i2_OpenECompare3& (0+255),w,b
  9252  0011FE  0A0A               	xorlw	10
  9253  001200  E002               	bz	i2l4688
  9254                           
  9255                           ; BSR set to: 0
  9256  001202  9A93               	bcf	3987,5,c	;volatile
  9257  001204  D012               	goto	i2l926
  9258  001206                     i2l4688:
  9259                           
  9260                           ; BSR set to: 0
  9261  001206  0E05               	movlw	5
  9262  001208  6EF6               	movwf	tblptrl,c
  9263  00120A                     	if	1	;There is more than 1 active tblptr byte
  9264  00120A  6AF7               	clrf	tblptrh,c
  9265  00120C                     	endif
  9266  00120C                     	if	1	;There are 3 active tblptr bytes
  9267  00120C  0E30               	movlw	48
  9268  00120E  6EF8               	movwf	tblptru,c
  9269  001210                     	endif
  9270  001210  0008               	tblrd		*
  9271  001212  CFF5 F0D0          	movff	tablat,??i2_OpenECompare3
  9272  001216  A5D0               	btfss	??i2_OpenECompare3& (0+255),2,b
  9273  001218  D008               	goto	i2l926
  9274                           
  9275                           ; BSR set to: 0
  9276  00121A  CF66 F0D0          	movff	3942,??i2_OpenECompare3	;volatile
  9277  00121E  0E0F               	movlw	15
  9278  001220  17D0               	andwf	??i2_OpenECompare3& (0+255),f,b
  9279  001222  51D0               	movf	??i2_OpenECompare3& (0+255),w,b
  9280  001224  0A0A               	xorlw	10
  9281  001226  A4D8               	btfss	status,2,c
  9282                           
  9283                           ; BSR set to: 0
  9284  001228  9096               	bcf	3990,0,c	;volatile
  9285  00122A                     i2l926:
  9286                           
  9287                           ; BSR set to: 0
  9288  00122A  C0CE  FF5E         	movff	i2OpenECompare3@period,3934	;volatile
  9289                           
  9290                           ; BSR set to: 0
  9291  00122E  C0CF  F0D0         	movff	i2OpenECompare3@period+1,??i2_OpenECompare3
  9292  001232  C0D0  F0D1         	movff	??i2_OpenECompare3,??i2_OpenECompare3+1
  9293  001236  6BD2               	clrf	(??i2_OpenECompare3+2)& (0+255),b
  9294  001238  51D1               	movf	(??i2_OpenECompare3+1)& (0+255),w,b
  9295  00123A  010F               	movlb	15	; () banked
  9296  00123C  6F5F               	movwf	95,b	;volatile
  9297                           
  9298                           ; BSR set to: 15
  9299  00123E  0100               	movlb	0	; () banked
  9300  001240  51D3               	movf	i2OpenECompare3@config& (0+255),w,b
  9301  001242  0B0F               	andlw	15
  9302  001244  010F               	movlb	15	; () banked
  9303  001246  6F5D               	movwf	93,b	;volatile
  9304                           
  9305                           ; BSR set to: 15
  9306  001248  0E3F               	movlw	63
  9307  00124A  1749               	andwf	73,f,b	;volatile
  9308                           
  9309                           ; BSR set to: 15
  9310  00124C  C0D3  F0D0         	movff	i2OpenECompare3@config,??i2_OpenECompare3
  9311  001250  0E30               	movlw	48
  9312  001252  0100               	movlb	0	; () banked
  9313  001254  17D0               	andwf	??i2_OpenECompare3& (0+255),f,b
  9314  001256  90D8               	bcf	status,0,c
  9315  001258  37D0               	rlcf	??i2_OpenECompare3& (0+255),f,b
  9316  00125A  90D8               	bcf	status,0,c
  9317  00125C  35D0               	rlcf	??i2_OpenECompare3& (0+255),w,b
  9318  00125E  010F               	movlb	15	; () banked
  9319  001260  1349               	iorwf	73,f,b	;volatile
  9320                           
  9321                           ; BSR set to: 15
  9322  001262  0100               	movlb	0	; () banked
  9323  001264  AFD3               	btfss	i2OpenECompare3@config& (0+255),7,b
  9324  001266  0012               	return	
  9325                           
  9326                           ; BSR set to: 0
  9327  001268  907B               	bcf	3963,0,c	;volatile
  9328  00126A  807A               	bsf	3962,0,c	;volatile
  9329                           
  9330                           ; BSR set to: 0
  9331  00126C  0012               	return	
  9332  00126E                     __end_ofi2_OpenECompare3:
  9333                           	opt stack 0
  9334                           tblptru	equ	0xFF8
  9335                           tblptrh	equ	0xFF7
  9336                           tblptrl	equ	0xFF6
  9337                           tablat	equ	0xFF5
  9338                           prodh	equ	0xFF4
  9339                           prodl	equ	0xFF3
  9340                           intcon	equ	0xFF2
  9341                           intcon2	equ	0xFF1
  9342                           intcon3	equ	0xFF0
  9343                           postinc0	equ	0xFEE
  9344                           wreg	equ	0xFE8
  9345                           postinc1	equ	0xFE6
  9346                           postdec1	equ	0xFE5
  9347                           fsr1h	equ	0xFE2
  9348                           fsr1l	equ	0xFE1
  9349                           bsr	equ	0xFE0
  9350                           indf2	equ	0xFDF
  9351                           postinc2	equ	0xFDE
  9352                           postdec2	equ	0xFDD
  9353                           fsr2h	equ	0xFDA
  9354                           fsr2l	equ	0xFD9
  9355                           status	equ	0xFD8
  9356                           
  9357 ;; *************** function _TMR1Event *****************
  9358 ;; Defined at:
  9359 ;;		line 176 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;		None
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;		None
  9364 ;; Return value:  Size  Location     Type
  9365 ;;		None               void
  9366 ;; Registers used:
  9367 ;;		cstack
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;Total ram usage:        0 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; Hardware stack levels required when called:    1
  9380 ;; This function calls:
  9381 ;;		i2_Motor_stopped
  9382 ;; This function is called by:
  9383 ;;		_high_isr
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text46
  9388  001D48                     __ptext46:
  9389                           	opt stack 0
  9390  001D48                     _TMR1Event:
  9391                           	opt stack 19
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;incstack = 0
  9395  001D48  90CD               	bcf	4045,0,c	;volatile
  9396  001D4A  6A3B               	clrf	_TMRC,c	;volatile
  9397  001D4C  6A3C               	clrf	_TMRC+1,c	;volatile
  9398  001D4E  6ACE               	clrf	4046,c	;volatile
  9399  001D50  6ACF               	clrf	4047,c	;volatile
  9400                           
  9401                           ;main.c: 177: Motor_stopped();
  9402  001D52  EFF5  F00D         	goto	i2_Motor_stopped	;wreg free
  9403  001D56                     __end_of_TMR1Event:
  9404                           	opt stack 0
  9405                           tblptru	equ	0xFF8
  9406                           tblptrh	equ	0xFF7
  9407                           tblptrl	equ	0xFF6
  9408                           tablat	equ	0xFF5
  9409                           prodh	equ	0xFF4
  9410                           prodl	equ	0xFF3
  9411                           intcon	equ	0xFF2
  9412                           intcon2	equ	0xFF1
  9413                           intcon3	equ	0xFF0
  9414                           postinc0	equ	0xFEE
  9415                           wreg	equ	0xFE8
  9416                           postinc1	equ	0xFE6
  9417                           postdec1	equ	0xFE5
  9418                           fsr1h	equ	0xFE2
  9419                           fsr1l	equ	0xFE1
  9420                           bsr	equ	0xFE0
  9421                           indf2	equ	0xFDF
  9422                           postinc2	equ	0xFDE
  9423                           postdec2	equ	0xFDD
  9424                           fsr2h	equ	0xFDA
  9425                           fsr2l	equ	0xFD9
  9426                           status	equ	0xFD8
  9427                           
  9428 ;; *************** function i2_Motor_stopped *****************
  9429 ;; Defined at:
  9430 ;;		line 152 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;		None
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;		None
  9435 ;; Return value:  Size  Location     Type
  9436 ;;		None               void
  9437 ;; Registers used:
  9438 ;;		None
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;Total ram usage:        0 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		_TMR1Event
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           	psect	text47
  9458  001BEA                     __ptext47:
  9459                           	opt stack 0
  9460  001BEA                     i2_Motor_stopped:
  9461                           	opt stack 19
  9462                           
  9463                           ;main.c: 154: ECU.RPM=0;ECU.Mtr_On=0;ECU.AFSTEN=1;Flag_Speed_equal=0;
  9464                           
  9465                           ;incstack = 0
  9466  001BEA  0100               	movlb	0	; () banked
  9467  001BEC  6B72               	clrf	(_ECU+13)& (0+255),b	;volatile
  9468  001BEE  9169               	bcf	(_ECU+4)& (0+255),0,b	;volatile
  9469  001BF0  8F69               	bsf	(_ECU+4)& (0+255),7,b	;volatile
  9470  001BF2  9E4B               	bcf	_Flag_Speed_equal/(0+8),_Flag_Speed_equal& (0+7),c	;volatile
  9471                           
  9472                           ;main.c: 155: ECU.Accel=0;ECU.D_Accel=0;ECU.Econ=0;ECU.EMR=0;
  9473  001BF4  9769               	bcf	(_ECU+4)& (0+255),3,b	;volatile
  9474  001BF6  9969               	bcf	(_ECU+4)& (0+255),4,b	;volatile
  9475  001BF8  9B69               	bcf	(_ECU+4)& (0+255),5,b	;volatile
  9476  001BFA  9D69               	bcf	(_ECU+4)& (0+255),6,b	;volatile
  9477                           
  9478                           ;main.c: 156: LD2=0;ECU.SeqINJ=0;
  9479  001BFC  948C               	bcf	3980,2,c	;volatile
  9480  001BFE  957F               	bcf	(_ECU+26)& (0+255),2,b	;volatile
  9481                           
  9482                           ;main.c: 157: LC0=0;LC1=0;LC2=0;LC3=0;LC4=0;LC5=0;
  9483  001C00  908B               	bcf	3979,0,c	;volatile
  9484  001C02  928B               	bcf	3979,1,c	;volatile
  9485  001C04  948B               	bcf	3979,2,c	;volatile
  9486  001C06  968B               	bcf	3979,3,c	;volatile
  9487  001C08  988B               	bcf	3979,4,c	;volatile
  9488  001C0A  9A8B               	bcf	3979,5,c	;volatile
  9489                           
  9490                           ;main.c: 158: LD3=0;
  9491  001C0C  968C               	bcf	3980,3,c	;volatile
  9492                           
  9493                           ;main.c: 159: if (ECU.Mtr_On){ECU.COMP=1;}
  9494  001C0E  B169               	btfsc	(_ECU+4)& (0+255),0,b	;volatile
  9495                           
  9496                           ; BSR set to: 0
  9497  001C10  876A               	bsf	(_ECU+5)& (0+255),3,b	;volatile
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;main.c: 160: Flag_Init_Pos=1;
  9501  001C12  0100               	movlb	(_Flag_Init_Pos/(0+8)) shr (0+8)
  9502  001C14  884B               	bsf	_Flag_Init_Pos/(0+8),_Flag_Init_Pos& (0+7),c	;volatile
  9503  001C16  0012               	return	
  9504  001C18                     __end_ofi2_Motor_stopped:
  9505                           	opt stack 0
  9506                           tblptru	equ	0xFF8
  9507                           tblptrh	equ	0xFF7
  9508                           tblptrl	equ	0xFF6
  9509                           tablat	equ	0xFF5
  9510                           prodh	equ	0xFF4
  9511                           prodl	equ	0xFF3
  9512                           intcon	equ	0xFF2
  9513                           intcon2	equ	0xFF1
  9514                           intcon3	equ	0xFF0
  9515                           postinc0	equ	0xFEE
  9516                           wreg	equ	0xFE8
  9517                           postinc1	equ	0xFE6
  9518                           postdec1	equ	0xFE5
  9519                           fsr1h	equ	0xFE2
  9520                           fsr1l	equ	0xFE1
  9521                           bsr	equ	0xFE0
  9522                           indf2	equ	0xFDF
  9523                           postinc2	equ	0xFDE
  9524                           postdec2	equ	0xFDD
  9525                           fsr2h	equ	0xFDA
  9526                           fsr2l	equ	0xFD9
  9527                           status	equ	0xFD8
  9528                           
  9529 ;; *************** function _SPARKEvent *****************
  9530 ;; Defined at:
  9531 ;;		line 308 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;		None
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;		None
  9536 ;; Return value:  Size  Location     Type
  9537 ;;		None               void
  9538 ;; Registers used:
  9539 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/0
  9542 ;;		On exit  : F/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;Total ram usage:        0 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; Hardware stack levels required when called:    4
  9552 ;; This function calls:
  9553 ;;		_SetInjection
  9554 ;; This function is called by:
  9555 ;;		_high_isr
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text48
  9560  001B22                     __ptext48:
  9561                           	opt stack 0
  9562  001B22                     _SPARKEvent:
  9563                           	opt stack 16
  9564                           
  9565                           ;main.c: 310: TMR1IE=0;TMR1ON=0;TMRC=TMR1;TMR1=0;
  9566                           
  9567                           ;incstack = 0
  9568  001B22  909D               	bcf	3997,0,c	;volatile
  9569  001B24  90CD               	bcf	4045,0,c	;volatile
  9570  001B26  CFCE F03B          	movff	4046,_TMRC	;volatile
  9571  001B2A  CFCF F03C          	movff	4047,_TMRC+1	;volatile
  9572  001B2E  6ACE               	clrf	4046,c	;volatile
  9573  001B30  6ACF               	clrf	4047,c	;volatile
  9574                           
  9575                           ;main.c: 311: TMR1ON=1;PUMPCounter=0; LD0=1;TMR1IF=0;TMR1IE=1;
  9576  001B32  80CD               	bsf	4045,0,c	;volatile
  9577  001B34  6A39               	clrf	_PUMPCounter,c	;volatile
  9578  001B36  6A3A               	clrf	_PUMPCounter+1,c	;volatile
  9579  001B38  808C               	bsf	3980,0,c	;volatile
  9580  001B3A  909E               	bcf	3998,0,c	;volatile
  9581  001B3C  809D               	bsf	3997,0,c	;volatile
  9582                           
  9583                           ;main.c: 312: Flag_Speed_equal=1;
  9584  001B3E  8E4B               	bsf	_Flag_Speed_equal/(0+8),_Flag_Speed_equal& (0+7),c	;volatile
  9585                           
  9586                           ;main.c: 313: if (Cylinder++ >=4)Cylinder=1;
  9587  001B40  2A3D               	incf	_Cylinder,f,c
  9588  001B42  0E04               	movlw	4
  9589  001B44  643D               	cpfsgt	_Cylinder& (0+255),c
  9590  001B46  D002               	goto	i2l4968
  9591  001B48  0E01               	movlw	1
  9592  001B4A  6E3D               	movwf	_Cylinder,c
  9593  001B4C                     i2l4968:
  9594                           
  9595                           ;main.c: 314: if (ECU.Mtr_On==0){LD3=0;}else{LD3=1;}
  9596  001B4C  0100               	movlb	0	; () banked
  9597  001B4E  B169               	btfsc	(_ECU+4)& (0+255),0,b	;volatile
  9598  001B50  D002               	goto	i2l440
  9599                           
  9600                           ; BSR set to: 0
  9601  001B52  968C               	bcf	3980,3,c	;volatile
  9602  001B54  D001               	goto	i2l4972
  9603  001B56                     i2l440:
  9604                           
  9605                           ; BSR set to: 0
  9606  001B56  868C               	bsf	3980,3,c	;volatile
  9607  001B58                     i2l4972:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;main.c: 315: SetInjection();
  9611  001B58  EC7B  F00B         	call	_SetInjection	;wreg free
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;main.c: 316: C1IF=1;
  9615  001B5C  8CA1               	bsf	4001,6,c	;volatile
  9616                           
  9617                           ; BSR set to: 0
  9618  001B5E  0012               	return	
  9619  001B60                     __end_of_SPARKEvent:
  9620                           	opt stack 0
  9621                           tblptru	equ	0xFF8
  9622                           tblptrh	equ	0xFF7
  9623                           tblptrl	equ	0xFF6
  9624                           tablat	equ	0xFF5
  9625                           prodh	equ	0xFF4
  9626                           prodl	equ	0xFF3
  9627                           intcon	equ	0xFF2
  9628                           intcon2	equ	0xFF1
  9629                           intcon3	equ	0xFF0
  9630                           postinc0	equ	0xFEE
  9631                           wreg	equ	0xFE8
  9632                           postinc1	equ	0xFE6
  9633                           postdec1	equ	0xFE5
  9634                           fsr1h	equ	0xFE2
  9635                           fsr1l	equ	0xFE1
  9636                           bsr	equ	0xFE0
  9637                           indf2	equ	0xFDF
  9638                           postinc2	equ	0xFDE
  9639                           postdec2	equ	0xFDD
  9640                           fsr2h	equ	0xFDA
  9641                           fsr2l	equ	0xFD9
  9642                           status	equ	0xFD8
  9643                           
  9644 ;; *************** function _SetInjection *****************
  9645 ;; Defined at:
  9646 ;;		line 70 in file "D:\DOC\Project\WEGA\WEGA2\Injection.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;		None
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;		None
  9651 ;; Return value:  Size  Location     Type
  9652 ;;		None               void
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  9655 ;; Tracked objects:
  9656 ;;		On entry : F/0
  9657 ;;		On exit  : F/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;Total ram usage:        0 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    3
  9667 ;; This function calls:
  9668 ;;		_AllInjectionClose
  9669 ;;		_OpenECompare1
  9670 ;;		_OpenECompare2
  9671 ;;		_ReadTimer3
  9672 ;; This function is called by:
  9673 ;;		_SPARKEvent
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text49
  9678  0016F6                     __ptext49:
  9679                           	opt stack 0
  9680  0016F6                     _SetInjection:
  9681                           	opt stack 16
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;Injection.c: 72: if (ECU.TIME_INJ>100 && ECU.CutOff==0)
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;incstack = 0
  9688  0016F6  0E65               	movlw	101
  9689  0016F8  5D73               	subwf	(_ECU+14)& (0+255),w,b	;volatile
  9690  0016FA  0E00               	movlw	0
  9691  0016FC  5974               	subwfb	(_ECU+15)& (0+255),w,b	;volatile
  9692  0016FE  B0D8               	btfsc	status,0,c
  9693                           
  9694                           ; BSR set to: 0
  9695  001700  BF7F               	btfsc	(_ECU+26)& (0+255),7,b	;volatile
  9696  001702  EF9C  F00E         	goto	_AllInjectionClose
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;Injection.c: 73: {
  9700                           ;Injection.c: 74: if (ECU.LPG)
  9701  001706  A17F               	btfss	(_ECU+26)& (0+255),0,b	;volatile
  9702  001708  D01E               	goto	i2l4594
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;Injection.c: 75: {
  9706                           ;Injection.c: 76: if (Cylinder&1)
  9707  00170A  A03D               	btfss	_Cylinder,0,c
  9708  00170C  D00E               	goto	i2l4588
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;Injection.c: 77: {
  9712                           ;Injection.c: 78: OpenECompare1(0b11111010&0b11011111&0b11111111,ReadTimer3()+ECU.INJ_LA
      +                          G);
  9713  00170E  EC8B  F00E         	call	_ReadTimer3	;wreg free
  9714  001712  5175               	movf	(_ECU+16)& (0+255),w,b	;volatile
  9715  001714  25C7               	addwf	?_ReadTimer3& (0+255),w,b
  9716  001716  6FCB               	movwf	OpenECompare1@period& (0+255),b
  9717  001718  5176               	movf	(_ECU+17)& (0+255),w,b	;volatile
  9718  00171A  21C8               	addwfc	(?_ReadTimer3+1)& (0+255),w,b
  9719  00171C  6FCC               	movwf	(OpenECompare1@period+1)& (0+255),b
  9720  00171E  0EDA               	movlw	218
  9721  001720  EC2C  F00D         	call	_OpenECompare1
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;Injection.c: 79: LC2=1;LC3=1;
  9725  001724  848B               	bsf	3979,2,c	;volatile
  9726                           
  9727                           ; BSR set to: 0
  9728  001726  868B               	bsf	3979,3,c	;volatile
  9729                           
  9730                           ;Injection.c: 80: }
  9731  001728  0012               	return	
  9732  00172A                     i2l4588:
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;Injection.c: 81: else
  9736                           ;Injection.c: 82: {
  9737                           ;Injection.c: 83: OpenECompare2(0b11111010&0b11011111&0b11111111,ReadTimer3()+ECU.INJ_LA
      +                          G);
  9738  00172A  EC8B  F00E         	call	_ReadTimer3	;wreg free
  9739  00172E  5175               	movf	(_ECU+16)& (0+255),w,b	;volatile
  9740  001730  25C7               	addwf	?_ReadTimer3& (0+255),w,b
  9741  001732  6FCB               	movwf	OpenECompare2@period& (0+255),b
  9742  001734  5176               	movf	(_ECU+17)& (0+255),w,b	;volatile
  9743  001736  21C8               	addwfc	(?_ReadTimer3+1)& (0+255),w,b
  9744  001738  6FCC               	movwf	(OpenECompare2@period+1)& (0+255),b
  9745  00173A  0EDA               	movlw	218
  9746  00173C  EC7A  F009         	call	_OpenECompare2
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;Injection.c: 84: LC4=1;LC5=1;
  9750  001740  888B               	bsf	3979,4,c	;volatile
  9751                           
  9752                           ; BSR set to: 0
  9753  001742  8A8B               	bsf	3979,5,c	;volatile
  9754  001744  0012               	return	
  9755  001746                     i2l4594:
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;Injection.c: 88: else
  9759                           ;Injection.c: 89: {
  9760                           ;Injection.c: 90: OpenECompare1(0b11111010&0b11001111&0b11111111,ECU.INJ_LAG);
  9761  001746  C075  F0CB         	movff	_ECU+16,OpenECompare1@period	;volatile
  9762  00174A  C076  F0CC         	movff	_ECU+17,OpenECompare1@period+1	;volatile
  9763  00174E  0ECA               	movlw	202
  9764  001750  EC2C  F00D         	call	_OpenECompare1
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;Injection.c: 91: LC0=1;LC1=1;
  9768  001754  808B               	bsf	3979,0,c	;volatile
  9769                           
  9770                           ; BSR set to: 0
  9771  001756  828B               	bsf	3979,1,c	;volatile
  9772  001758  0012               	return	
  9773  00175A                     __end_of_SetInjection:
  9774                           	opt stack 0
  9775                           tblptru	equ	0xFF8
  9776                           tblptrh	equ	0xFF7
  9777                           tblptrl	equ	0xFF6
  9778                           tablat	equ	0xFF5
  9779                           prodh	equ	0xFF4
  9780                           prodl	equ	0xFF3
  9781                           intcon	equ	0xFF2
  9782                           intcon2	equ	0xFF1
  9783                           intcon3	equ	0xFF0
  9784                           postinc0	equ	0xFEE
  9785                           wreg	equ	0xFE8
  9786                           postinc1	equ	0xFE6
  9787                           postdec1	equ	0xFE5
  9788                           fsr1h	equ	0xFE2
  9789                           fsr1l	equ	0xFE1
  9790                           bsr	equ	0xFE0
  9791                           indf2	equ	0xFDF
  9792                           postinc2	equ	0xFDE
  9793                           postdec2	equ	0xFDD
  9794                           fsr2h	equ	0xFDA
  9795                           fsr2l	equ	0xFD9
  9796                           status	equ	0xFD8
  9797                           
  9798 ;; *************** function _CCP3Event *****************
  9799 ;; Defined at:
  9800 ;;		line 301 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;		None
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;		None               void
  9807 ;; Registers used:
  9808 ;;		None
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : F/F
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;Total ram usage:        0 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_high_isr
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           	psect	text50
  9828  001D60                     __ptext50:
  9829                           	opt stack 0
  9830  001D60                     _CCP3Event:
  9831                           	opt stack 20
  9832                           
  9833                           ;main.c: 303: CCP3CON=0;
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;incstack = 0
  9837  001D60  010F               	movlb	15	; () banked
  9838  001D62  6B5D               	clrf	93,b	;volatile
  9839                           
  9840                           ;main.c: 304: LD3=0;
  9841  001D64  968C               	bcf	3980,3,c	;volatile
  9842                           
  9843                           ; BSR set to: 15
  9844  001D66  0012               	return	
  9845  001D68                     __end_of_CCP3Event:
  9846                           	opt stack 0
  9847                           tblptru	equ	0xFF8
  9848                           tblptrh	equ	0xFF7
  9849                           tblptrl	equ	0xFF6
  9850                           tablat	equ	0xFF5
  9851                           prodh	equ	0xFF4
  9852                           prodl	equ	0xFF3
  9853                           intcon	equ	0xFF2
  9854                           intcon2	equ	0xFF1
  9855                           intcon3	equ	0xFF0
  9856                           postinc0	equ	0xFEE
  9857                           wreg	equ	0xFE8
  9858                           postinc1	equ	0xFE6
  9859                           postdec1	equ	0xFE5
  9860                           fsr1h	equ	0xFE2
  9861                           fsr1l	equ	0xFE1
  9862                           bsr	equ	0xFE0
  9863                           indf2	equ	0xFDF
  9864                           postinc2	equ	0xFDE
  9865                           postdec2	equ	0xFDD
  9866                           fsr2h	equ	0xFDA
  9867                           fsr2l	equ	0xFD9
  9868                           status	equ	0xFD8
  9869                           
  9870 ;; *************** function _CCP2Event *****************
  9871 ;; Defined at:
  9872 ;;		line 295 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;		None               void
  9879 ;; Registers used:
  9880 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : F/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:    4
  9893 ;; This function calls:
  9894 ;;		_CompareGroup2
  9895 ;; This function is called by:
  9896 ;;		_high_isr
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text51
  9901  001D68                     __ptext51:
  9902                           	opt stack 0
  9903  001D68                     _CCP2Event:
  9904                           	opt stack 16
  9905                           
  9906                           ;main.c: 297: CCP2CON=0;CompareGroup2();
  9907                           
  9908                           ; BSR set to: 15
  9909                           ;incstack = 0
  9910  001D68  6A66               	clrf	3942,c	;volatile
  9911  001D6A  EF6A  F00C         	goto	_CompareGroup2	;wreg free
  9912  001D6E                     __end_of_CCP2Event:
  9913                           	opt stack 0
  9914                           tblptru	equ	0xFF8
  9915                           tblptrh	equ	0xFF7
  9916                           tblptrl	equ	0xFF6
  9917                           tablat	equ	0xFF5
  9918                           prodh	equ	0xFF4
  9919                           prodl	equ	0xFF3
  9920                           intcon	equ	0xFF2
  9921                           intcon2	equ	0xFF1
  9922                           intcon3	equ	0xFF0
  9923                           postinc0	equ	0xFEE
  9924                           wreg	equ	0xFE8
  9925                           postinc1	equ	0xFE6
  9926                           postdec1	equ	0xFE5
  9927                           fsr1h	equ	0xFE2
  9928                           fsr1l	equ	0xFE1
  9929                           bsr	equ	0xFE0
  9930                           indf2	equ	0xFDF
  9931                           postinc2	equ	0xFDE
  9932                           postdec2	equ	0xFDD
  9933                           fsr2h	equ	0xFDA
  9934                           fsr2l	equ	0xFD9
  9935                           status	equ	0xFD8
  9936                           
  9937 ;; *************** function _CompareGroup2 *****************
  9938 ;; Defined at:
  9939 ;;		line 113 in file "D:\DOC\Project\WEGA\WEGA2\Injection.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;  Injection       2   12[BANK0 ] unsigned int 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;		None               void
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : F/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9954 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9955 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9957 ;;Total ram usage:        4 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    3
  9960 ;; This function calls:
  9961 ;;		_AllInjectionClose
  9962 ;;		_CheckInj
  9963 ;;		_OpenECompare2
  9964 ;;		_ReadTimer3
  9965 ;; This function is called by:
  9966 ;;		_CCP2Event
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text52
  9971  0018D4                     __ptext52:
  9972                           	opt stack 0
  9973  0018D4                     _CompareGroup2:
  9974                           	opt stack 16
  9975                           
  9976                           ;Injection.c: 115: if (ECU.LPG)
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;incstack = 0
  9980  0018D4  0100               	movlb	0	; () banked
  9981  0018D6  A17F               	btfss	(_ECU+26)& (0+255),0,b	;volatile
  9982  0018D8  EF9C  F00E         	goto	_AllInjectionClose
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;Injection.c: 116: {
  9986                           ;Injection.c: 117: unsigned int Injection=ECU.TIME_INJ;
  9987  0018DC  C073  F0D3         	movff	_ECU+14,CompareGroup2@Injection	;volatile
  9988  0018E0  C074  F0D4         	movff	_ECU+15,CompareGroup2@Injection+1	;volatile
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;Injection.c: 118: if (Injection>16380)Injection=16381;
  9992  0018E4  0EFD               	movlw	253
  9993  0018E6  5DD3               	subwf	CompareGroup2@Injection& (0+255),w,b
  9994  0018E8  0E3F               	movlw	63
  9995  0018EA  59D4               	subwfb	(CompareGroup2@Injection+1)& (0+255),w,b
  9996  0018EC  E304               	bnc	i2l4564
  9997                           
  9998                           ; BSR set to: 0
  9999  0018EE  0E3F               	movlw	63
 10000  0018F0  6FD4               	movwf	(CompareGroup2@Injection+1)& (0+255),b
 10001  0018F2  0EFD               	movlw	253
 10002  0018F4  6FD3               	movwf	CompareGroup2@Injection& (0+255),b
 10003  0018F6                     i2l4564:
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;Injection.c: 119: if (LC4) {LC4=0;OpenECompare2(0b11111010&0b11011111&0b11111111,ReadTi
      +                          mer3()+ (Injection<<2));}
 10007  0018F6  A88B               	btfss	3979,4,c	;volatile
 10008  0018F8  D016               	goto	i2l823
 10009                           
 10010                           ; BSR set to: 0
 10011  0018FA  988B               	bcf	3979,4,c	;volatile
 10012                           
 10013                           ; BSR set to: 0
 10014  0018FC  C0D3  F0D1         	movff	CompareGroup2@Injection,??_CompareGroup2
 10015  001900  C0D4  F0D2         	movff	CompareGroup2@Injection+1,??_CompareGroup2+1
 10016  001904  90D8               	bcf	status,0,c
 10017  001906  37D1               	rlcf	??_CompareGroup2& (0+255),f,b
 10018  001908  37D2               	rlcf	(??_CompareGroup2+1)& (0+255),f,b
 10019  00190A  90D8               	bcf	status,0,c
 10020  00190C  37D1               	rlcf	??_CompareGroup2& (0+255),f,b
 10021  00190E  37D2               	rlcf	(??_CompareGroup2+1)& (0+255),f,b
 10022  001910  EC8B  F00E         	call	_ReadTimer3	;wreg free
 10023  001914  51D1               	movf	??_CompareGroup2& (0+255),w,b
 10024  001916  25C7               	addwf	?_ReadTimer3& (0+255),w,b
 10025  001918  6FCB               	movwf	OpenECompare2@period& (0+255),b
 10026  00191A  51D2               	movf	(??_CompareGroup2+1)& (0+255),w,b
 10027  00191C  21C8               	addwfc	(?_ReadTimer3+1)& (0+255),w,b
 10028  00191E  6FCC               	movwf	(OpenECompare2@period+1)& (0+255),b
 10029  001920  0EDA               	movlw	218
 10030  001922  EF7A  F009         	goto	_OpenECompare2
 10031  001926                     i2l823:
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;Injection.c: 120: else {LC4=0;LC5=0;CheckInj();}
 10035  001926  988B               	bcf	3979,4,c	;volatile
 10036  001928  9A8B               	bcf	3979,5,c	;volatile
 10037                           
 10038                           ; BSR set to: 0
 10039  00192A  EFF8  F009         	goto	_CheckInj	;wreg free
 10040  00192E                     __end_of_CompareGroup2:
 10041                           	opt stack 0
 10042                           tblptru	equ	0xFF8
 10043                           tblptrh	equ	0xFF7
 10044                           tblptrl	equ	0xFF6
 10045                           tablat	equ	0xFF5
 10046                           prodh	equ	0xFF4
 10047                           prodl	equ	0xFF3
 10048                           intcon	equ	0xFF2
 10049                           intcon2	equ	0xFF1
 10050                           intcon3	equ	0xFF0
 10051                           postinc0	equ	0xFEE
 10052                           wreg	equ	0xFE8
 10053                           postinc1	equ	0xFE6
 10054                           postdec1	equ	0xFE5
 10055                           fsr1h	equ	0xFE2
 10056                           fsr1l	equ	0xFE1
 10057                           bsr	equ	0xFE0
 10058                           indf2	equ	0xFDF
 10059                           postinc2	equ	0xFDE
 10060                           postdec2	equ	0xFDD
 10061                           fsr2h	equ	0xFDA
 10062                           fsr2l	equ	0xFD9
 10063                           status	equ	0xFD8
 10064                           
 10065 ;; *************** function _OpenECompare2 *****************
 10066 ;; Defined at:
 10067 ;;		line 71 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\CMP\em2open.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  config          1    wreg     unsigned char 
 10070 ;;  period          2    4[BANK0 ] unsigned int 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  config          1    9[BANK0 ] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;		None               void
 10075 ;; Registers used:
 10076 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10077 ;; Tracked objects:
 10078 ;;		On entry : F/0
 10079 ;;		On exit  : F/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10084 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10085 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10086 ;;Total ram usage:        6 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; This function calls:
 10089 ;;		Nothing
 10090 ;; This function is called by:
 10091 ;;		_SetInjection
 10092 ;;		_CompareGroup2
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           	psect	text53
 10097  0012F4                     __ptext53:
 10098                           	opt stack 0
 10099  0012F4                     _OpenECompare2:
 10100                           	opt stack 18
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;incstack = 0
 10104                           ;OpenECompare2@config stored from wreg
 10105  0012F4  6FD0               	movwf	OpenECompare2@config& (0+255),b
 10106                           
 10107                           ; BSR set to: 0
 10108  0012F6  0E05               	movlw	5
 10109  0012F8  6EF6               	movwf	tblptrl,c
 10110  0012FA                     	if	1	;There is more than 1 active tblptr byte
 10111  0012FA  6AF7               	clrf	tblptrh,c
 10112  0012FC                     	endif
 10113  0012FC                     	if	1	;There are 3 active tblptr bytes
 10114  0012FC  0E30               	movlw	48
 10115  0012FE  6EF8               	movwf	tblptru,c
 10116  001300                     	endif
 10117  001300  0008               	tblrd		*
 10118  001302  CFF5 F0CD          	movff	tablat,??_OpenECompare2
 10119  001306  A1CD               	btfss	??_OpenECompare2& (0+255),0,b
 10120  001308  D01B               	goto	i2l899
 10121                           
 10122                           ; BSR set to: 0
 10123  00130A  CF66 F0CD          	movff	3942,??_OpenECompare2	;volatile
 10124  00130E  0E0F               	movlw	15
 10125  001310  17CD               	andwf	??_OpenECompare2& (0+255),f,b
 10126  001312  51CD               	movf	??_OpenECompare2& (0+255),w,b
 10127  001314  0A0A               	xorlw	10
 10128  001316  E002               	bz	i2l4416
 10129                           
 10130                           ; BSR set to: 0
 10131  001318  9294               	bcf	3988,1,c	;volatile
 10132  00131A  D012               	goto	i2l899
 10133  00131C                     i2l4416:
 10134                           
 10135                           ; BSR set to: 0
 10136  00131C  0E05               	movlw	5
 10137  00131E  6EF6               	movwf	tblptrl,c
 10138  001320                     	if	1	;There is more than 1 active tblptr byte
 10139  001320  6AF7               	clrf	tblptrh,c
 10140  001322                     	endif
 10141  001322                     	if	1	;There are 3 active tblptr bytes
 10142  001322  0E30               	movlw	48
 10143  001324  6EF8               	movwf	tblptru,c
 10144  001326                     	endif
 10145  001326  0008               	tblrd		*
 10146  001328  CFF5 F0CD          	movff	tablat,??_OpenECompare2
 10147  00132C  A5CD               	btfss	??_OpenECompare2& (0+255),2,b
 10148  00132E  D008               	goto	i2l899
 10149                           
 10150                           ; BSR set to: 0
 10151  001330  CF66 F0CD          	movff	3942,??_OpenECompare2	;volatile
 10152  001334  0E0F               	movlw	15
 10153  001336  17CD               	andwf	??_OpenECompare2& (0+255),f,b
 10154  001338  51CD               	movf	??_OpenECompare2& (0+255),w,b
 10155  00133A  0A0A               	xorlw	10
 10156  00133C  A4D8               	btfss	status,2,c
 10157                           
 10158                           ; BSR set to: 0
 10159  00133E  9693               	bcf	3987,3,c	;volatile
 10160  001340                     i2l899:
 10161                           
 10162                           ; BSR set to: 0
 10163  001340  C0CB  FF67         	movff	OpenECompare2@period,3943	;volatile
 10164                           
 10165                           ; BSR set to: 0
 10166  001344  C0CC  F0CD         	movff	OpenECompare2@period+1,??_OpenECompare2
 10167  001348  C0CD  F0CE         	movff	??_OpenECompare2,??_OpenECompare2+1
 10168  00134C  6BCF               	clrf	(??_OpenECompare2+2)& (0+255),b
 10169  00134E  51CE               	movf	(??_OpenECompare2+1)& (0+255),w,b
 10170  001350  6E68               	movwf	3944,c	;volatile
 10171                           
 10172                           ; BSR set to: 0
 10173  001352  51D0               	movf	OpenECompare2@config& (0+255),w,b
 10174  001354  0B0F               	andlw	15
 10175  001356  6E66               	movwf	3942,c	;volatile
 10176                           
 10177                           ; BSR set to: 0
 10178  001358  0EE7               	movlw	231
 10179  00135A  010F               	movlb	15	; () banked
 10180  00135C  1749               	andwf	73,f,b	;volatile
 10181                           
 10182                           ; BSR set to: 15
 10183  00135E  0100               	movlb	0	; () banked
 10184  001360  90D8               	bcf	status,0,c
 10185  001362  31D0               	rrcf	OpenECompare2@config& (0+255),w,b
 10186  001364  0B18               	andlw	24
 10187  001366  010F               	movlb	15	; () banked
 10188  001368  1349               	iorwf	73,f,b	;volatile
 10189                           
 10190                           ; BSR set to: 15
 10191  00136A  0100               	movlb	0	; () banked
 10192  00136C  AFD0               	btfss	OpenECompare2@config& (0+255),7,b
 10193  00136E  0012               	return	
 10194                           
 10195                           ; BSR set to: 0
 10196  001370  90A1               	bcf	4001,0,c	;volatile
 10197  001372  80A0               	bsf	4000,0,c	;volatile
 10198                           
 10199                           ; BSR set to: 0
 10200  001374  0012               	return	
 10201  001376                     __end_of_OpenECompare2:
 10202                           	opt stack 0
 10203                           tblptru	equ	0xFF8
 10204                           tblptrh	equ	0xFF7
 10205                           tblptrl	equ	0xFF6
 10206                           tablat	equ	0xFF5
 10207                           prodh	equ	0xFF4
 10208                           prodl	equ	0xFF3
 10209                           intcon	equ	0xFF2
 10210                           intcon2	equ	0xFF1
 10211                           intcon3	equ	0xFF0
 10212                           postinc0	equ	0xFEE
 10213                           wreg	equ	0xFE8
 10214                           postinc1	equ	0xFE6
 10215                           postdec1	equ	0xFE5
 10216                           fsr1h	equ	0xFE2
 10217                           fsr1l	equ	0xFE1
 10218                           bsr	equ	0xFE0
 10219                           indf2	equ	0xFDF
 10220                           postinc2	equ	0xFDE
 10221                           postdec2	equ	0xFDD
 10222                           fsr2h	equ	0xFDA
 10223                           fsr2l	equ	0xFD9
 10224                           status	equ	0xFD8
 10225                           
 10226 ;; *************** function _AllInjectionClose *****************
 10227 ;; Defined at:
 10228 ;;		line 8 in file "D:\DOC\Project\WEGA\WEGA2\Injection.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;		None
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;		None
 10233 ;; Return value:  Size  Location     Type
 10234 ;;		None               void
 10235 ;; Registers used:
 10236 ;;		wreg, status,2, status,0, prodl, cstack
 10237 ;; Tracked objects:
 10238 ;;		On entry : F/0
 10239 ;;		On exit  : F/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10246 ;;Total ram usage:        0 bytes
 10247 ;; Hardware stack levels used:    1
 10248 ;; Hardware stack levels required when called:    2
 10249 ;; This function calls:
 10250 ;;		_CheckInj
 10251 ;; This function is called by:
 10252 ;;		_SetInjection
 10253 ;;		_CompareGroup2
 10254 ;; This function uses a non-reentrant model
 10255 ;;
 10256                           
 10257                           	psect	text54
 10258  001D38                     __ptext54:
 10259                           	opt stack 0
 10260  001D38                     _AllInjectionClose:
 10261                           	opt stack 16
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;Injection.c: 10: LC0=0;LC1=0;
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;incstack = 0
 10268  001D38  908B               	bcf	3979,0,c	;volatile
 10269  001D3A  928B               	bcf	3979,1,c	;volatile
 10270                           
 10271                           ;Injection.c: 11: LC2=0;LC3=0;
 10272  001D3C  948B               	bcf	3979,2,c	;volatile
 10273  001D3E  968B               	bcf	3979,3,c	;volatile
 10274                           
 10275                           ;Injection.c: 12: LC4=0;LC5=0;
 10276  001D40  988B               	bcf	3979,4,c	;volatile
 10277  001D42  9A8B               	bcf	3979,5,c	;volatile
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;Injection.c: 13: CheckInj();
 10281  001D44  EFF8  F009         	goto	_CheckInj	;wreg free
 10282  001D48                     __end_of_AllInjectionClose:
 10283                           	opt stack 0
 10284                           tblptru	equ	0xFF8
 10285                           tblptrh	equ	0xFF7
 10286                           tblptrl	equ	0xFF6
 10287                           tablat	equ	0xFF5
 10288                           prodh	equ	0xFF4
 10289                           prodl	equ	0xFF3
 10290                           intcon	equ	0xFF2
 10291                           intcon2	equ	0xFF1
 10292                           intcon3	equ	0xFF0
 10293                           postinc0	equ	0xFEE
 10294                           wreg	equ	0xFE8
 10295                           postinc1	equ	0xFE6
 10296                           postdec1	equ	0xFE5
 10297                           fsr1h	equ	0xFE2
 10298                           fsr1l	equ	0xFE1
 10299                           bsr	equ	0xFE0
 10300                           indf2	equ	0xFDF
 10301                           postinc2	equ	0xFDE
 10302                           postdec2	equ	0xFDD
 10303                           fsr2h	equ	0xFDA
 10304                           fsr2l	equ	0xFD9
 10305                           status	equ	0xFD8
 10306                           
 10307 ;; *************** function _CCP1Event *****************
 10308 ;; Defined at:
 10309 ;;		line 290 in file "D:\DOC\Project\WEGA\WEGA2\main.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;		None
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;		None               void
 10316 ;; Registers used:
 10317 ;;		wreg, status,2, status,0, prodl, cstack
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : F/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;Total ram usage:        0 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; Hardware stack levels required when called:    3
 10330 ;; This function calls:
 10331 ;;		_CompareGroup1
 10332 ;; This function is called by:
 10333 ;;		_high_isr
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	text55
 10338  001D6E                     __ptext55:
 10339                           	opt stack 0
 10340  001D6E                     _CCP1Event:
 10341                           	opt stack 17
 10342                           
 10343                           ;main.c: 291: CCP1CON=0;CompareGroup1();
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;incstack = 0
 10347  001D6E  6ABD               	clrf	4029,c	;volatile
 10348  001D70  EF35  F00A         	goto	_CompareGroup1	;wreg free
 10349  001D74                     __end_of_CCP1Event:
 10350                           	opt stack 0
 10351                           tblptru	equ	0xFF8
 10352                           tblptrh	equ	0xFF7
 10353                           tblptrl	equ	0xFF6
 10354                           tablat	equ	0xFF5
 10355                           prodh	equ	0xFF4
 10356                           prodl	equ	0xFF3
 10357                           intcon	equ	0xFF2
 10358                           intcon2	equ	0xFF1
 10359                           intcon3	equ	0xFF0
 10360                           postinc0	equ	0xFEE
 10361                           wreg	equ	0xFE8
 10362                           postinc1	equ	0xFE6
 10363                           postdec1	equ	0xFE5
 10364                           fsr1h	equ	0xFE2
 10365                           fsr1l	equ	0xFE1
 10366                           bsr	equ	0xFE0
 10367                           indf2	equ	0xFDF
 10368                           postinc2	equ	0xFDE
 10369                           postdec2	equ	0xFDD
 10370                           fsr2h	equ	0xFDA
 10371                           fsr2l	equ	0xFD9
 10372                           status	equ	0xFD8
 10373                           
 10374 ;; *************** function _CompareGroup1 *****************
 10375 ;; Defined at:
 10376 ;;		line 97 in file "D:\DOC\Project\WEGA\WEGA2\Injection.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;		None
 10379 ;; Auto vars:     Size  Location     Type
 10380 ;;  Injection       2   12[BANK0 ] unsigned int 
 10381 ;; Return value:  Size  Location     Type
 10382 ;;		None               void
 10383 ;; Registers used:
 10384 ;;		wreg, status,2, status,0, prodl, cstack
 10385 ;; Tracked objects:
 10386 ;;		On entry : 0/0
 10387 ;;		On exit  : F/0
 10388 ;;		Unchanged: 0/0
 10389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10391 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;Total ram usage:        4 bytes
 10395 ;; Hardware stack levels used:    1
 10396 ;; Hardware stack levels required when called:    2
 10397 ;; This function calls:
 10398 ;;		_CheckInj
 10399 ;;		_OpenECompare1
 10400 ;;		_ReadTimer3
 10401 ;; This function is called by:
 10402 ;;		_CCP1Event
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           	psect	text56
 10407  00146A                     __ptext56:
 10408                           	opt stack 0
 10409  00146A                     _CompareGroup1:
 10410                           	opt stack 17
 10411                           
 10412                           ;Injection.c: 99: if (ECU.LPG)
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;incstack = 0
 10416  00146A  0100               	movlb	0	; () banked
 10417  00146C  A17F               	btfss	(_ECU+26)& (0+255),0,b	;volatile
 10418  00146E  D025               	goto	i2l811
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;Injection.c: 100: {
 10422                           ;Injection.c: 101: unsigned int Injection=ECU.TIME_INJ;
 10423  001470  C073  F0D3         	movff	_ECU+14,CompareGroup1@Injection	;volatile
 10424  001474  C074  F0D4         	movff	_ECU+15,CompareGroup1@Injection+1	;volatile
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;Injection.c: 102: if (Injection>16380)Injection=16381;
 10428  001478  0EFD               	movlw	253
 10429  00147A  5DD3               	subwf	CompareGroup1@Injection& (0+255),w,b
 10430  00147C  0E3F               	movlw	63
 10431  00147E  59D4               	subwfb	(CompareGroup1@Injection+1)& (0+255),w,b
 10432  001480  E304               	bnc	i2l4542
 10433                           
 10434                           ; BSR set to: 0
 10435  001482  0E3F               	movlw	63
 10436  001484  6FD4               	movwf	(CompareGroup1@Injection+1)& (0+255),b
 10437  001486  0EFD               	movlw	253
 10438  001488  6FD3               	movwf	CompareGroup1@Injection& (0+255),b
 10439  00148A                     i2l4542:
 10440                           
 10441                           ; BSR set to: 0
 10442                           ;Injection.c: 103: if (LC2) {LC2=0;OpenECompare1(0b11111010&0b11011111&0b11111111,ReadTi
      +                          mer3()+ (Injection<<2));}
 10443  00148A  A48B               	btfss	3979,2,c	;volatile
 10444  00148C  D012               	goto	i2l813
 10445                           
 10446                           ; BSR set to: 0
 10447  00148E  948B               	bcf	3979,2,c	;volatile
 10448                           
 10449                           ; BSR set to: 0
 10450  001490  C0D3  F0D1         	movff	CompareGroup1@Injection,??_CompareGroup1
 10451  001494  C0D4  F0D2         	movff	CompareGroup1@Injection+1,??_CompareGroup1+1
 10452  001498  90D8               	bcf	status,0,c
 10453  00149A  37D1               	rlcf	??_CompareGroup1& (0+255),f,b
 10454  00149C  37D2               	rlcf	(??_CompareGroup1+1)& (0+255),f,b
 10455  00149E  90D8               	bcf	status,0,c
 10456  0014A0  37D1               	rlcf	??_CompareGroup1& (0+255),f,b
 10457  0014A2  37D2               	rlcf	(??_CompareGroup1+1)& (0+255),f,b
 10458  0014A4  EC8B  F00E         	call	_ReadTimer3	;wreg free
 10459  0014A8  51D1               	movf	??_CompareGroup1& (0+255),w,b
 10460  0014AA  25C7               	addwf	?_ReadTimer3& (0+255),w,b
 10461  0014AC  6FCB               	movwf	OpenECompare1@period& (0+255),b
 10462  0014AE  51D2               	movf	(??_CompareGroup1+1)& (0+255),w,b
 10463  0014B0  D00D               	goto	L2
 10464  0014B2                     i2l813:
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;Injection.c: 104: else {LC2=0;LC3=0;CheckInj();}
 10468  0014B2  948B               	bcf	3979,2,c	;volatile
 10469  0014B4  968B               	bcf	3979,3,c	;volatile
 10470                           
 10471                           ; BSR set to: 0
 10472  0014B6  EFF8  F009         	goto	_CheckInj	;wreg free
 10473  0014BA                     i2l811:
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;Injection.c: 106: else
 10477                           ;Injection.c: 107: {
 10478                           ;Injection.c: 108: if (LC0) {LC0=0;OpenECompare1(0b11111010&0b11011111&0b11111111,ReadTi
      +                          mer3()+ ECU.TIME_INJ);}
 10479  0014BA  A08B               	btfss	3979,0,c	;volatile
 10480  0014BC  D00C               	goto	i2l816
 10481                           
 10482                           ; BSR set to: 0
 10483  0014BE  908B               	bcf	3979,0,c	;volatile
 10484                           
 10485                           ; BSR set to: 0
 10486  0014C0  EC8B  F00E         	call	_ReadTimer3	;wreg free
 10487  0014C4  5173               	movf	(_ECU+14)& (0+255),w,b	;volatile
 10488  0014C6  25C7               	addwf	?_ReadTimer3& (0+255),w,b
 10489  0014C8  6FCB               	movwf	OpenECompare1@period& (0+255),b
 10490  0014CA  5174               	movf	(_ECU+15)& (0+255),w,b	;volatile
 10491  0014CC                     L2:
 10492  0014CC  21C8               	addwfc	(?_ReadTimer3+1)& (0+255),w,b
 10493  0014CE  6FCC               	movwf	(OpenECompare1@period+1)& (0+255),b
 10494  0014D0  0EDA               	movlw	218
 10495  0014D2  EF2C  F00D         	goto	_OpenECompare1
 10496  0014D6                     i2l816:
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;Injection.c: 109: else {LC0=0;LC1=0;CheckInj();}
 10500  0014D6  908B               	bcf	3979,0,c	;volatile
 10501  0014D8  928B               	bcf	3979,1,c	;volatile
 10502  0014DA  EFF8  F009         	goto	_CheckInj
 10503  0014DE                     __end_of_CompareGroup1:
 10504                           	opt stack 0
 10505                           tblptru	equ	0xFF8
 10506                           tblptrh	equ	0xFF7
 10507                           tblptrl	equ	0xFF6
 10508                           tablat	equ	0xFF5
 10509                           prodh	equ	0xFF4
 10510                           prodl	equ	0xFF3
 10511                           intcon	equ	0xFF2
 10512                           intcon2	equ	0xFF1
 10513                           intcon3	equ	0xFF0
 10514                           postinc0	equ	0xFEE
 10515                           wreg	equ	0xFE8
 10516                           postinc1	equ	0xFE6
 10517                           postdec1	equ	0xFE5
 10518                           fsr1h	equ	0xFE2
 10519                           fsr1l	equ	0xFE1
 10520                           bsr	equ	0xFE0
 10521                           indf2	equ	0xFDF
 10522                           postinc2	equ	0xFDE
 10523                           postdec2	equ	0xFDD
 10524                           fsr2h	equ	0xFDA
 10525                           fsr2l	equ	0xFD9
 10526                           status	equ	0xFD8
 10527                           
 10528 ;; *************** function _ReadTimer3 *****************
 10529 ;; Defined at:
 10530 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t3read.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;		None
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;  timer           2    2[BANK0 ] struct Timers
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  2    0[BANK0 ] unsigned int 
 10537 ;; Registers used:
 10538 ;;		None
 10539 ;; Tracked objects:
 10540 ;;		On entry : F/0
 10541 ;;		On exit  : F/0
 10542 ;;		Unchanged: F/0
 10543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10544 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10547 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;Total ram usage:        4 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; This function calls:
 10551 ;;		Nothing
 10552 ;; This function is called by:
 10553 ;;		_SetInjection
 10554 ;;		_CompareGroup1
 10555 ;;		_CompareGroup2
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           	psect	text57
 10560  001D16                     __ptext57:
 10561                           	opt stack 0
 10562  001D16                     _ReadTimer3:
 10563                           	opt stack 18
 10564                           
 10565                           ; BSR set to: 0
 10566                           
 10567                           ; BSR set to: 0
 10568                           ;incstack = 0
 10569  001D16  CFB2 F0C9          	movff	4018,ReadTimer3@timer	;volatile
 10570  001D1A  CFB3 F0CA          	movff	4019,ReadTimer3@timer+1	;volatile
 10571  001D1E  C0C9  F0C7         	movff	ReadTimer3@timer,?_ReadTimer3
 10572  001D22  C0CA  F0C8         	movff	ReadTimer3@timer+1,?_ReadTimer3+1
 10573                           
 10574                           ; BSR set to: 0
 10575  001D26  0012               	return	
 10576  001D28                     __end_of_ReadTimer3:
 10577                           	opt stack 0
 10578                           tblptru	equ	0xFF8
 10579                           tblptrh	equ	0xFF7
 10580                           tblptrl	equ	0xFF6
 10581                           tablat	equ	0xFF5
 10582                           prodh	equ	0xFF4
 10583                           prodl	equ	0xFF3
 10584                           intcon	equ	0xFF2
 10585                           intcon2	equ	0xFF1
 10586                           intcon3	equ	0xFF0
 10587                           postinc0	equ	0xFEE
 10588                           wreg	equ	0xFE8
 10589                           postinc1	equ	0xFE6
 10590                           postdec1	equ	0xFE5
 10591                           fsr1h	equ	0xFE2
 10592                           fsr1l	equ	0xFE1
 10593                           bsr	equ	0xFE0
 10594                           indf2	equ	0xFDF
 10595                           postinc2	equ	0xFDE
 10596                           postdec2	equ	0xFDD
 10597                           fsr2h	equ	0xFDA
 10598                           fsr2l	equ	0xFD9
 10599                           status	equ	0xFD8
 10600                           
 10601 ;; *************** function _OpenECompare1 *****************
 10602 ;; Defined at:
 10603 ;;		line 46 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\CMP\em1open.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  config          1    wreg     unsigned char 
 10606 ;;  period          2    4[BANK0 ] unsigned int 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  config          1    9[BANK0 ] unsigned char 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;		None               void
 10611 ;; Registers used:
 10612 ;;		wreg, status,2, status,0
 10613 ;; Tracked objects:
 10614 ;;		On entry : F/0
 10615 ;;		On exit  : F/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10618 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10620 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10622 ;;Total ram usage:        6 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; This function calls:
 10625 ;;		Nothing
 10626 ;; This function is called by:
 10627 ;;		_SetInjection
 10628 ;;		_CompareGroup1
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text58
 10633  001A58                     __ptext58:
 10634                           	opt stack 0
 10635  001A58                     _OpenECompare1:
 10636                           	opt stack 18
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;incstack = 0
 10640                           ;OpenECompare1@config stored from wreg
 10641  001A58  6FD0               	movwf	OpenECompare1@config& (0+255),b
 10642                           
 10643                           ; BSR set to: 0
 10644  001A5A  C0CB  FFBE         	movff	OpenECompare1@period,4030	;volatile
 10645                           
 10646                           ; BSR set to: 0
 10647  001A5E  C0CC  F0CD         	movff	OpenECompare1@period+1,??_OpenECompare1
 10648  001A62  C0CD  F0CE         	movff	??_OpenECompare1,??_OpenECompare1+1
 10649  001A66  6BCF               	clrf	(??_OpenECompare1+2)& (0+255),b
 10650  001A68  51CE               	movf	(??_OpenECompare1+1)& (0+255),w,b
 10651  001A6A  6EBF               	movwf	4031,c	;volatile
 10652                           
 10653                           ; BSR set to: 0
 10654  001A6C  51D0               	movf	OpenECompare1@config& (0+255),w,b
 10655  001A6E  0B0F               	andlw	15
 10656  001A70  6EBD               	movwf	4029,c	;volatile
 10657                           
 10658                           ; BSR set to: 0
 10659  001A72  0EFC               	movlw	252
 10660  001A74  010F               	movlb	15	; () banked
 10661  001A76  1749               	andwf	73,f,b	;volatile
 10662                           
 10663                           ; BSR set to: 15
 10664  001A78  0100               	movlb	0	; () banked
 10665  001A7A  39D0               	swapf	OpenECompare1@config& (0+255),w,b
 10666  001A7C  0B0F               	andlw	15
 10667  001A7E  0B03               	andlw	3
 10668  001A80  010F               	movlb	15	; () banked
 10669  001A82  1349               	iorwf	73,f,b	;volatile
 10670                           
 10671                           ; BSR set to: 15
 10672  001A84  0100               	movlb	0	; () banked
 10673  001A86  AFD0               	btfss	OpenECompare1@config& (0+255),7,b
 10674  001A88  D002               	goto	i2l4406
 10675                           
 10676                           ; BSR set to: 0
 10677  001A8A  949E               	bcf	3998,2,c	;volatile
 10678  001A8C  849D               	bsf	3997,2,c	;volatile
 10679  001A8E                     i2l4406:
 10680                           
 10681                           ; BSR set to: 0
 10682  001A8E  CFBD F0CD          	movff	4029,??_OpenECompare1	;volatile
 10683  001A92  0E0F               	movlw	15
 10684  001A94  17CD               	andwf	??_OpenECompare1& (0+255),f,b
 10685  001A96  51CD               	movf	??_OpenECompare1& (0+255),w,b
 10686  001A98  0A0A               	xorlw	10
 10687  001A9A  A4D8               	btfss	status,2,c
 10688                           
 10689                           ; BSR set to: 0
 10690  001A9C  9494               	bcf	3988,2,c	;volatile
 10691                           
 10692                           ; BSR set to: 0
 10693  001A9E  0012               	return	
 10694  001AA0                     __end_of_OpenECompare1:
 10695                           	opt stack 0
 10696                           tblptru	equ	0xFF8
 10697                           tblptrh	equ	0xFF7
 10698                           tblptrl	equ	0xFF6
 10699                           tablat	equ	0xFF5
 10700                           prodh	equ	0xFF4
 10701                           prodl	equ	0xFF3
 10702                           intcon	equ	0xFF2
 10703                           intcon2	equ	0xFF1
 10704                           intcon3	equ	0xFF0
 10705                           postinc0	equ	0xFEE
 10706                           wreg	equ	0xFE8
 10707                           postinc1	equ	0xFE6
 10708                           postdec1	equ	0xFE5
 10709                           fsr1h	equ	0xFE2
 10710                           fsr1l	equ	0xFE1
 10711                           bsr	equ	0xFE0
 10712                           indf2	equ	0xFDF
 10713                           postinc2	equ	0xFDE
 10714                           postdec2	equ	0xFDD
 10715                           fsr2h	equ	0xFDA
 10716                           fsr2l	equ	0xFD9
 10717                           status	equ	0xFD8
 10718                           
 10719 ;; *************** function _CheckInj *****************
 10720 ;; Defined at:
 10721 ;;		line 106 in file "D:\DOC\Project\WEGA\WEGA2\Fuel_Calc.c"
 10722 ;; Parameters:    Size  Location     Type
 10723 ;;		None
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;		None
 10726 ;; Return value:  Size  Location     Type
 10727 ;;		None               void
 10728 ;; Registers used:
 10729 ;;		wreg, status,2, status,0, prodl, cstack
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : F/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10737 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10738 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10739 ;;Total ram usage:        4 bytes
 10740 ;; Hardware stack levels used:    1
 10741 ;; Hardware stack levels required when called:    1
 10742 ;; This function calls:
 10743 ;;		_LGP_st
 10744 ;; This function is called by:
 10745 ;;		_AllInjectionClose
 10746 ;;		_CompareGroup1
 10747 ;;		_CompareGroup2
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text59
 10752  0013F0                     __ptext59:
 10753                           	opt stack 0
 10754  0013F0                     _CheckInj:
 10755                           	opt stack 16
 10756  0013F0  0E01               	movlw	1
 10757                           
 10758                           ;Fuel_Calc.c: 108: if (LC0|LC1|LC2|LC3|LC4|LC5)
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;incstack = 0
 10762  0013F2  AA8B               	btfss	3979,5,c	;volatile
 10763  0013F4  0E00               	movlw	0
 10764  0013F6  0100               	movlb	0	; () banked
 10765  0013F8  6FC9               	movwf	??_CheckInj& (0+255),b
 10766  0013FA  0E01               	movlw	1
 10767  0013FC  A88B               	btfss	3979,4,c	;volatile
 10768  0013FE  0E00               	movlw	0
 10769  001400  6FCA               	movwf	(??_CheckInj+1)& (0+255),b
 10770  001402  0E01               	movlw	1
 10771  001404  A68B               	btfss	3979,3,c	;volatile
 10772  001406  0E00               	movlw	0
 10773  001408  6FCB               	movwf	(??_CheckInj+2)& (0+255),b
 10774  00140A  0E01               	movlw	1
 10775  00140C  A48B               	btfss	3979,2,c	;volatile
 10776  00140E  0E00               	movlw	0
 10777  001410  6FCC               	movwf	(??_CheckInj+3)& (0+255),b
 10778  001412  B08B               	btfsc	3979,0,c	;volatile
 10779  001414  0E01               	movlw	1
 10780  001416  B28B               	btfsc	3979,1,c	;volatile
 10781  001418  0E01               	movlw	1
 10782  00141A  0E01               	movlw	1
 10783  00141C  A0E8               	btfss	wreg,0,c
 10784  00141E  0E00               	movlw	0
 10785  001420  11CC               	iorwf	??_CheckInj+3,w,b
 10786  001422  11CB               	iorwf	??_CheckInj+2,w,b
 10787  001424  11CA               	iorwf	??_CheckInj+1,w,b
 10788  001426  11C9               	iorwf	??_CheckInj& (0+255),w,b
 10789  001428  A0E8               	btfss	wreg,0,c
 10790  00142A  D010               	goto	i2l4334
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;Fuel_Calc.c: 109: {
 10794                           ;Fuel_Calc.c: 110: if (LGP_st())
 10795  00142C  EC1F  F00E         	call	_LGP_st	;wreg free
 10796  001430  A0D8               	btfss	status,0,c
 10797  001432  0012               	return	
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;Fuel_Calc.c: 111: {
 10801                           ;Fuel_Calc.c: 112: ECU.LPG=0;
 10802  001434  917F               	bcf	(_ECU+26)& (0+255),0,b	;volatile
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;Fuel_Calc.c: 113: ECU.RqF=5000;
 10806  001436  0E13               	movlw	19
 10807  001438  6F78               	movwf	(_ECU+19)& (0+255),b	;volatile
 10808  00143A  0E88               	movlw	136
 10809  00143C  6F77               	movwf	(_ECU+18)& (0+255),b	;volatile
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;Fuel_Calc.c: 114: LC0=0;LC1=0;LC2=0;LC3=0;LC4=0;LC5=0;
 10813  00143E  908B               	bcf	3979,0,c	;volatile
 10814                           
 10815                           ; BSR set to: 0
 10816  001440  928B               	bcf	3979,1,c	;volatile
 10817                           
 10818                           ; BSR set to: 0
 10819  001442  948B               	bcf	3979,2,c	;volatile
 10820                           
 10821                           ; BSR set to: 0
 10822  001444  968B               	bcf	3979,3,c	;volatile
 10823                           
 10824                           ; BSR set to: 0
 10825  001446  988B               	bcf	3979,4,c	;volatile
 10826                           
 10827                           ; BSR set to: 0
 10828  001448  9A8B               	bcf	3979,5,c	;volatile
 10829  00144A  0C88               	retlw	136
 10830  00144C                     i2l4334:
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;Fuel_Calc.c: 121: {
 10834                           ;Fuel_Calc.c: 122: if (LGP_st())
 10835  00144C  EC1F  F00E         	call	_LGP_st	;wreg free
 10836  001450  E306               	bnc	i2l602
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;Fuel_Calc.c: 123: {
 10840                           ;Fuel_Calc.c: 124: ECU.LPG=0;
 10841  001452  917F               	bcf	(_ECU+26)& (0+255),0,b	;volatile
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;Fuel_Calc.c: 125: ECU.RqF=5000;
 10845  001454  0E13               	movlw	19
 10846  001456  6F78               	movwf	(_ECU+19)& (0+255),b	;volatile
 10847  001458  0E88               	movlw	136
 10848  00145A  6F77               	movwf	(_ECU+18)& (0+255),b	;volatile
 10849                           
 10850                           ;Fuel_Calc.c: 126: }
 10851  00145C  0C88               	retlw	136
 10852  00145E                     i2l602:
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;Fuel_Calc.c: 127: else
 10856                           ;Fuel_Calc.c: 128: {
 10857                           ;Fuel_Calc.c: 129: ECU.LPG=1;
 10858  00145E  817F               	bsf	(_ECU+26)& (0+255),0,b	;volatile
 10859                           
 10860                           ; BSR set to: 0
 10861                           ;Fuel_Calc.c: 130: ECU.RqF=10000;
 10862  001460  0E27               	movlw	39
 10863  001462  6F78               	movwf	(_ECU+19)& (0+255),b	;volatile
 10864  001464  0E10               	movlw	16
 10865  001466  6F77               	movwf	(_ECU+18)& (0+255),b	;volatile
 10866                           
 10867                           ; BSR set to: 0
 10868  001468  0C10               	retlw	16
 10869  00146A                     __end_of_CheckInj:
 10870                           	opt stack 0
 10871                           tblptru	equ	0xFF8
 10872                           tblptrh	equ	0xFF7
 10873                           tblptrl	equ	0xFF6
 10874                           tablat	equ	0xFF5
 10875                           prodh	equ	0xFF4
 10876                           prodl	equ	0xFF3
 10877                           intcon	equ	0xFF2
 10878                           intcon2	equ	0xFF1
 10879                           intcon3	equ	0xFF0
 10880                           postinc0	equ	0xFEE
 10881                           wreg	equ	0xFE8
 10882                           postinc1	equ	0xFE6
 10883                           postdec1	equ	0xFE5
 10884                           fsr1h	equ	0xFE2
 10885                           fsr1l	equ	0xFE1
 10886                           bsr	equ	0xFE0
 10887                           indf2	equ	0xFDF
 10888                           postinc2	equ	0xFDE
 10889                           postdec2	equ	0xFDD
 10890                           fsr2h	equ	0xFDA
 10891                           fsr2l	equ	0xFD9
 10892                           status	equ	0xFD8
 10893                           
 10894 ;; *************** function _LGP_st *****************
 10895 ;; Defined at:
 10896 ;;		line 99 in file "D:\DOC\Project\WEGA\WEGA2\Fuel_Calc.c"
 10897 ;; Parameters:    Size  Location     Type
 10898 ;;		None
 10899 ;; Auto vars:     Size  Location     Type
 10900 ;;  LPGPres         2    0[BANK0 ] int 
 10901 ;; Return value:  Size  Location     Type
 10902 ;;		None               void
 10903 ;; Registers used:
 10904 ;;		wreg, status,2, status,0, prodl
 10905 ;; Tracked objects:
 10906 ;;		On entry : F/0
 10907 ;;		On exit  : F/0
 10908 ;;		Unchanged: 0/0
 10909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10911 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10913 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10914 ;;Total ram usage:        2 bytes
 10915 ;; Hardware stack levels used:    1
 10916 ;; This function calls:
 10917 ;;		Nothing
 10918 ;; This function is called by:
 10919 ;;		_CheckInj
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           	psect	text60
 10924  001C3E                     __ptext60:
 10925                           	opt stack 0
 10926  001C3E                     _LGP_st:
 10927                           	opt stack 16
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;Fuel_Calc.c: 101: int LPGPres = LPGPressure-AirPressure;
 10931                           
 10932                           ; BSR set to: 0
 10933                           ;incstack = 0
 10934  001C3E  5160               	movf	_AirPressure& (0+255),w,b
 10935  001C40  5C35               	subwf	_LPGPressure,w,c
 10936  001C42  6FC7               	movwf	LGP_st@LPGPres& (0+255),b
 10937  001C44  5161               	movf	(_AirPressure+1)& (0+255),w,b
 10938  001C46  5836               	subwfb	_LPGPressure+1,w,c
 10939  001C48  6FC8               	movwf	(LGP_st@LPGPres+1)& (0+255),b
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;Fuel_Calc.c: 102: if (LPGPres < 110) {return 1;} else {return 0;}
 10943  001C4A  51C8               	movf	(LGP_st@LPGPres+1)& (0+255),w,b
 10944  001C4C  0A80               	xorlw	128
 10945  001C4E  6EF3               	movwf	prodl,c
 10946  001C50  0E80               	movlw	128
 10947  001C52  5CF3               	subwf	prodl,w,c
 10948  001C54  0E6E               	movlw	110
 10949  001C56  B4D8               	btfsc	status,2,c
 10950  001C58  5DC7               	subwf	LGP_st@LPGPres& (0+255),w,b
 10951  001C5A  E202               	bc	i2l4310
 10952                           
 10953                           ; BSR set to: 0
 10954  001C5C  80D8               	bsf	status,0,c
 10955  001C5E  0012               	return	
 10956  001C60                     i2l4310:
 10957                           
 10958                           ; BSR set to: 0
 10959  001C60  90D8               	bcf	status,0,c
 10960                           
 10961                           ; BSR set to: 0
 10962  001C62  0012               	return	
 10963  001C64                     __end_of_LGP_st:
 10964                           	opt stack 0
 10965                           tblptru	equ	0xFF8
 10966                           tblptrh	equ	0xFF7
 10967                           tblptrl	equ	0xFF6
 10968                           tablat	equ	0xFF5
 10969                           prodh	equ	0xFF4
 10970                           prodl	equ	0xFF3
 10971                           intcon	equ	0xFF2
 10972                           intcon2	equ	0xFF1
 10973                           intcon3	equ	0xFF0
 10974                           postinc0	equ	0xFEE
 10975                           wreg	equ	0xFE8
 10976                           postinc1	equ	0xFE6
 10977                           postdec1	equ	0xFE5
 10978                           fsr1h	equ	0xFE2
 10979                           fsr1l	equ	0xFE1
 10980                           bsr	equ	0xFE0
 10981                           indf2	equ	0xFDF
 10982                           postinc2	equ	0xFDE
 10983                           postdec2	equ	0xFDD
 10984                           fsr2h	equ	0xFDA
 10985                           fsr2l	equ	0xFD9
 10986                           status	equ	0xFD8
 10987                           tblptru	equ	0xFF8
 10988                           tblptrh	equ	0xFF7
 10989                           tblptrl	equ	0xFF6
 10990                           tablat	equ	0xFF5
 10991                           prodh	equ	0xFF4
 10992                           prodl	equ	0xFF3
 10993                           intcon	equ	0xFF2
 10994                           intcon2	equ	0xFF1
 10995                           intcon3	equ	0xFF0
 10996                           postinc0	equ	0xFEE
 10997                           wreg	equ	0xFE8
 10998                           postinc1	equ	0xFE6
 10999                           postdec1	equ	0xFE5
 11000                           fsr1h	equ	0xFE2
 11001                           fsr1l	equ	0xFE1
 11002                           bsr	equ	0xFE0
 11003                           indf2	equ	0xFDF
 11004                           postinc2	equ	0xFDE
 11005                           postdec2	equ	0xFDD
 11006                           fsr2h	equ	0xFDA
 11007                           fsr2l	equ	0xFD9
 11008                           status	equ	0xFD8
 11009                           
 11010                           	psect	param0
 11011  0000                     tblptru	equ	0xFF8
 11012                           tblptrh	equ	0xFF7
 11013                           tblptrl	equ	0xFF6
 11014                           tablat	equ	0xFF5
 11015                           prodh	equ	0xFF4
 11016                           prodl	equ	0xFF3
 11017                           intcon	equ	0xFF2
 11018                           intcon2	equ	0xFF1
 11019                           intcon3	equ	0xFF0
 11020                           postinc0	equ	0xFEE
 11021                           wreg	equ	0xFE8
 11022                           postinc1	equ	0xFE6
 11023                           postdec1	equ	0xFE5
 11024                           fsr1h	equ	0xFE2
 11025                           fsr1l	equ	0xFE1
 11026                           bsr	equ	0xFE0
 11027                           indf2	equ	0xFDF
 11028                           postinc2	equ	0xFDE
 11029                           postdec2	equ	0xFDD
 11030                           fsr2h	equ	0xFDA
 11031                           fsr2l	equ	0xFD9
 11032                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1083
    Data        16
    BSS         137
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      76
    BANK0           160     37     140
    BANK1           256     26      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    VE@Table	PTR unsigned char  size(2) Largest target is 16
		 -> VE_table(BANK1[16]), 

    EX_filter@Massive	PTR unsigned int  size(1) Largest target is 12
		 -> EXT_array(BANK0[12]), MAP_array(COMRAM[12]), 

    SMA_filter@Massive	PTR unsigned int  size(1) Largest target is 12
		 -> IAT_array(BANK0[12]), PWR_array(BANK0[12]), CLT_array(BANK0[12]), Load_array(BANK0[12]), 

    ReadTable@Massive	PTR const unsigned int  size(2) Largest target is 10
		 -> LAG_LPG(CODE[10]), LAG(CODE[10]), 

    p	PTR unsigned char  size(1) Largest target is 38
		 -> NULL(NULL[0]), ECU(BANK0[38]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_ADCread
    _TMR0Event->_SMA_filter
    _Spark2->_OpenECompare3
    _OpenECompare3->___lwdiv
    _Set_TPS_MAP->i1_SetChanADC
    _Set_ADC_MAP->i1_SetChanADC
    _ADCread->_GetColt
    _GetColt->_SMA_filter
    _SMA_filter->_ReadADC
    _EX_filter->_ReadADC

Critical Paths under _main in BANK0

    _setADC->_SetChanADC
    _STP_Set->_STP_Close
    _STP_Set->_STP_Open
    _INIT->_SetDCPWM5
    _STP_Init->_delay
    _IAC_Stab->_STP_Open
    _ReadTable->_IntpResL
    _IntpResL->___tmul
    _Fuel_Calculate->___atdiv
    _Fuel_Calculate->___tmul
    _Emul_PND->_Emul_PND_T
    _Emul_PND_T->___tmul

Critical Paths under _high_isr in BANK0

    i2_Spark2->i2_OpenECompare3
    i2_OpenECompare3->i2___lwdiv
    _SetInjection->_OpenECompare1
    _SetInjection->_OpenECompare2
    _CCP2Event->_CompareGroup2
    _CompareGroup2->_OpenECompare2
    _OpenECompare2->_ReadTimer3
    _AllInjectionClose->_CheckInj
    _CCP1Event->_CompareGroup1
    _CompareGroup1->_OpenECompare1
    _OpenECompare1->_ReadTimer3
    _CheckInj->_LGP_st

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Get_Lag
    _Get_Lag->_ReadTable
    _ReadTable->_IntpResL
    _Emul_PND->_Emul_PND_T

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14258
                                             22 BANK1      4     4      0
                           _Emul_PND
                     _Fuel_Calculate
                            _Get_Lag
                           _IAC_Stab
                               _INIT
                            _STP_Set
                                 _VE
                            ___ltdiv
                             _setADC
 ---------------------------------------------------------------------------------
 (1) _setADC                                               0     0      0      31
                         _ConvertADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     2      0      31
                                             19 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___ltdiv                                             10     4      6     449
                                             19 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _VE                                                  15    13      2     612
                                             19 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 (1) _STP_Set                                              1     1      0      62
                                             20 BANK0      1     1      0
                          _STP_Close
                           _STP_Open
 ---------------------------------------------------------------------------------
 (1) _INIT                                                 0     0      0    1194
                         _ConvertADC
                            _OpenADC
                           _OpenPWM5
                         _OpenTimer6
                           _STP_Init
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (2) _STP_Init                                             1     1      0     203
                                             22 BANK0      1     1      0
                          _STP_Close
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                3     1      2     135
                                             19 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _STP_Close                                            1     1      0       0
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer6                                           1     1      0      62
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenPWM5                                             3     2      1     228
                                             19 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     394
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IAC_Stab                                             5     5      0     232
                                             20 BANK0      5     5      0
                           _STP_Open
 ---------------------------------------------------------------------------------
 (2) _STP_Open                                             1     1      0       0
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Get_Lag                                              2     2      0    4233
                                             20 BANK1      2     2      0
                          _ReadTable
 ---------------------------------------------------------------------------------
 (2) _ReadTable                                           16    12      4    4233
                                              4 BANK1     16    12      4
                           _IntpResL
 ---------------------------------------------------------------------------------
 (3) _IntpResL                                            11     6      5    3315
                                             30 BANK0      7     2      5
                                              0 BANK1      4     4      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (1) _Fuel_Calculate                                      10    10      0    3433
                                             30 BANK0      3     3      0
                                              0 BANK1      6     6      0
                            ___atdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (2) ___atdiv                                             11     5      6     653
                                             19 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (1) _Emul_PND                                             4     4      0    3820
                                             32 BANK0      4     4      0
                         _Emul_PND_T
                          _SetDCPWM5
 ---------------------------------------------------------------------------------
 (2) _SetDCPWM5                                            6     4      2     307
                                             19 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Emul_PND_T                                          16    14      2    3414
                                             30 BANK0      2     0      2
                                              0 BANK1     14    14      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (4) ___tmul                                              11     5      6    2533
                                             19 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             13    13      0    5183
                                             27 COMRAM    13    13      0
                            _ADCread
                        _Set_ADC_MAP
                        _Set_TPS_MAP
                             _Spark2
                               _Sync
                          _TMR0Event
 ---------------------------------------------------------------------------------
 (6) _TMR0Event                                            2     2      0    1025
                                              9 COMRAM     2     2      0
                      _Motor_stopped
                         _SMA_filter
 ---------------------------------------------------------------------------------
 (7) _Motor_stopped                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Sync                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Spark2                                               0     0      0     539
                      _OpenECompare3
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     340
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _OpenECompare3                                        6     4      2     199
                                              7 COMRAM     6     4      2
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) _Set_TPS_MAP                                          0     0      0      22
                       i1_ConvertADC
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (6) _Set_ADC_MAP                                          0     0      0      22
                       i1_ConvertADC
                       i1_SetChanADC
 ---------------------------------------------------------------------------------
 (7) i1_SetChanADC                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) i1_ConvertADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADCread                                             10    10      0    3575
                                             17 COMRAM    10    10      0
                          _EX_filter
                            _GetColt
                            _ReadADC
                         _SMA_filter
                           i1___tmul
 ---------------------------------------------------------------------------------
 (7) i1___tmul                                            11     5      6     501
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _GetColt                                              8     8      0    1158
                                              9 COMRAM     8     8      0
                            _ReadADC
                         _SMA_filter
 ---------------------------------------------------------------------------------
 (7) _SMA_filter                                           7     4      3    1025
                                              2 COMRAM     7     4      3
                            _ReadADC (ARG)
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _EX_filter                                            9     6      3     755
                                              2 COMRAM     9     6      3
                            _ReadADC (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_isr                                             5     5      0    2854
                                             14 BANK0      5     5      0
                          _CCP1Event
                          _CCP2Event
                          _CCP3Event
                         _SPARKEvent
                          _TMR1Event
                           i2_Spark2
 ---------------------------------------------------------------------------------
 (10) i2_Spark2                                            0     0      0     501
                    i2_OpenECompare3
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     311
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) i2_OpenECompare3                                     6     4      2     190
                                              7 BANK0      6     4      2
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (10) _TMR1Event                                           0     0      0       0
                    i2_Motor_stopped
 ---------------------------------------------------------------------------------
 (11) i2_Motor_stopped                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _SPARKEvent                                          0     0      0    1039
                       _SetInjection
 ---------------------------------------------------------------------------------
 (11) _SetInjection                                        0     0      0    1039
                  _AllInjectionClose
                      _OpenECompare1
                      _OpenECompare2
                         _ReadTimer3
 ---------------------------------------------------------------------------------
 (10) _CCP3Event                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _CCP2Event                                           0     0      0     570
                      _CompareGroup2
 ---------------------------------------------------------------------------------
 (11) _CompareGroup2                                       4     4      0     570
                                             10 BANK0      4     4      0
                  _AllInjectionClose
                           _CheckInj
                      _OpenECompare2
                         _ReadTimer3
 ---------------------------------------------------------------------------------
 (12) _OpenECompare2                                       6     4      2     363
                                              4 BANK0      6     4      2
                         _ReadTimer3 (ARG)
 ---------------------------------------------------------------------------------
 (12) _AllInjectionClose                                   0     0      0      34
                           _CheckInj
 ---------------------------------------------------------------------------------
 (10) _CCP1Event                                           0     0      0     744
                      _CompareGroup1
 ---------------------------------------------------------------------------------
 (11) _CompareGroup1                                       4     4      0     744
                                             10 BANK0      4     4      0
                           _CheckInj
                      _OpenECompare1
                         _ReadTimer3
 ---------------------------------------------------------------------------------
 (12) _ReadTimer3                                          4     2      2      71
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _OpenECompare1                                       6     4      2     571
                                              4 BANK0      6     4      2
                         _ReadTimer3 (ARG)
 ---------------------------------------------------------------------------------
 (13) _CheckInj                                            4     4      0      34
                                              2 BANK0      4     4      0
                             _LGP_st
 ---------------------------------------------------------------------------------
 (14) _LGP_st                                              2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Emul_PND
     _Emul_PND_T
       ___tmul
     _SetDCPWM5
   _Fuel_Calculate
     ___atdiv
     ___tmul
   _Get_Lag
     _ReadTable
       _IntpResL
         ___tmul
   _IAC_Stab
     _STP_Open
   _INIT
     _ConvertADC
     _OpenADC
     _OpenPWM5
     _OpenTimer6
     _STP_Init
       _STP_Close
       _delay
     _SetDCPWM5
   _STP_Set
     _STP_Close
     _STP_Open
   _VE
   ___ltdiv
   _setADC
     _ConvertADC
     _SetChanADC

 _low_isr (ROOT)
   _ADCread
     _EX_filter
       _ReadADC (ARG)
     _GetColt
       _ReadADC
       _SMA_filter
         _ReadADC (ARG)
     _ReadADC
     _SMA_filter
       _ReadADC (ARG)
     i1___tmul
   _Set_ADC_MAP
     i1_ConvertADC
     i1_SetChanADC
   _Set_TPS_MAP
     i1_ConvertADC
     i1_SetChanADC
   _Spark2
     _OpenECompare3
       ___lwdiv (ARG)
     ___lwdiv
   _Sync
   _TMR0Event
     _Motor_stopped
     _SMA_filter
       _ReadADC (ARG)

 _high_isr (ROOT)
   _CCP1Event
     _CompareGroup1
       _CheckInj
         _LGP_st
       _OpenECompare1
         _ReadTimer3 (ARG)
       _ReadTimer3
   _CCP2Event
     _CompareGroup2
       _AllInjectionClose
         _CheckInj
           _LGP_st
       _CheckInj
         _LGP_st
       _OpenECompare2
         _ReadTimer3 (ARG)
       _ReadTimer3
   _CCP3Event
   _SPARKEvent
     _SetInjection
       _AllInjectionClose
         _CheckInj
           _LGP_st
       _OpenECompare1
         _ReadTimer3 (ARG)
       _OpenECompare2
         _ReadTimer3 (ARG)
       _ReadTimer3
   _TMR1Event
     i2_Motor_stopped
   i2_Spark2
     i2_OpenECompare3
       i2___lwdiv (ARG)
     i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1A      2A       7       16.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      8C       5       87.5%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     28      4C       1       80.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     102      12        0.0%
DATA                 0      0     102       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Aug 14 12:29:26 2022

   Fuel_Calculate@Injection 0103                           _X FFC3                           _Y FFF5  
        __size_of_CCP1Event 0006                           _p 0062          __size_of_CCP2Event 0006  
        __size_of_CCP3Event 0008           TMR0Event@ADCdelay 0029                          _GO 007E11  
                        _VE 0FAE                          _TO 007E83            ___atdiv@quotient 00E2  
                        bsr 000FE0          i2___lwdiv@dividend 00C7          _Flag_setADC_chenal 0261  
              __CFG_CP0$OFF 000000                 main@Minutes 0063                 main@Seconds 0064  
              __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000  
                       ?_VE 00DA                         VE@a 00E3                         l332 0A0C  
                       _ADC 0033                         l480 0AD8                         l481 0B6C  
                       l378 137E                         l563 052A                         l580 050E  
                       l484 0B32                         l581 0514                         l477 0AAE  
                       l582 051C                         l566 03AC                         l583 051E  
                       l751 1858                         l479 0ACC                         l584 0526  
                       l568 03C4                         l728 16CE                         l752 1852  
                       l736 1794                         l488 0B6A                         l569 03C2  
                       l578 0512                         l589 059C                         _LC0 007C58  
                       _LC1 007C59                         _LB3 007C53                         l848 1A54  
                       _LD0 007C60                         _LC2 007C5A                         _LB4 007C54  
                       _LD1 007C61                         _LC3 007C5B                         _LD2 007C62  
                       _LC4 007C5C                         _LD3 007C63                         _LC5 007C5D  
                       _LD4 007C64                         _LD5 007C65                         _ECU 0065  
                       l985 1CA2                         l986 1CA4                         _BOR 007E80  
                       _LAG FFE1                __CFG_CPB$OFF 000000                         _PR2 000FBB  
                       _PR4 000F52                __CFG_CPD$OFF 000000                         _PR6 000F4B  
           ?_Fuel_Calculate 0001                         wreg 000FE8             __end_of_ADCread 0392  
                      ??_VE 00DC             __end_of_LAG_LPG FFF5             ReadTimer3@timer 00C9  
              __CFG_LVP$OFF 000000                        _C1IF 007D0E                        l1141 1100  
                      _C2IE 007D05                        _C2IF 007D0D                        _C2IP 007D15  
                      l1461 180E                        l1466 1802                        l5004 0DBC  
                      l5040 04CC                        l5032 045A                        l5104 186C  
                      l5200 0B48                        l5042 0506                        l5034 04C2  
                      l5114 1CB8                        l5130 17DE                        l5028 03F2  
                      l5126 17D0                        l5222 0B9A                        l5206 0B5A  
                      l4520 0674                        l5056 0546                        l5128 17DA  
                      l5216 0B8E                        l4514 0640                        l5058 0590  
                      l5074 102E                        l4612 088E                        l4620 169C  
                      l4460 1672                        l4356 1C1A                        l5252 0BDE  
                      l5236 0BB8                        l5228 0BA8                        l5156 0A90  
                      l5148 0A80                        l4526 0740                        l4382 17A6  
                      l4358 1C2A                        l5246 0BCE                        l5174 0AC4  
                      l4632 16E0                        l4456 1658                        l4376 177C  
                      l5248 0BD0                        l4650 10BA                        l4626 16B6  
                      l5194 0B36                        l4660 10DC                        l4644 1096  
                      l5188 0AFC                        l4670 110C                        l4486 1C68  
                      l4904 1954                        l4656 10CE                        l4840 09F8  
                      l4920 1392                        l4674 111C                        l4658 10D8  
                      l4914 138A                        l4844 0A00                        l4940 13BA  
                      l4932 13AA                        l4924 139A                        l4916 138E  
                      l4854 0A18                        l4942 13C0                        _ADIE 007CEE  
                      l4936 13B2                        l4928 13A2                        l4944 13C4  
                      _ADIF 007CF6                        l4946 13E2                        l4990 0D42  
                      l4984 0D22                        l4992 0D7A                        _ADIP 007CFE  
                      l4998 0D9C                        _GIEH 007F97                        _GIEL 007F96  
                      _T0IF 007F92                        _LATA 000F89                        _LATB 000F8A  
                      _LATC 000F8B                        _LATD 000F8C                        _LATE 000F8D  
                      _IPEN 007E87                        u5035 1084                        u5045 10A8  
                      _INIT 090A                        u4450 159C                        u5420 04F6  
                      u4455 1592                        u5425 04EE                        u5505 101E  
                      u4715 05F2                        u5515 1060                        u5380 04B2  
                      _RCIF 007CF5                        u4745 0680                        u5385 04AA  
                      u4905 0798                        u4755 06BE                        u4685 1AEC  
                      u4775 0730                        u4785 0772                        u5770 0B58  
                      u5937 13E4                        u5947 1C20                        _TMR1 000FCE  
                      _TMR6 000F4C                        _TMRC 003B                        _WPUB 000F61  
                      _Ign0 FBC3                        _Sync 1D7C                        _main 0A7C  
     IAC_Stab@Step_Init_Pos 00DC                        fsr1h 000FE2          i2___lwdiv@quotient 00CC  
                      fsr2h 000FDA                        fsr1l 000FE1                        indf2 000FDF  
                      fsr2l 000FD9               __CFG_BORV$220 000000                  ReadTable@a 0104  
                      prodh 000FF4                        prodl 000FF3                        start 00D4  
           __end_of_STP_Set 1CC4               __CFG_IESO$OFF 000000             __end_of_GetColt 0FAE  
           __end_of_Get_Lag 0DF4             __end_of_ReadADC 1D60            __end_of_IAC_Stab 187A  
         TMR0Event@STPdelay 002D             __end_of_OpenADC 1A58                       ?_INIT 0001  
           i2_Motor_stopped 1BEA                       ?_Sync 0001         OpenECompare1@config 00D0  
                     ?_main 0001             __end_of___atdiv 112A         OpenECompare2@config 00D0  
                     _T0CON 000FD5                       _T1CON 000FCD                       _T2CON 000FBA  
                     _T3CON 000FB1                       _RC1IE 007CED                       _RC1IP 007CFD  
           __end_of___ltdiv 181C                       _T6CON 000F4A             __end_of___lwdiv 19C6  
       OpenECompare3@config 000D                       i1l414 01B4                       i1l407 0120  
                     i1l409 011A                       i1l418 020A                       i1l526 009E  
                     i1l392 0F68                       i1l628 119E                       i1l396 0F72  
                     i1l398 0F8E                       i1l399 0F90                       i2l440 1B56  
                     i2l602 145E                       i2l515 18BE                       i1l926 12BA  
                     i2l811 14BA                       i2l813 14B2                       i2l823 1926  
                     i2l816 14D6                       i2l926 122A         OpenECompare1@period 00CB  
                     i2l899 1340                       _RCREG 000FAE                 _AirPressure 0060  
                     _TMR0H 000FD7                       _TMR1H 000FCF                       _TX1IE 007CEC  
                     _TMR0L 000FD6                       _TMR3H 000FB3                       _TMR1L 000FCE  
                     _TMR3L 000FB2                       _TX1IP 007CFC         OpenECompare2@period 00CB  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96                 ?_SPARKEvent 0001  
                     _TXREG 000FAD         OpenECompare3@period 0008               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
          __end_of_RPM2Tabl FFC3              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
                     _nRBPU 007F8F          __size_of_TMR0Event 00E8               __CFG_WRTB$OFF 000000  
        __size_of_TMR1Event 000E               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000                       _delay 1C18                  _Emul_PND_T 05A6  
         __end_of_CCP1Event 1D74          __CFG_MCLRE$EXTMCLR 000000           __end_of_CCP2Event 1D6E  
         __end_of_CCP3Event 1D68               ??_Set_ADC_MAP 0003                  _ConvertADC 1D74  
          __end_ofi2_Spark2 1BEA          __size_of_EX_filter 0118              __pbitbssCOMRAM 0258  
           __end_of_low_isr 00D4                       tablat 000FF5            __end_ofi1___tmul 154E  
               ?_SMA_filter 0003            __end_of_STP_Init 1C88            __end_of_STP_Open 16F6  
                     status 000FD8              _Flag_Sec_Clock 025D            __end_of_CheckInj 146A  
            __CFG_HFOFST$ON 000000              __CFG_FOSC$HSMP 000000              __CFG_PBADEN$ON 000000  
        __size_ofi2___lwdiv 004A                __end_of_INIT 0A7C                __end_of_Ign0 FDC3  
        __size_of_STP_Close 0062             __initialization 1AA0                __end_of_Sync 1D7E  
          __end_of_Emul_PND 197C                  _Load_array 00AF                __end_of_main 0BE2  
               _Flag_FuelEq 025A              _Flag_Send_data 025E                  _ReadTimer3 1D16  
             ??_Set_TPS_MAP 0003          ADCread@ADCPressure 0018                      ??_INIT 00E0  
          __end_of_IntpResL 15BA                      ??_Sync 0001                   ??_ADCread 0012  
          __end_of_OpenPWM5 168E                      ??_main 00EC               __activetblptr 000003  
            __CFG_PLLCFG$ON 000000                  _SetChanADC 1CC4                      VE@Span 00E5  
                    ?_delay 00DA                      VE@hidt 00E7                      _ADCON0 000FC2  
                    _ADCON1 000FC1                      _ADCON2 000FC0                      _CCP1IE 007CEA  
                    _CCP1IF 007CF2                      _CCP2IE 007D00                      _CCP2IF 007D08  
                    _CCP3IE 007BD0                      _CCP3IF 007BD8                      _CCP1IP 007CFA  
                    _CCP2IP 007D10                      _CCP3IP 007BE0                      _ADRESH 000FC4  
                    _ADRESL 000FC3                      _CCPR1H 000FBF                      _CCPR2H 000F68  
                    _CCPR3H 000F5F                      _CCPR1L 000FBE                      _CCPR2L 000F67  
                    _CCPR3L 000F5E                      _CCPR5L 000F55                      _ANSELA 000F38  
                    _ANSELB 000F39                      _ANSELC 000F3A                      _ANSELD 000F3B  
                    _ANSELE 000F3C                      _T1GCON 000FCC                      _T3GCON 000FB4  
                 ??_STP_Set 00DB                      _INT0IE 007F94                      _INT0IF 007F91  
                    _INT1IE 007F83                      _INT1IF 007F80                      _INT2IF 007F81  
                    _INT1IP 007F86                      _INT2IP 007F87                      i1l3016 11A4  
                    i1l3240 0F7E                      i1l3226 0F5E                      i1l1491 19BC  
                    i1l3254 0FA2                      i1l3272 0C76                      i1l3352 1296  
                    i1l3452 198C                      i1l4260 0056                      i1l3454 1994  
                    i1l3464 19B2                      i1l3456 1998                      i1l3730 0E6A  
                    i1l3722 0E48                      i1l3714 0E28                      i1l3706 0E0C  
                    i1l4282 0080                      i1l4274 0074                      i1l4266 0060  
                    i1l3740 0E94                      i1l3732 0E70                      i1l3724 0E4E  
                    i1l3716 0E2C                      i1l3708 0E12                      i1l4294 0094  
                    i1l4288 008A                      i1l3850 020E                      i1l3842 01CC  
                    i1l3818 0124                      i1l3922 1B98                      i1l3746 0EB0  
                    i1l3738 0E8E                      i1l3836 01BA                      i1l3828 0184  
                    i1l3748 0EB6                      i1l3870 02DC                      i1l3862 02AE  
                    i1l3880 030E                      i2l1491 1A06                      i1l3892 036A  
                    i1l3876 02E6                      i2l4310 1C60              __CFG_WDTEN$OFF 000000  
                _OpenTimer6 1C88                      i1l3888 0354                      i2l4334 144C  
                    i2l4406 1A8E                      i2l4416 131C                      i2l5144 1BC6  
                    i2l5260 188C                      i2l4542 148A                      i2l4712 19D6  
                    i2l5272 18A0                      i2l4714 19DE                      i2l5266 1896  
                    i2l4564 18F6                      i2l4724 19FC                      i2l4716 19E2  
                    i2l5284 18B4                      i2l5278 18AA                      i2l4594 1746  
                    i2l4588 172A                      i2l4688 1206                      i2l4972 1B58  
                    i2l4968 1B4C               LGP_st@LPGPres 00C7                      _RCSTA1 000FAB  
                    _OSCCON 000FD3                   ??_GetColt 000A                      _LGP_st 1C3E  
                 ??_Get_Lag 0114                      _TMR0IE 007F95                      _SPBRG1 000FAF  
                    _TMR0IF 007F92                      _TMR1IE 007CE8                      _TMR1IF 007CF0  
                    _TMR2IE 007CE9                      _TMR0IP 007F8A                      _TMR3IE 007D01  
                    _TMR1IP 007CF8                      _TMR0ON 007EAF                      _TMR1ON 007E68  
        __size_of_SetDCPWM5 0040          __size_of_ReadTable 0184                   ??_ReadADC 0003  
                    _TXSTA1 000FAC       __end_of_Motor_stopped 1B8E                      _Lambda FDC3  
                 ??_OpenADC 00DC         __end_of_Set_ADC_MAP 1D02              __CFG_XINST$OFF 000000  
       __size_of_SPARKEvent 003E     __end_ofi2_Motor_stopped 1C18                      _Spark2 1B8E  
          __end_of_high_isr 18D4           __end_of_TMR0Event 0EDC           __end_of_TMR1Event 1D56  
                    ___tmul 15BA                   ??___atdiv 00E0           __end_of_SPD_CONST FFFE  
            __CFG_STVREN$ON 000000             GetColt@CLT_DATA 0010                   ??___ltdiv 00E0  
                 ??___lwdiv 0005             _Flag_Corr_equal 0258      __size_of_OpenECompare1 0048  
    __size_of_OpenECompare2 0082      __size_of_OpenECompare3 0086                      _setADC 1376  
         __end_of_EX_filter 0CFA                      clear_0 1AA6                      clear_1 1AB6  
          OpenTimer6@config 00DA         __size_of_SMA_filter 00B4         __end_of_Set_TPS_MAP 1CEE  
             ?_SetInjection 0001       i1___tmul@multiplicand 0004           __end_ofi2___lwdiv 1A10  
              __mediumconst FBC2                   ??_low_isr 001C                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8           __end_of_STP_Close 17BC  
               ?_Emul_PND_T 00E5                 ?_ConvertADC 0001                   ?_IAC_Stab 0001  
                __accesstop 0060     __end_of__initialization 1ADC                 _LoadCounter 0037  
            __pcstackCOMRAM 0001                __pidataBANK1 1D28                 ?_ReadTimer3 00C7  
             __end_of_delay 1C3E            ??_Fuel_Calculate 00E5                  __end_of_VE 1070  
                 ?i2_Spark2 0001                   ?i1___tmul 0001           __end_of_SetDCPWM5 1B22  
         __end_of_ReadTable 090A         i1SetChanADC@channel 0002                   ?_STP_Init 0001  
            ??_SetInjection 00D1                 ?_SetChanADC 0001                   ?_STP_Open 0001  
                 ?_CheckInj 0001                     ??_delay 00DC         i1___tmul@multiplier 0001  
                 ?_Emul_PND 0001                  ??_IAC_Stab 00DB               _OpenECompare1 1A58  
             _OpenECompare2 12F4               _OpenECompare3 126E                  __pbssBANK0 0060  
               _Set_ADC_MAP 1CEE                 ?_OpenTimer6 0001                _Flag_set_IAC 0262  
                   ?_LGP_st 0001                   ?_IntpResL 00E5                   ?_OpenPWM5 00DA  
        __CFG_CCP2MX$PORTC1 000000                     ?_Spark2 0001            ?i2_Motor_stopped 0001  
  __size_ofi2_OpenECompare3 0090                     VE@Index 00E4       __end_of_CompareGroup1 14DE  
     __end_of_CompareGroup2 192E                     VE@Table 00DA                     ?___tmul 00DA  
              IntpResL@Hi_d 00E7          __CFG_CCP3MX$PORTB5 000000                 _Set_TPS_MAP 1CDA  
                   _CCP1CON 000FBD                     _CCP2CON 000F66                     _CCP3CON 000F5D  
       __size_of_Emul_PND_T 01E0                     _CCP5CON 000F54                     ?_setADC 0001  
                   VE@lowdt 00E6                IntpResL@prom 00EA         __size_of_ConvertADC 0004  
                ??i2_Spark2 00D4                     _ADCread 00D8                  ??i1___tmul 0007  
                ??_STP_Init 00DD                     _LAG_LPG FFEB            EX_filter@Massive 0005  
                ??_STP_Open 00DA                  ??_CheckInj 00C9                ??_SPARKEvent 00D1  
                   _INTEDG0 007F8E                     _INTEDG1 007F8D                     _INTEDG2 007F8C  
                   _OSCCON2 000FD2                     _SPBRGH1 000FB0              ?_OpenECompare1 00CB  
            ?_OpenECompare2 00CB              ?_OpenECompare3 0008                   ?_high_isr 0001  
                ??_Emul_PND 00E7         __size_of_ReadTimer3 0012                     _STP_Set 1CAA  
                   _GetColt 0EDC                ??_SMA_filter 0006                     _Get_Lag 0CFA  
           __size_of_LGP_st 0026                   _CCP1Event 1D6E                  ??_IntpResL 0100  
                 _CCP2Event 1D68                   _CCP3Event 1D60                     _ReadADC 1D56  
                ??_OpenPWM5 00DB             __CFG_PWRTEN$OFF 000000                     _OpenADC 1A10  
                   __Hparam 0000         __size_of_SetChanADC 0016            _Flag_FiveSeconds 0259  
                   __Lparam 0000          __end_of_SPARKEvent 1B60             __size_of_Spark2 002E  
         SMA_filter@Massive 0005                     ___atdiv 1070             __size_of___tmul 006C  
                   ___ltdiv 17BC                     ___lwdiv 197C               ?i1_ConvertADC 0001  
           __size_of_setADC 007A                     __pcinit 1AA0           _AllInjectionClose 1D38  
                   __ramtop 1000         __size_of_OpenTimer6 0022                     __ptext0 0A7C  
                   __ptext1 1376                     __ptext2 1CC4                     __ptext3 17BC  
                   __ptext4 0FAE                     __ptext5 1CAA                     __ptext6 090A  
                   __ptext7 1C64                     __ptext8 1C18                     __ptext9 175A  
                 STP_Init@a 00DD          ?_AllInjectionClose 0001                   _T2CONbits 000FBA  
        __end_of_SMA_filter 11DE                     delay@ms 00DA                   _T4CONbits 000F51  
                   _low_isr 0018                   _T6CONbits 000F4A         ??_AllInjectionClose 00CD  
            OpenADC@config2 00DA              OpenADC@config3 00DB                  ??_high_isr 00D5  
            __pintcode_body 187A                   _CLT_array 008B        end_of_initialization 1ADC  
                 _IAT_array 00A3                     int_func 187A                  ?_CCP1Event 0001  
                ?_CCP2Event 0001                  ?_CCP3Event 0001                   _MAP_array 003F  
             ReadTable@Span 0112               ?i1_SetChanADC 0001        __end_of_SetInjection 175A  
          ___ltdiv@dividend 00DA                   _RCSTAbits 000FAB                     postdec1 000FE5  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE              ??i1_ConvertADC 0001   __end_of_AllInjectionClose 1D48  
                 _EXT_array 0097                   _TMR0Event 0DF4                   _TMR1Event 1D48  
                 _SPD_CONST FFFB           ??i2_OpenECompare3 00D0                   _EX_filter 0BE2  
 Fuel_Calculate@GazPressure 0101                   _TRISAbits 000F92                   _TRISBbits 000F93  
                 _TRISCbits 000F94                   _TRISEbits 000F96             ??_OpenECompare1 00CD  
           ??_OpenECompare2 00CD             ??_OpenECompare3 000A                  main@MSpeed 0118  
          ___ltdiv@quotient 00E0                  main@TCycle 0116                ??_Emul_PND_T 0100  
               SMA_filter@a 0003                 SMA_filter@j 0009                 SMA_filter@n 0008  
         i2___lwdiv@divisor 00C9                ??_ConvertADC 00DA                   i2___lwdiv 19C6  
         i2___lwdiv@counter 00CB                   _STP_Close 175A                   _PWR_array 00BB  
         __size_of_IAC_Stab 005E              ??i1_SetChanADC 0001                   _TXSTAbits 000FAC  
            __end_of_LGP_st 1C64              __end_of_Lambda FEC3                ??_ReadTimer3 00C9  
            __end_of_Spark2 1BBC                   IntpResL@C 00E9            TMR0Event@TXdelay 002F  
            __end_of___tmul 1626          __end_of_Emul_PND_T 0786                  ?_TMR0Event 0001  
                ?_TMR1Event 0001          __end_of_ConvertADC 1D78              __end_of_setADC 13F0  
              ??_SetChanADC 00DA               _Flag_Init_Pos 025C                  ?_EX_filter 0003  
         __size_ofi2_Spark2 002E         start_initialization 1AA0           __size_ofi1___tmul 0070  
               __end_of_LAG FFEB      __size_of_Motor_stopped 002E                   _SetDCPWM5 1AE2  
         __size_of_STP_Init 0024           __size_of_STP_Open 0068                   _ReadTable 0786  
         __size_of_CheckInj 007A          _Flag_UART_recieved 0260             SetDCPWM5@DCycle 00DE  
                ?i2___lwdiv 00C7                ?_Set_ADC_MAP 0001               setADC@ADCChan 003E  
              ??_OpenTimer6 00DA                  ?_STP_Close 0001          __end_of_ReadTimer3 1D28  
                  ??_LGP_st 00C7           __size_of_Emul_PND 004E                 ??_CCP1Event 00D5  
               ??_CCP2Event 00D5                 ??_CCP3Event 00C7           __size_of_IntpResL 006C  
        __end_of_SetChanADC 1CDA                    ??_Spark2 000E           __size_of_OpenPWM5 0068  
                  ??___tmul 00E0  __size_of_AllInjectionClose 0010                ?_Set_TPS_MAP 0001  
               __pdataBANK1 011A                    ??_setADC 00DC                    ?_ADCread 0001  
            ___tmul@product 00E2            _Flag_Speed_equal 025F          __end_of_OpenTimer6 1CAA  
               __pbssCOMRAM 0029               __pcstackBANK0 00C7               __pcstackBANK1 0100  
                ?_SetDCPWM5 00DA                  ?_ReadTable 0104                   __end_of_X FFE1  
                 __end_of_Y FFFB        __end_ofi1_ConvertADC 1D7C                    ?_STP_Set 0001  
     __size_of_SetInjection 0064                    ?_GetColt 0001                    ?_Get_Lag 0001  
         __size_of_high_isr 18CC      CompareGroup1@Injection 00D3                    ?_ReadADC 0001  
          ReadTable@Massive 0106                    ?_OpenADC 00DA               _Motor_stopped 1B60  
          ___lwdiv@dividend 0001      CompareGroup2@Injection 00D3                   __pintcode 0008  
             __pmediumconst FBC2                    ?___atdiv 00DA                    ?___ltdiv 00DA  
                  ?___lwdiv 0001                 __pintcodelo 0018                 ??_TMR0Event 000A  
               ??_TMR1Event 00C7            __CFG_PRICLKEN$ON 000000               IntpResL@Low_d 00E5  
  __size_ofi2_Motor_stopped 002E        __end_ofi1_SetChanADC 1D16                    _BAUDCON1 000FB8  
               ??_EX_filter 0006                _SetInjection 16F6               TMR0Event@mckc 0031  
                  ?_low_isr 0001     __size_of_Fuel_Calculate 0214                    _CCPTMRS0 000F49  
                  _CCPTMRS1 000F48            ___lwdiv@quotient 0005              __size_of_delay 0026  
    __size_of_CompareGroup1 0074      __size_of_CompareGroup2 005A                 ??i2___lwdiv 00CB  
                  _IAC_Stab 181C                 __size_of_VE 00C2                    STP_Set@p 00DB  
               ??_STP_Close 00DA               OpenADC@config 00DE                    _PIE1bits 000F9D  
                  _PIE2bits 000FA0                    _PIE4bits 000F7A                    _PIE5bits 000F7D  
            ?_Motor_stopped 0001                    i1u341_20 0160                    i1u341_25 0158  
           i2_OpenECompare3 11DE                    i1u349_20 0298                    i1u349_25 0290  
           ___ltdiv@divisor 00DD                    _PIR1bits 000F9E                    i1u595_27 1CE4  
                  _PIR2bits 000FA1                    i1u596_27 1CF8                    _PIR4bits 000F7B  
                  _PIR5bits 000F7E             ___ltdiv@counter 00E3            __CFG_WDTPS$32768 000000  
                  _RPM2Tabl FEC3                    i2_Spark2 1BBC                  _ADCON0bits 000FC2  
                  i1___tmul 14DE                  EX_filter@a 0003                  EX_filter@n 000A  
          __size_of_ADCread 02BA                    _STP_Init 1C64                    _STP_Open 168E  
                  _CheckInj 13F0                    _VE_table 011A         ___tmul@multiplicand 00DD  
                  _Flag_IAC 025B        OpenPWM5@timer_source 00DA                 ??_SetDCPWM5 00DC  
           TMR0Event@Cdelay 002B                 ??_ReadTable 0108                   copy_data0 1AD0  
                  _Emul_PND 192E            __size_of_STP_Set 001A                    _Cylinder 003D  
                  _IntpResL 154E            __size_of_GetColt 00D2        __size_of_Set_ADC_MAP 0014  
          __size_of_Get_Lag 00FA                    _OpenPWM5 1626                    __Hparam0 0000  
          __size_of_ReadADC 000A                    __Lparam0 0000            __size_of_OpenADC 0048  
        __CFG_BOREN$SBORDIS 000000            ADCread@EGRD_CURR 001A           __CFG_P2BMX$PORTD2 000000  
             _CompareGroup1 146A               _CompareGroup2 18D4            __size_of___atdiv 00BA  
          __size_of___ltdiv 0060            __size_of___lwdiv 004A        __size_of_Set_TPS_MAP 0014  
     __size_ofi1_ConvertADC 0004             ___lwdiv@divisor 0003             ___lwdiv@counter 0007  
          __size_of_low_isr 00BC                    __ptext10 1C88                    __ptext11 1626  
                  __ptext20 1070                    __ptext12 1A10                    __ptext21 192E  
                  __ptext13 1D74                    __ptext30 197C                    __ptext22 1AE2  
                  __ptext14 181C                    __ptext31 126E                    __ptext23 05A6  
                  __ptext15 168E                    __ptext40 1D56                    __ptext32 1CDA  
                  __ptext24 15BA                    __ptext16 0CFA                    __ptext41 0BE2  
                  __ptext33 1CEE                    __ptext17 0786                    __ptext50 1D60  
                  __ptext34 1D02                    __ptext26 0DF4                    __ptext18 154E  
                  __ptext51 1D68                    __ptext43 1BBC                    __ptext35 1D78  
                  __ptext27 1B60                    __ptext19 0392                    __ptext60 1C3E  
                  __ptext52 18D4                    __ptext44 19C6                    __ptext36 00D8  
                  __ptext28 1D7C                    __ptext53 12F4                    __ptext45 11DE  
                  __ptext37 14DE                    __ptext29 1B8E                    __ptext54 1D38  
                  __ptext46 1D48                    __ptext38 0EDC                    __ptext55 1D6E  
                  __ptext47 1BEA                    __ptext39 112A                    __ptext56 146A  
                  __ptext48 1B22                    __ptext57 1D16                    __ptext49 16F6  
                  __ptext58 1A58                    __ptext59 13F0              OpenPWM5@period 00DC  
         ??i2_Motor_stopped 00C7       __end_of_OpenECompare1 1AA0       __end_of_OpenECompare2 1376  
     __end_of_OpenECompare3 12F4                    _high_isr 0008               __size_of_INIT 0172  
   __end_ofi2_OpenECompare3 126E          SetDCPWM5@dutycycle 00DA               __size_of_Sync 0002  
           ??_Motor_stopped 0001               __size_of_main 0166                IAC_Stab@CLTR 00DB  
            ?_CompareGroup1 0001              ?_CompareGroup2 0001       __size_ofi1_SetChanADC 0014  
              i1_ConvertADC 1D78                 _LPGPressure 0035       i2OpenECompare3@config 00D3  
     i2OpenECompare3@period 00CE                  _INTCONbits 000FF2              _Fuel_Calculate 0392  
          Emul_PND_T@column 010A                    intlevel1 0000                    intlevel2 0000  
          i1___tmul@product 0009              ReadTable@Index 0113           SetChanADC@channel 00DB  
              i1_SetChanADC 1D02           ___tmul@multiplier 00DA             Emul_PND_T@lowdt 010B  
    __end_of_Fuel_Calculate 05A6                  _SPARKEvent 1B22           __CFG_T3CMX$PORTC0 000000  
          ___atdiv@dividend 00DA                 _PUMPCounter 0039              Emul_PND_T@hidt 010C  
            Emul_PND_T@pres 010D              Emul_PND_T@span 0109            ?i2_OpenECompare3 00CE  
             Emul_PND_T@MAP 00E5                  _SMA_filter 112A               Emul_PND_T@RPM 0107  
           ___atdiv@divisor 00DD               Emul_PND_T@out 0108             ___atdiv@counter 00E0  
              Emul_PND@Vout 00E9             ??_CompareGroup1 00D1             ??_CompareGroup2 00D1  
              ___atdiv@sign 00E1  
